OF = zeros(72,1);
OF(1) = acc_x*dt - acc_bias_x*dt - (da_prev_z*(acc_y*dt - acc_bias_y*dt))/12 + (da_prev_y*(acc_z*dt - acc_bias_z*dt))/12 + (dv_prev_y*(dt*omega_z - dt*omega_bias_z - (da_prev_y*(dt*omega_x - dt*omega_bias_x))/12 + (da_prev_x*(dt*omega_y - dt*omega_bias_y))/12))/12 - (dv_prev_z*(dt*omega_y - dt*omega_bias_y + (da_prev_z*(dt*omega_x - dt*omega_bias_x))/12 - (da_prev_x*(dt*omega_z - dt*omega_bias_z))/12))/12 - ((acc_y*dt - acc_bias_y*dt)*(dt*omega_z - dt*omega_bias_z - (da_prev_y*(dt*omega_x - dt*omega_bias_x))/12 + (da_prev_x*(dt*omega_y - dt*omega_bias_y))/12))/2 + ((acc_z*dt - acc_bias_z*dt)*(dt*omega_y - dt*omega_bias_y + (da_prev_z*(dt*omega_x - dt*omega_bias_x))/12 - (da_prev_x*(dt*omega_z - dt*omega_bias_z))/12))/2;
OF(2) = acc_y*dt - acc_bias_y*dt + (da_prev_z*(acc_x*dt - acc_bias_x*dt))/12 - (da_prev_x*(acc_z*dt - acc_bias_z*dt))/12 - (dv_prev_x*(dt*omega_z - dt*omega_bias_z - (da_prev_y*(dt*omega_x - dt*omega_bias_x))/12 + (da_prev_x*(dt*omega_y - dt*omega_bias_y))/12))/12 + (dv_prev_z*(dt*omega_x - dt*omega_bias_x - (da_prev_z*(dt*omega_y - dt*omega_bias_y))/12 + (da_prev_y*(dt*omega_z - dt*omega_bias_z))/12))/12 + ((acc_x*dt - acc_bias_x*dt)*(dt*omega_z - dt*omega_bias_z - (da_prev_y*(dt*omega_x - dt*omega_bias_x))/12 + (da_prev_x*(dt*omega_y - dt*omega_bias_y))/12))/2 - ((acc_z*dt - acc_bias_z*dt)*(dt*omega_x - dt*omega_bias_x - (da_prev_z*(dt*omega_y - dt*omega_bias_y))/12 + (da_prev_y*(dt*omega_z - dt*omega_bias_z))/12))/2;
OF(3) = acc_z*dt - acc_bias_z*dt - (da_prev_y*(acc_x*dt - acc_bias_x*dt))/12 + (da_prev_x*(acc_y*dt - acc_bias_y*dt))/12 + (dv_prev_x*(dt*omega_y - dt*omega_bias_y + (da_prev_z*(dt*omega_x - dt*omega_bias_x))/12 - (da_prev_x*(dt*omega_z - dt*omega_bias_z))/12))/12 - (dv_prev_y*(dt*omega_x - dt*omega_bias_x - (da_prev_z*(dt*omega_y - dt*omega_bias_y))/12 + (da_prev_y*(dt*omega_z - dt*omega_bias_z))/12))/12 - ((acc_x*dt - acc_bias_x*dt)*(dt*omega_y - dt*omega_bias_y + (da_prev_z*(dt*omega_x - dt*omega_bias_x))/12 - (da_prev_x*(dt*omega_z - dt*omega_bias_z))/12))/2 + ((acc_y*dt - acc_bias_y*dt)*(dt*omega_x - dt*omega_bias_x - (da_prev_z*(dt*omega_y - dt*omega_bias_y))/12 + (da_prev_y*(dt*omega_z - dt*omega_bias_z))/12))/2;
OF(4) = dt*omega_x - dt*omega_bias_x - (da_prev_z*(dt*omega_y - dt*omega_bias_y))/12 + (da_prev_y*(dt*omega_z - dt*omega_bias_z))/12;
OF(5) = dt*omega_y - dt*omega_bias_y + (da_prev_z*(dt*omega_x - dt*omega_bias_x))/12 - (da_prev_x*(dt*omega_z - dt*omega_bias_z))/12;
OF(6) = dt*omega_z - dt*omega_bias_z - (da_prev_y*(dt*omega_x - dt*omega_bias_x))/12 + (da_prev_x*(dt*omega_y - dt*omega_bias_y))/12;
OF(7) = acc_z*dt - acc_bias_z*dt;
OF(8) = acc_y*dt - acc_bias_y*dt;
OF(9) = acc_x*dt - acc_bias_x*dt;
OF(10) = q1^2 + q2^2 - q3^2 - q4^2;
OF(11) = q1^2 - q2^2 + q3^2 - q4^2;
OF(12) = q1^2 - q2^2 - q3^2 + q4^2;
OF(13) = (OF(7)*da_prev_z*dt)/24 + (OF(8)*da_prev_y*dt)/24 - (da_prev_y*dt*dv_prev_y)/144 - (da_prev_z*dt*dv_prev_z)/144;
OF(14) = (OF(7)*da_prev_z*dt)/24 + (OF(9)*da_prev_x*dt)/24 - (da_prev_x*dt*dv_prev_x)/144 - (da_prev_z*dt*dv_prev_z)/144;
OF(15) = (OF(8)*da_prev_y*dt)/24 + (OF(9)*da_prev_x*dt)/24 - (da_prev_x*dt*dv_prev_x)/144 - (da_prev_y*dt*dv_prev_y)/144;
OF(16) = (OF(6)*dt)/2 + (da_prev_z*dt)/12;
OF(17) = (OF(5)*dt)/2 + (da_prev_y*dt)/12;
OF(18) = (OF(4)*dt)/2 + (da_prev_x*dt)/12;
OF(19) = (OF(9)*dt)/2 - (dt*dv_prev_x)/12 + (OF(8)*da_prev_z*dt)/24 - (da_prev_z*dt*dv_prev_y)/144;
OF(20) = (OF(8)*dt)/2 - (dt*dv_prev_y)/12 - (OF(9)*da_prev_z*dt)/24 + (da_prev_z*dt*dv_prev_x)/144;
OF(21) = (OF(9)*dt)/2 - (dt*dv_prev_x)/12 - (OF(7)*da_prev_y*dt)/24 + (da_prev_y*dt*dv_prev_z)/144;
OF(22) = (OF(7)*dt)/2 - (dt*dv_prev_z)/12 + (OF(9)*da_prev_y*dt)/24 - (da_prev_y*dt*dv_prev_x)/144;
OF(23) = (OF(8)*dt)/2 - (dt*dv_prev_y)/12 + (OF(7)*da_prev_x*dt)/24 - (da_prev_x*dt*dv_prev_z)/144;
OF(24) = (OF(7)*dt)/2 - (dt*dv_prev_z)/12 - (OF(8)*da_prev_x*dt)/24 + (da_prev_x*dt*dv_prev_y)/144;
OF(25) = dt*omega_z - dt*omega_bias_z;
OF(26) = dt*omega_y - dt*omega_bias_y;
OF(27) = dt*omega_x - dt*omega_bias_x;
OF(28) = 2*q1*q4 - 2*q2*q3;
OF(29) = 2*q1*q3 - 2*q2*q4;
OF(30) = 2*q1*q2 - 2*q3*q4;
OF(31) = 2*q1*q4 + 2*q2*q3;
OF(32) = 2*q1*q3 + 2*q2*q4;
OF(33) = 2*q1*q2 + 2*q3*q4;
OF(34) = (OF(26)*da_prev_x)/24 - (OF(27)*da_prev_y)/24 + (dt*omega_z)/2 - (dt*omega_bias_z)/2;
OF(35) = (OF(25)*da_prev_x)/24 - (OF(27)*da_prev_z)/24 - (dt*omega_y)/2 + (dt*omega_bias_y)/2;
OF(36) = (OF(25)*da_prev_y)/24 - (OF(26)*da_prev_z)/24 + (dt*omega_x)/2 - (dt*omega_bias_x)/2;
OF(37) = (da_prev_z*dt)/24;
OF(38) = (da_prev_y*dt)/24;
OF(39) = (da_prev_x*dt)/24;
OF(40) = 2*OF(1)*q2 + 2*OF(2)*q3 + 2*OF(3)*q4;
OF(41) = -dt^2/2;
OF(42) = 2*OF(1)*q1 - 2*OF(2)*q4 + 2*OF(3)*q3;
OF(43) = 2*OF(2)*q1 + 2*OF(1)*q4 - 2*OF(3)*q2;
OF(44) = 2*OF(2)*q2 - 2*OF(1)*q3 + 2*OF(3)*q1;
OF(45) = -(dt*q1)/2;
OF(46) = (da_prev_z*dt*dv_prev_z)/288;
OF(47) = (da_prev_y*dt*dv_prev_y)/288;
OF(48) = dt*(OF(39) + (OF(4)*dt)/4);
OF(49) = dt*(OF(38) + (OF(5)*dt)/4);
OF(50) = dt*(OF(37) + (OF(6)*dt)/4);
OF(51) = -(da_prev_y*dt*q4)/24;
OF(52) = -(da_prev_z*dt*q2)/24;
OF(53) = -(da_prev_x*dt*q3)/24;
OF(54) = -(OF(9)*da_prev_x*dt)/48;
OF(55) = -(OF(8)*da_prev_y*dt)/48;
OF(56) = -(OF(7)*da_prev_z*dt)/48;
OF(57) = (da_prev_x*dt*dv_prev_x)/288;
OF(58) = (dt*q4)/2;
OF(59) = (dt*q3)/2;
OF(60) = (dt*q2)/2;
OF(61) = -(dt*dv_prev_z)/24;
OF(62) = -(dt*dv_prev_y)/24;
OF(63) = -(dt*dv_prev_x)/24;
OF(64) = (OF(9)*dt)/4;
OF(65) = (OF(8)*dt)/4;
OF(66) = (OF(7)*dt)/4;
OF(67) = -OF(36);
OF(68) = -OF(35);
OF(69) = -OF(34);
OF(70) = OF(39)*q2;
OF(71) = OF(38)*q3;
OF(72) = OF(37)*q4;
F = zeros(23,23);
F(1,1) = 1;
F(1,2) = OF(67);
F(1,3) = OF(35);
F(1,4) = OF(69);
F(1,11) = OF(51) + OF(60) + OF(37)*q3;
F(1,12) = OF(52) + OF(59) + OF(39)*q4;
F(1,13) = OF(53) + OF(58) + OF(38)*q2;
F(2,1) = OF(36);
F(2,2) = 1;
F(2,3) = OF(34);
F(2,4) = OF(35);
F(2,11) = OF(45) + OF(71) + OF(72);
F(2,12) = OF(53) + OF(58) + OF(37)*q1;
F(2,13) = - OF(59) - (da_prev_y*dt*q1)/24 - (da_prev_x*dt*q4)/24;
F(3,1) = OF(68);
F(3,2) = OF(69);
F(3,3) = 1;
F(3,4) = OF(36);
F(3,11) = - OF(58) - (da_prev_y*dt*q2)/24 - (da_prev_z*dt*q1)/24;
F(3,12) = OF(45) + OF(70) + OF(72);
F(3,13) = OF(51) + OF(60) + OF(39)*q1;
F(4,1) = OF(34);
F(4,2) = OF(68);
F(4,3) = OF(67);
F(4,4) = 1;
F(4,11) = OF(52) + OF(59) + OF(38)*q1;
F(4,12) = - OF(60) - (da_prev_x*dt*q1)/24 - (da_prev_z*dt*q3)/24;
F(4,13) = OF(45) + OF(70) + OF(71);
F(5,1) = OF(42);
F(5,2) = OF(40);
F(5,3) = OF(44);
F(5,4) = -OF(43);
F(5,5) = 1;
F(5,11) = - OF(10)*OF(13) - OF(22)*OF(28) - OF(20)*OF(32);
F(5,12) = OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32);
F(5,13) = OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28);
F(5,14) = OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32);
F(5,15) = OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32);
F(5,16) = - OF(32)*dt - OF(10)*OF(17) - OF(18)*OF(28);
F(6,1) = OF(43);
F(6,2) = -OF(44);
F(6,3) = OF(40);
F(6,4) = OF(42);
F(6,6) = 1;
F(6,11) = OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30);
F(6,12) = - OF(11)*OF(14) - OF(19)*OF(30) - OF(24)*OF(31);
F(6,13) = OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31);
F(6,14) = - OF(31)*dt - OF(11)*OF(16) - OF(17)*OF(30);
F(6,15) = OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30);
F(6,16) = OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31);
F(7,1) = OF(44);
F(7,2) = OF(43);
F(7,3) = -OF(42);
F(7,4) = OF(40);
F(7,7) = 1;
F(7,11) = OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33);
F(7,12) = OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29);
F(7,13) = - OF(12)*OF(15) - OF(23)*OF(29) - OF(21)*OF(33);
F(7,14) = OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33);
F(7,15) = - OF(33)*dt - OF(12)*OF(18) - OF(16)*OF(29);
F(7,16) = OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33);
F(8,5) = dt;
F(8,8) = 1;
F(8,11) = dt*(OF(46) + OF(47) + OF(55) + OF(56));
F(8,12) = -dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288);
F(8,13) = dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288);
F(8,14) = OF(41);
F(8,15) = OF(50);
F(8,16) = -OF(49);
F(9,6) = dt;
F(9,9) = 1;
F(9,11) = dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288);
F(9,12) = dt*(OF(46) + OF(54) + OF(56) + OF(57));
F(9,13) = -dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288);
F(9,14) = -OF(50);
F(9,15) = OF(41);
F(9,16) = OF(48);
F(10,7) = dt;
F(10,10) = 1;
F(10,11) = -dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288);
F(10,12) = dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288);
F(10,13) = dt*(OF(47) + OF(54) + OF(55) + OF(57));
F(10,14) = OF(49);
F(10,15) = -OF(48);
F(10,16) = OF(41);
F(11,11) = 1;
F(12,12) = 1;
F(13,13) = 1;
F(14,14) = 1;
F(15,15) = 1;
F(16,16) = 1;
F(17,17) = 1;
F(18,18) = 1;
F(19,19) = 1;
F(20,20) = 1;
F(21,21) = 1;
F(22,22) = 1;
F(23,23) = 1;
OG = zeros(83,1);
OG(1) = dt*omega_x - dt*omega_bias_x - (da_prev_z*(dt*omega_y - dt*omega_bias_y))/12 + (da_prev_y*(dt*omega_z - dt*omega_bias_z))/12;
OG(2) = dt*omega_y - dt*omega_bias_y + (da_prev_z*(dt*omega_x - dt*omega_bias_x))/12 - (da_prev_x*(dt*omega_z - dt*omega_bias_z))/12;
OG(3) = dt*omega_z - dt*omega_bias_z - (da_prev_y*(dt*omega_x - dt*omega_bias_x))/12 + (da_prev_x*(dt*omega_y - dt*omega_bias_y))/12;
OG(4) = acc_z*dt - acc_bias_z*dt;
OG(5) = acc_y*dt - acc_bias_y*dt;
OG(6) = acc_x*dt - acc_bias_x*dt;
OG(7) = q1^2 + q2^2 - q3^2 - q4^2;
OG(8) = q1^2 - q2^2 + q3^2 - q4^2;
OG(9) = q1^2 - q2^2 - q3^2 + q4^2;
OG(10) = (OG(4)*da_prev_z*dt)/24 + (OG(5)*da_prev_y*dt)/24 - (da_prev_y*dt*dv_prev_y)/144 - (da_prev_z*dt*dv_prev_z)/144;
OG(11) = (OG(4)*da_prev_z*dt)/24 + (OG(6)*da_prev_x*dt)/24 - (da_prev_x*dt*dv_prev_x)/144 - (da_prev_z*dt*dv_prev_z)/144;
OG(12) = (OG(5)*da_prev_y*dt)/24 + (OG(6)*da_prev_x*dt)/24 - (da_prev_x*dt*dv_prev_x)/144 - (da_prev_y*dt*dv_prev_y)/144;
OG(13) = (OG(6)*dt)/2 - (dt*dv_prev_x)/12 + (OG(5)*da_prev_z*dt)/24 - (da_prev_z*dt*dv_prev_y)/144;
OG(14) = (OG(5)*dt)/2 - (dt*dv_prev_y)/12 - (OG(6)*da_prev_z*dt)/24 + (da_prev_z*dt*dv_prev_x)/144;
OG(15) = (OG(6)*dt)/2 - (dt*dv_prev_x)/12 - (OG(4)*da_prev_y*dt)/24 + (da_prev_y*dt*dv_prev_z)/144;
OG(16) = (OG(4)*dt)/2 - (dt*dv_prev_z)/12 + (OG(6)*da_prev_y*dt)/24 - (da_prev_y*dt*dv_prev_x)/144;
OG(17) = (OG(5)*dt)/2 - (dt*dv_prev_y)/12 + (OG(4)*da_prev_x*dt)/24 - (da_prev_x*dt*dv_prev_z)/144;
OG(18) = (OG(4)*dt)/2 - (dt*dv_prev_z)/12 - (OG(5)*da_prev_x*dt)/24 + (da_prev_x*dt*dv_prev_y)/144;
OG(19) = (OG(3)*dt)/2 + (da_prev_z*dt)/12;
OG(20) = (OG(2)*dt)/2 + (da_prev_y*dt)/12;
OG(21) = (OG(1)*dt)/2 + (da_prev_x*dt)/12;
OG(22) = 2*q1*q4 - 2*q2*q3;
OG(23) = 2*q1*q3 - 2*q2*q4;
OG(24) = 2*q1*q2 - 2*q3*q4;
OG(25) = 2*q1*q4 + 2*q2*q3;
OG(26) = 2*q1*q3 + 2*q2*q4;
OG(27) = 2*q1*q2 + 2*q3*q4;
OG(28) = (da_prev_z*dt)/24;
OG(29) = (da_prev_y*dt)/24;
OG(30) = (da_prev_x*dt)/24;
OG(31) = -dt*((OG(4)*da_prev_z*dt)/48 + (OG(5)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_y)/288 - (da_prev_z*dt*dv_prev_z)/288);
OG(32) = -dt*((OG(4)*da_prev_z*dt)/48 + (OG(6)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_x)/288 - (da_prev_z*dt*dv_prev_z)/288);
OG(33) = -dt*((OG(5)*da_prev_y*dt)/48 + (OG(6)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_x)/288 - (da_prev_y*dt*dv_prev_y)/288);
OG(34) = -dt*((OG(5)*dt)/4 - (dt*dv_prev_y)/24 - (OG(6)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288);
OG(35) = -dt*((OG(6)*dt)/4 - (dt*dv_prev_x)/24 - (OG(4)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288);
OG(36) = -dt*((OG(4)*dt)/4 - (dt*dv_prev_z)/24 - (OG(5)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288);
OG(37) = -dt^2/2;
OG(38) = dt*((OG(6)*dt)/4 - (dt*dv_prev_x)/24 + (OG(5)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288);
OG(39) = dt*((OG(4)*dt)/4 - (dt*dv_prev_z)/24 + (OG(6)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288);
OG(40) = dt*((OG(5)*dt)/4 - (dt*dv_prev_y)/24 + (OG(4)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288);
OG(41) = -(dt*q1)/2;
OG(42) = - (dt*q4)/2 - (da_prev_y*dt*q2)/24 - (da_prev_z*dt*q1)/24;
OG(43) = - (dt*q3)/2 - (da_prev_y*dt*q1)/24 - (da_prev_x*dt*q4)/24;
OG(44) = - (dt*q2)/2 - (da_prev_x*dt*q1)/24 - (da_prev_z*dt*q3)/24;
OG(45) = dt*(OG(30) + (OG(1)*dt)/4);
OG(46) = dt*(OG(29) + (OG(2)*dt)/4);
OG(47) = dt*(OG(28) + (OG(3)*dt)/4);
OG(48) = -(da_prev_y*dt*q4)/24;
OG(49) = -(da_prev_z*dt*q2)/24;
OG(50) = -(da_prev_x*dt*q3)/24;
OG(51) = - OG(27)*dt - OG(9)*OG(21) - OG(19)*OG(23);
OG(52) = - OG(26)*dt - OG(7)*OG(20) - OG(21)*OG(22);
OG(53) = - OG(25)*dt - OG(8)*OG(19) - OG(20)*OG(24);
OG(54) = - OG(9)*OG(12) - OG(17)*OG(23) - OG(15)*OG(27);
OG(55) = - OG(8)*OG(11) - OG(13)*OG(24) - OG(18)*OG(25);
OG(56) = - OG(7)*OG(10) - OG(16)*OG(22) - OG(14)*OG(26);
OG(57) = (dt*q4)/2;
OG(58) = (dt*q3)/2;
OG(59) = (dt*q2)/2;
OG(60) = OG(20)*OG(23) - OG(9)*dt + OG(21)*OG(27);
OG(61) = OG(24)*dt + OG(8)*OG(21) - OG(20)*OG(25);
OG(62) = OG(23)*dt + OG(9)*OG(20) - OG(19)*OG(27);
OG(63) = OG(19)*OG(25) - OG(8)*dt + OG(21)*OG(24);
OG(64) = OG(22)*dt + OG(7)*OG(19) - OG(21)*OG(26);
OG(65) = OG(19)*OG(22) - OG(7)*dt + OG(20)*OG(26);
OG(66) = OG(12)*OG(24) - OG(8)*OG(15) + OG(17)*OG(25);
OG(67) = OG(9)*OG(13) - OG(11)*OG(27) + OG(18)*OG(23);
OG(68) = OG(10)*OG(23) - OG(9)*OG(14) + OG(16)*OG(27);
OG(69) = OG(7)*OG(17) + OG(15)*OG(22) - OG(12)*OG(26);
OG(70) = OG(11)*OG(22) - OG(7)*OG(18) + OG(13)*OG(26);
OG(71) = OG(8)*OG(16) - OG(10)*OG(25) + OG(14)*OG(24);
OG(72) = OG(41) + OG(29)*q3 + OG(30)*q2;
OG(73) = OG(41) + OG(28)*q4 + OG(30)*q2;
OG(74) = OG(41) + OG(28)*q4 + OG(29)*q3;
OG(75) = OG(49) + OG(58) + OG(30)*q4;
OG(76) = OG(50) + OG(57) + OG(29)*q2;
OG(77) = OG(48) + OG(59) + OG(30)*q1;
OG(78) = OG(48) + OG(59) + OG(28)*q3;
OG(79) = OG(49) + OG(58) + OG(29)*q1;
OG(80) = OG(50) + OG(57) + OG(28)*q1;
OG(81) = -OG(47);
OG(82) = -OG(46);
OG(83) = -OG(45);
G = zeros(23,19);
G(1,1) = OG(78);
G(1,2) = OG(75);
G(1,3) = OG(76);
G(1,7) = OG(78);
G(1,8) = OG(75);
G(1,9) = OG(76);
G(2,1) = OG(74);
G(2,2) = OG(80);
G(2,3) = OG(43);
G(2,7) = OG(74);
G(2,8) = OG(80);
G(2,9) = OG(43);
G(3,1) = OG(42);
G(3,2) = OG(73);
G(3,3) = OG(77);
G(3,7) = OG(42);
G(3,8) = OG(73);
G(3,9) = OG(77);
G(4,1) = OG(79);
G(4,2) = OG(44);
G(4,3) = OG(72);
G(4,7) = OG(79);
G(4,8) = OG(44);
G(4,9) = OG(72);
G(5,1) = OG(56);
G(5,2) = OG(70);
G(5,3) = OG(69);
G(5,4) = OG(65);
G(5,5) = OG(64);
G(5,6) = OG(52);
G(5,7) = OG(56);
G(5,8) = OG(70);
G(5,9) = OG(69);
G(5,10) = OG(65);
G(5,11) = OG(64);
G(5,12) = OG(52);
G(6,1) = OG(71);
G(6,2) = OG(55);
G(6,3) = OG(66);
G(6,4) = OG(53);
G(6,5) = OG(63);
G(6,6) = OG(61);
G(6,7) = OG(71);
G(6,8) = OG(55);
G(6,9) = OG(66);
G(6,10) = OG(53);
G(6,11) = OG(63);
G(6,12) = OG(61);
G(7,1) = OG(68);
G(7,2) = OG(67);
G(7,3) = OG(54);
G(7,4) = OG(62);
G(7,5) = OG(51);
G(7,6) = OG(60);
G(7,7) = OG(68);
G(7,8) = OG(67);
G(7,9) = OG(54);
G(7,10) = OG(62);
G(7,11) = OG(51);
G(7,12) = OG(60);
G(8,1) = OG(31);
G(8,2) = OG(36);
G(8,3) = OG(40);
G(8,4) = OG(37);
G(8,5) = OG(47);
G(8,6) = OG(82);
G(8,7) = OG(31);
G(8,8) = OG(36);
G(8,9) = OG(40);
G(8,10) = OG(37);
G(8,11) = OG(47);
G(8,12) = OG(82);
G(9,1) = OG(39);
G(9,2) = OG(32);
G(9,3) = OG(35);
G(9,4) = OG(81);
G(9,5) = OG(37);
G(9,6) = OG(45);
G(9,7) = OG(39);
G(9,8) = OG(32);
G(9,9) = OG(35);
G(9,10) = OG(81);
G(9,11) = OG(37);
G(9,12) = OG(45);
G(10,1) = OG(34);
G(10,2) = OG(38);
G(10,3) = OG(33);
G(10,4) = OG(46);
G(10,5) = OG(83);
G(10,6) = OG(37);
G(10,7) = OG(34);
G(10,8) = OG(38);
G(10,9) = OG(33);
G(10,10) = OG(46);
G(10,11) = OG(83);
G(10,12) = OG(37);
G(11,7) = 1;
G(12,8) = 1;
G(13,9) = 1;
G(14,10) = 1;
G(15,11) = 1;
G(16,12) = 1;
G(17,13) = dt;
G(18,14) = dt;
G(19,15) = dt;
G(20,16) = dt;
G(21,17) = dt;
G(22,18) = dt;
G(23,19) = dt;
OQ = zeros(95,1);
OQ(1) = OG(52)*OG(61)*acc_cov_z + OG(53)*OG(65)*acc_cov_x + OG(63)*OG(64)*acc_cov_y + OG(52)*OG(61)*acc_bias_cov_z + OG(53)*OG(65)*acc_bias_cov_x + OG(63)*OG(64)*acc_bias_cov_y + OG(55)*OG(70)*omega_cov_y + OG(56)*OG(71)*omega_cov_x + OG(66)*OG(69)*omega_cov_z + OG(55)*OG(70)*omega_bias_cov_y + OG(56)*OG(71)*omega_bias_cov_x + OG(66)*OG(69)*omega_bias_cov_z;
OQ(2) = OG(52)*OG(60)*acc_cov_z + OG(51)*OG(64)*acc_cov_y + OG(62)*OG(65)*acc_cov_x + OG(52)*OG(60)*acc_bias_cov_z + OG(51)*OG(64)*acc_bias_cov_y + OG(62)*OG(65)*acc_bias_cov_x + OG(56)*OG(68)*omega_cov_x + OG(54)*OG(69)*omega_cov_z + OG(67)*OG(70)*omega_cov_y + OG(56)*OG(68)*omega_bias_cov_x + OG(54)*OG(69)*omega_bias_cov_z + OG(67)*OG(70)*omega_bias_cov_y;
OQ(3) = OG(51)*OG(63)*acc_cov_y + OG(53)*OG(62)*acc_cov_x + OG(60)*OG(61)*acc_cov_z + OG(51)*OG(63)*acc_bias_cov_y + OG(53)*OG(62)*acc_bias_cov_x + OG(60)*OG(61)*acc_bias_cov_z + OG(54)*OG(66)*omega_cov_z + OG(55)*OG(67)*omega_cov_y + OG(68)*OG(71)*omega_cov_x + OG(54)*OG(66)*omega_bias_cov_z + OG(55)*OG(67)*omega_bias_cov_y + OG(68)*OG(71)*omega_bias_cov_x;
OQ(4) = OG(37)*OG(65)*acc_cov_x + OG(47)*OG(64)*acc_cov_y + OG(52)*OG(82)*acc_cov_z + OG(37)*OG(65)*acc_bias_cov_x + OG(47)*OG(64)*acc_bias_cov_y + OG(52)*OG(82)*acc_bias_cov_z + OG(31)*OG(56)*omega_cov_x + OG(36)*OG(70)*omega_cov_y + OG(40)*OG(69)*omega_cov_z + OG(31)*OG(56)*omega_bias_cov_x + OG(36)*OG(70)*omega_bias_cov_y + OG(40)*OG(69)*omega_bias_cov_z;
OQ(5) = OG(37)*OG(52)*acc_cov_z + OG(46)*OG(65)*acc_cov_x + OG(64)*OG(83)*acc_cov_y + OG(37)*OG(52)*acc_bias_cov_z + OG(46)*OG(65)*acc_bias_cov_x + OG(64)*OG(83)*acc_bias_cov_y + OG(34)*OG(56)*omega_cov_x + OG(33)*OG(69)*omega_cov_z + OG(38)*OG(70)*omega_cov_y + OG(34)*OG(56)*omega_bias_cov_x + OG(33)*OG(69)*omega_bias_cov_z + OG(38)*OG(70)*omega_bias_cov_y;
OQ(6) = OG(45)*OG(52)*acc_cov_z + OG(37)*OG(64)*acc_cov_y + OG(65)*OG(81)*acc_cov_x + OG(45)*OG(52)*acc_bias_cov_z + OG(37)*OG(64)*acc_bias_cov_y + OG(65)*OG(81)*acc_bias_cov_x + OG(39)*OG(56)*omega_cov_x + OG(32)*OG(70)*omega_cov_y + OG(35)*OG(69)*omega_cov_z + OG(39)*OG(56)*omega_bias_cov_x + OG(32)*OG(70)*omega_bias_cov_y + OG(35)*OG(69)*omega_bias_cov_z;
OQ(7) = OG(37)*OG(53)*acc_cov_x + OG(47)*OG(63)*acc_cov_y + OG(61)*OG(82)*acc_cov_z + OG(37)*OG(53)*acc_bias_cov_x + OG(47)*OG(63)*acc_bias_cov_y + OG(61)*OG(82)*acc_bias_cov_z + OG(36)*OG(55)*omega_cov_y + OG(31)*OG(71)*omega_cov_x + OG(40)*OG(66)*omega_cov_z + OG(36)*OG(55)*omega_bias_cov_y + OG(31)*OG(71)*omega_bias_cov_x + OG(40)*OG(66)*omega_bias_cov_z;
OQ(8) = OG(46)*OG(53)*acc_cov_x + OG(37)*OG(61)*acc_cov_z + OG(63)*OG(83)*acc_cov_y + OG(46)*OG(53)*acc_bias_cov_x + OG(37)*OG(61)*acc_bias_cov_z + OG(63)*OG(83)*acc_bias_cov_y + OG(38)*OG(55)*omega_cov_y + OG(33)*OG(66)*omega_cov_z + OG(34)*OG(71)*omega_cov_x + OG(38)*OG(55)*omega_bias_cov_y + OG(33)*OG(66)*omega_bias_cov_z + OG(34)*OG(71)*omega_bias_cov_x;
OQ(9) = OG(37)*OG(63)*acc_cov_y + OG(45)*OG(61)*acc_cov_z + OG(53)*OG(81)*acc_cov_x + OG(37)*OG(63)*acc_bias_cov_y + OG(45)*OG(61)*acc_bias_cov_z + OG(53)*OG(81)*acc_bias_cov_x + OG(32)*OG(55)*omega_cov_y + OG(35)*OG(66)*omega_cov_z + OG(39)*OG(71)*omega_cov_x + OG(32)*OG(55)*omega_bias_cov_y + OG(35)*OG(66)*omega_bias_cov_z + OG(39)*OG(71)*omega_bias_cov_x;
OQ(10) = OG(37)*OG(62)*acc_cov_x + OG(47)*OG(51)*acc_cov_y + OG(60)*OG(82)*acc_cov_z + OG(37)*OG(62)*acc_bias_cov_x + OG(47)*OG(51)*acc_bias_cov_y + OG(60)*OG(82)*acc_bias_cov_z + OG(40)*OG(54)*omega_cov_z + OG(31)*OG(68)*omega_cov_x + OG(36)*OG(67)*omega_cov_y + OG(40)*OG(54)*omega_bias_cov_z + OG(31)*OG(68)*omega_bias_cov_x + OG(36)*OG(67)*omega_bias_cov_y;
OQ(11) = OG(37)*OG(60)*acc_cov_z + OG(46)*OG(62)*acc_cov_x + OG(51)*OG(83)*acc_cov_y + OG(37)*OG(60)*acc_bias_cov_z + OG(46)*OG(62)*acc_bias_cov_x + OG(51)*OG(83)*acc_bias_cov_y + OG(33)*OG(54)*omega_cov_z + OG(34)*OG(68)*omega_cov_x + OG(38)*OG(67)*omega_cov_y + OG(33)*OG(54)*omega_bias_cov_z + OG(34)*OG(68)*omega_bias_cov_x + OG(38)*OG(67)*omega_bias_cov_y;
OQ(12) = OG(37)*OG(51)*acc_cov_y + OG(45)*OG(60)*acc_cov_z + OG(62)*OG(81)*acc_cov_x + OG(37)*OG(51)*acc_bias_cov_y + OG(45)*OG(60)*acc_bias_cov_z + OG(62)*OG(81)*acc_bias_cov_x + OG(35)*OG(54)*omega_cov_z + OG(32)*OG(67)*omega_cov_y + OG(39)*OG(68)*omega_cov_x + OG(35)*OG(54)*omega_bias_cov_z + OG(32)*OG(67)*omega_bias_cov_y + OG(39)*OG(68)*omega_bias_cov_x;
OQ(13) = OG(37)*OG(46)*acc_cov_x + OG(37)*OG(82)*acc_cov_z + OG(47)*OG(83)*acc_cov_y + OG(37)*OG(46)*acc_bias_cov_x + OG(37)*OG(82)*acc_bias_cov_z + OG(47)*OG(83)*acc_bias_cov_y + OG(31)*OG(34)*omega_cov_x + OG(33)*OG(40)*omega_cov_z + OG(36)*OG(38)*omega_cov_y + OG(31)*OG(34)*omega_bias_cov_x + OG(33)*OG(40)*omega_bias_cov_z + OG(36)*OG(38)*omega_bias_cov_y;
OQ(14) = OG(37)*OG(47)*acc_cov_y + OG(37)*OG(81)*acc_cov_x + OG(45)*OG(82)*acc_cov_z + OG(37)*OG(47)*acc_bias_cov_y + OG(37)*OG(81)*acc_bias_cov_x + OG(45)*OG(82)*acc_bias_cov_z + OG(32)*OG(36)*omega_cov_y + OG(31)*OG(39)*omega_cov_x + OG(35)*OG(40)*omega_cov_z + OG(32)*OG(36)*omega_bias_cov_y + OG(31)*OG(39)*omega_bias_cov_x + OG(35)*OG(40)*omega_bias_cov_z;
OQ(15) = OG(37)*OG(45)*acc_cov_z + OG(37)*OG(83)*acc_cov_y + OG(46)*OG(81)*acc_cov_x + OG(37)*OG(45)*acc_bias_cov_z + OG(37)*OG(83)*acc_bias_cov_y + OG(46)*OG(81)*acc_bias_cov_x + OG(33)*OG(35)*omega_cov_z + OG(32)*OG(38)*omega_cov_y + OG(34)*OG(39)*omega_cov_x + OG(33)*OG(35)*omega_bias_cov_z + OG(32)*OG(38)*omega_bias_cov_y + OG(34)*OG(39)*omega_bias_cov_x;
OQ(16) = OG(43)*OG(76)*omega_cov_z + OG(74)*OG(78)*omega_cov_x + OG(75)*OG(80)*omega_cov_y + OG(43)*OG(76)*omega_bias_cov_z + OG(74)*OG(78)*omega_bias_cov_x + OG(75)*OG(80)*omega_bias_cov_y;
OQ(17) = OG(56)*OG(78)*omega_cov_x + OG(70)*OG(75)*omega_cov_y + OG(69)*OG(76)*omega_cov_z + OG(56)*OG(78)*omega_bias_cov_x + OG(70)*OG(75)*omega_bias_cov_y + OG(69)*OG(76)*omega_bias_cov_z;
OQ(18) = OG(44)*OG(75)*omega_cov_y + OG(72)*OG(76)*omega_cov_z + OG(78)*OG(79)*omega_cov_x + OG(44)*OG(75)*omega_bias_cov_y + OG(72)*OG(76)*omega_bias_cov_z + OG(78)*OG(79)*omega_bias_cov_x;
OQ(19) = OG(55)*OG(75)*omega_cov_y + OG(66)*OG(76)*omega_cov_z + OG(71)*OG(78)*omega_cov_x + OG(55)*OG(75)*omega_bias_cov_y + OG(66)*OG(76)*omega_bias_cov_z + OG(71)*OG(78)*omega_bias_cov_x;
OQ(20) = OG(42)*OG(78)*omega_cov_x + OG(73)*OG(75)*omega_cov_y + OG(76)*OG(77)*omega_cov_z + OG(42)*OG(78)*omega_bias_cov_x + OG(73)*OG(75)*omega_bias_cov_y + OG(76)*OG(77)*omega_bias_cov_z;
OQ(21) = OG(54)*OG(76)*omega_cov_z + OG(67)*OG(75)*omega_cov_y + OG(68)*OG(78)*omega_cov_x + OG(54)*OG(76)*omega_bias_cov_z + OG(67)*OG(75)*omega_bias_cov_y + OG(68)*OG(78)*omega_bias_cov_x;
OQ(22) = OG(43)*OG(72)*omega_cov_z + OG(44)*OG(80)*omega_cov_y + OG(74)*OG(79)*omega_cov_x + OG(43)*OG(72)*omega_bias_cov_z + OG(44)*OG(80)*omega_bias_cov_y + OG(74)*OG(79)*omega_bias_cov_x;
OQ(23) = OG(43)*OG(69)*omega_cov_z + OG(56)*OG(74)*omega_cov_x + OG(70)*OG(80)*omega_cov_y + OG(43)*OG(69)*omega_bias_cov_z + OG(56)*OG(74)*omega_bias_cov_x + OG(70)*OG(80)*omega_bias_cov_y;
OQ(24) = OG(44)*OG(70)*omega_cov_y + OG(56)*OG(79)*omega_cov_x + OG(69)*OG(72)*omega_cov_z + OG(44)*OG(70)*omega_bias_cov_y + OG(56)*OG(79)*omega_bias_cov_x + OG(69)*OG(72)*omega_bias_cov_z;
OQ(25) = OG(42)*OG(74)*omega_cov_x + OG(43)*OG(77)*omega_cov_z + OG(73)*OG(80)*omega_cov_y + OG(42)*OG(74)*omega_bias_cov_x + OG(43)*OG(77)*omega_bias_cov_z + OG(73)*OG(80)*omega_bias_cov_y;
OQ(26) = OG(43)*OG(66)*omega_cov_z + OG(55)*OG(80)*omega_cov_y + OG(71)*OG(74)*omega_cov_x + OG(43)*OG(66)*omega_bias_cov_z + OG(55)*OG(80)*omega_bias_cov_y + OG(71)*OG(74)*omega_bias_cov_x;
OQ(27) = OG(44)*OG(73)*omega_cov_y + OG(42)*OG(79)*omega_cov_x + OG(72)*OG(77)*omega_cov_z + OG(44)*OG(73)*omega_bias_cov_y + OG(42)*OG(79)*omega_bias_cov_x + OG(72)*OG(77)*omega_bias_cov_z;
OQ(28) = OG(44)*OG(55)*omega_cov_y + OG(66)*OG(72)*omega_cov_z + OG(71)*OG(79)*omega_cov_x + OG(44)*OG(55)*omega_bias_cov_y + OG(66)*OG(72)*omega_bias_cov_z + OG(71)*OG(79)*omega_bias_cov_x;
OQ(29) = OG(42)*OG(56)*omega_cov_x + OG(70)*OG(73)*omega_cov_y + OG(69)*OG(77)*omega_cov_z + OG(42)*OG(56)*omega_bias_cov_x + OG(70)*OG(73)*omega_bias_cov_y + OG(69)*OG(77)*omega_bias_cov_z;
OQ(30) = OG(43)*OG(54)*omega_cov_z + OG(68)*OG(74)*omega_cov_x + OG(67)*OG(80)*omega_cov_y + OG(43)*OG(54)*omega_bias_cov_z + OG(68)*OG(74)*omega_bias_cov_x + OG(67)*OG(80)*omega_bias_cov_y;
OQ(31) = OG(42)*OG(71)*omega_cov_x + OG(55)*OG(73)*omega_cov_y + OG(66)*OG(77)*omega_cov_z + OG(42)*OG(71)*omega_bias_cov_x + OG(55)*OG(73)*omega_bias_cov_y + OG(66)*OG(77)*omega_bias_cov_z;
OQ(32) = OG(44)*OG(67)*omega_cov_y + OG(54)*OG(72)*omega_cov_z + OG(68)*OG(79)*omega_cov_x + OG(44)*OG(67)*omega_bias_cov_y + OG(54)*OG(72)*omega_bias_cov_z + OG(68)*OG(79)*omega_bias_cov_x;
OQ(33) = OG(42)*OG(68)*omega_cov_x + OG(54)*OG(77)*omega_cov_z + OG(67)*OG(73)*omega_cov_y + OG(42)*OG(68)*omega_bias_cov_x + OG(54)*OG(77)*omega_bias_cov_z + OG(67)*OG(73)*omega_bias_cov_y;
OQ(34) = OG(31)*OG(78)*omega_cov_x + OG(36)*OG(75)*omega_cov_y + OG(40)*OG(76)*omega_cov_z + OG(31)*OG(78)*omega_bias_cov_x + OG(36)*OG(75)*omega_bias_cov_y + OG(40)*OG(76)*omega_bias_cov_z;
OQ(35) = OG(32)*OG(75)*omega_cov_y + OG(35)*OG(76)*omega_cov_z + OG(39)*OG(78)*omega_cov_x + OG(32)*OG(75)*omega_bias_cov_y + OG(35)*OG(76)*omega_bias_cov_z + OG(39)*OG(78)*omega_bias_cov_x;
OQ(36) = OG(33)*OG(76)*omega_cov_z + OG(34)*OG(78)*omega_cov_x + OG(38)*OG(75)*omega_cov_y + OG(33)*OG(76)*omega_bias_cov_z + OG(34)*OG(78)*omega_bias_cov_x + OG(38)*OG(75)*omega_bias_cov_y;
OQ(37) = OG(40)*OG(43)*omega_cov_z + OG(31)*OG(74)*omega_cov_x + OG(36)*OG(80)*omega_cov_y + OG(40)*OG(43)*omega_bias_cov_z + OG(31)*OG(74)*omega_bias_cov_x + OG(36)*OG(80)*omega_bias_cov_y;
OQ(38) = OG(35)*OG(43)*omega_cov_z + OG(32)*OG(80)*omega_cov_y + OG(39)*OG(74)*omega_cov_x + OG(35)*OG(43)*omega_bias_cov_z + OG(32)*OG(80)*omega_bias_cov_y + OG(39)*OG(74)*omega_bias_cov_x;
OQ(39) = OG(36)*OG(44)*omega_cov_y + OG(31)*OG(79)*omega_cov_x + OG(40)*OG(72)*omega_cov_z + OG(36)*OG(44)*omega_bias_cov_y + OG(31)*OG(79)*omega_bias_cov_x + OG(40)*OG(72)*omega_bias_cov_z;
OQ(40) = OG(33)*OG(43)*omega_cov_z + OG(34)*OG(74)*omega_cov_x + OG(38)*OG(80)*omega_cov_y + OG(33)*OG(43)*omega_bias_cov_z + OG(34)*OG(74)*omega_bias_cov_x + OG(38)*OG(80)*omega_bias_cov_y;
OQ(41) = OG(32)*OG(44)*omega_cov_y + OG(35)*OG(72)*omega_cov_z + OG(39)*OG(79)*omega_cov_x + OG(32)*OG(44)*omega_bias_cov_y + OG(35)*OG(72)*omega_bias_cov_z + OG(39)*OG(79)*omega_bias_cov_x;
OQ(42) = OG(38)*OG(44)*omega_cov_y + OG(33)*OG(72)*omega_cov_z + OG(34)*OG(79)*omega_cov_x + OG(38)*OG(44)*omega_bias_cov_y + OG(33)*OG(72)*omega_bias_cov_z + OG(34)*OG(79)*omega_bias_cov_x;
OQ(43) = OG(31)*OG(42)*omega_cov_x + OG(36)*OG(73)*omega_cov_y + OG(40)*OG(77)*omega_cov_z + OG(31)*OG(42)*omega_bias_cov_x + OG(36)*OG(73)*omega_bias_cov_y + OG(40)*OG(77)*omega_bias_cov_z;
OQ(44) = OG(39)*OG(42)*omega_cov_x + OG(32)*OG(73)*omega_cov_y + OG(35)*OG(77)*omega_cov_z + OG(39)*OG(42)*omega_bias_cov_x + OG(32)*OG(73)*omega_bias_cov_y + OG(35)*OG(77)*omega_bias_cov_z;
OQ(45) = OG(34)*OG(42)*omega_cov_x + OG(33)*OG(77)*omega_cov_z + OG(38)*OG(73)*omega_cov_y + OG(34)*OG(42)*omega_bias_cov_x + OG(33)*OG(77)*omega_bias_cov_z + OG(38)*OG(73)*omega_bias_cov_y;
OQ(46) = dt^2;
OQ(47) = OG(37)^2;
OQ(48) = OG(80)*omega_bias_cov_y;
OQ(49) = OG(79)*omega_bias_cov_x;
OQ(50) = OG(77)*omega_bias_cov_z;
OQ(51) = OG(78)*omega_bias_cov_x;
OQ(52) = OG(76)*omega_bias_cov_z;
OQ(53) = OG(75)*omega_bias_cov_y;
OQ(54) = OG(74)*omega_bias_cov_x;
OQ(55) = OG(73)*omega_bias_cov_y;
OQ(56) = OG(72)*omega_bias_cov_z;
OQ(57) = OG(71)*omega_bias_cov_x;
OQ(58) = OG(70)*omega_bias_cov_y;
OQ(59) = OG(69)*omega_bias_cov_z;
OQ(60) = OG(68)*omega_bias_cov_x;
OQ(61) = OG(67)*omega_bias_cov_y;
OQ(62) = OG(66)*omega_bias_cov_z;
OQ(63) = OG(56)*omega_bias_cov_x;
OQ(64) = OG(55)*omega_bias_cov_y;
OQ(65) = OG(54)*omega_bias_cov_z;
OQ(66) = OG(44)*omega_bias_cov_y;
OQ(67) = OG(43)*omega_bias_cov_z;
OQ(68) = OG(42)*omega_bias_cov_x;
OQ(69) = OG(40)*omega_bias_cov_z;
OQ(70) = OG(39)*omega_bias_cov_x;
OQ(71) = OG(38)*omega_bias_cov_y;
OQ(72) = OG(36)*omega_bias_cov_y;
OQ(73) = OG(35)*omega_bias_cov_z;
OQ(74) = OG(33)*omega_bias_cov_z;
OQ(75) = OG(34)*omega_bias_cov_x;
OQ(76) = OG(32)*omega_bias_cov_y;
OQ(77) = OG(31)*omega_bias_cov_x;
OQ(78) = OG(83)*acc_bias_cov_y;
OQ(79) = OG(82)*acc_bias_cov_z;
OQ(80) = OG(81)*acc_bias_cov_x;
OQ(81) = OG(65)*acc_bias_cov_x;
OQ(82) = OG(64)*acc_bias_cov_y;
OQ(83) = OG(63)*acc_bias_cov_y;
OQ(84) = OG(61)*acc_bias_cov_z;
OQ(85) = OG(62)*acc_bias_cov_x;
OQ(86) = OG(60)*acc_bias_cov_z;
OQ(87) = OG(52)*acc_bias_cov_z;
OQ(88) = OG(53)*acc_bias_cov_x;
OQ(89) = OG(51)*acc_bias_cov_y;
OQ(90) = OG(47)*acc_bias_cov_y;
OQ(91) = OG(45)*acc_bias_cov_z;
OQ(92) = OG(46)*acc_bias_cov_x;
OQ(93) = OG(37)*acc_bias_cov_z;
OQ(94) = OG(37)*acc_bias_cov_y;
OQ(95) = OG(37)*acc_bias_cov_x;
Q = zeros(23,23);
Q(1,1) = OG(75)^2*omega_cov_y + OG(76)^2*omega_cov_z + OG(78)^2*omega_cov_x + OG(75)*OQ(53) + OG(76)*OQ(52) + OG(78)*OQ(51);
Q(1,2) = OQ(16);
Q(1,3) = OQ(20);
Q(1,4) = OQ(18);
Q(1,5) = OQ(17);
Q(1,6) = OQ(19);
Q(1,7) = OQ(21);
Q(1,8) = OQ(34);
Q(1,9) = OQ(35);
Q(1,10) = OQ(36);
Q(1,11) = OQ(51);
Q(1,12) = OQ(53);
Q(1,13) = OQ(52);
Q(2,1) = OQ(16);
Q(2,2) = OG(43)^2*omega_cov_z + OG(74)^2*omega_cov_x + OG(80)^2*omega_cov_y + OG(43)*OQ(67) + OG(74)*OQ(54) + OG(80)*OQ(48);
Q(2,3) = OQ(25);
Q(2,4) = OQ(22);
Q(2,5) = OQ(23);
Q(2,6) = OQ(26);
Q(2,7) = OQ(30);
Q(2,8) = OQ(37);
Q(2,9) = OQ(38);
Q(2,10) = OQ(40);
Q(2,11) = OQ(54);
Q(2,12) = OQ(48);
Q(2,13) = OQ(67);
Q(3,1) = OQ(20);
Q(3,2) = OQ(25);
Q(3,3) = OG(42)^2*omega_cov_x + OG(73)^2*omega_cov_y + OG(77)^2*omega_cov_z + OG(42)*OQ(68) + OG(77)*OQ(50) + OG(73)*OQ(55);
Q(3,4) = OQ(27);
Q(3,5) = OQ(29);
Q(3,6) = OQ(31);
Q(3,7) = OQ(33);
Q(3,8) = OQ(43);
Q(3,9) = OQ(44);
Q(3,10) = OQ(45);
Q(3,11) = OQ(68);
Q(3,12) = OQ(55);
Q(3,13) = OQ(50);
Q(4,1) = OQ(18);
Q(4,2) = OQ(22);
Q(4,3) = OQ(27);
Q(4,4) = OG(44)^2*omega_cov_y + OG(72)^2*omega_cov_z + OG(79)^2*omega_cov_x + OG(44)*OQ(66) + OG(72)*OQ(56) + OG(79)*OQ(49);
Q(4,5) = OQ(24);
Q(4,6) = OQ(28);
Q(4,7) = OQ(32);
Q(4,8) = OQ(39);
Q(4,9) = OQ(41);
Q(4,10) = OQ(42);
Q(4,11) = OQ(49);
Q(4,12) = OQ(66);
Q(4,13) = OQ(56);
Q(5,1) = OQ(17);
Q(5,2) = OQ(23);
Q(5,3) = OQ(29);
Q(5,4) = OQ(24);
Q(5,5) = OG(52)^2*acc_cov_z + OG(64)^2*acc_cov_y + OG(65)^2*acc_cov_x + OG(56)^2*omega_cov_x + OG(69)^2*omega_cov_z + OG(70)^2*omega_cov_y + OG(56)*OQ(63) + OG(69)*OQ(59) + OG(70)*OQ(58) + OG(52)*OQ(87) + OG(64)*OQ(82) + OG(65)*OQ(81);
Q(5,6) = OQ(1);
Q(5,7) = OQ(2);
Q(5,8) = OQ(4);
Q(5,9) = OQ(6);
Q(5,10) = OQ(5);
Q(5,11) = OQ(63);
Q(5,12) = OQ(58);
Q(5,13) = OQ(59);
Q(5,14) = OQ(81);
Q(5,15) = OQ(82);
Q(5,16) = OQ(87);
Q(6,1) = OQ(19);
Q(6,2) = OQ(26);
Q(6,3) = OQ(31);
Q(6,4) = OQ(28);
Q(6,5) = OQ(1);
Q(6,6) = OG(53)^2*acc_cov_x + OG(61)^2*acc_cov_z + OG(63)^2*acc_cov_y + OG(55)^2*omega_cov_y + OG(66)^2*omega_cov_z + OG(71)^2*omega_cov_x + OG(55)*OQ(64) + OG(66)*OQ(62) + OG(71)*OQ(57) + OG(53)*OQ(88) + OG(61)*OQ(84) + OG(63)*OQ(83);
Q(6,7) = OQ(3);
Q(6,8) = OQ(7);
Q(6,9) = OQ(9);
Q(6,10) = OQ(8);
Q(6,11) = OQ(57);
Q(6,12) = OQ(64);
Q(6,13) = OQ(62);
Q(6,14) = OQ(88);
Q(6,15) = OQ(83);
Q(6,16) = OQ(84);
Q(7,1) = OQ(21);
Q(7,2) = OQ(30);
Q(7,3) = OQ(33);
Q(7,4) = OQ(32);
Q(7,5) = OQ(2);
Q(7,6) = OQ(3);
Q(7,7) = OG(51)^2*acc_cov_y + OG(60)^2*acc_cov_z + OG(62)^2*acc_cov_x + OG(54)^2*omega_cov_z + OG(67)^2*omega_cov_y + OG(68)^2*omega_cov_x + OG(54)*OQ(65) + OG(67)*OQ(61) + OG(68)*OQ(60) + OG(51)*OQ(89) + OG(60)*OQ(86) + OG(62)*OQ(85);
Q(7,8) = OQ(10);
Q(7,9) = OQ(12);
Q(7,10) = OQ(11);
Q(7,11) = OQ(60);
Q(7,12) = OQ(61);
Q(7,13) = OQ(65);
Q(7,14) = OQ(85);
Q(7,15) = OQ(89);
Q(7,16) = OQ(86);
Q(8,1) = OQ(34);
Q(8,2) = OQ(37);
Q(8,3) = OQ(43);
Q(8,4) = OQ(39);
Q(8,5) = OQ(4);
Q(8,6) = OQ(7);
Q(8,7) = OQ(10);
Q(8,8) = OQ(47)*acc_cov_x + OQ(47)*acc_bias_cov_x + OG(47)^2*acc_cov_y + OG(82)^2*acc_cov_z + OG(31)^2*omega_cov_x + OG(36)^2*omega_cov_y + OG(40)^2*omega_cov_z + OG(31)*OQ(77) + OG(36)*OQ(72) + OG(40)*OQ(69) + OG(47)*OQ(90) + OG(82)*OQ(79);
Q(8,9) = OQ(14);
Q(8,10) = OQ(13);
Q(8,11) = OQ(77);
Q(8,12) = OQ(72);
Q(8,13) = OQ(69);
Q(8,14) = OQ(95);
Q(8,15) = OQ(90);
Q(8,16) = OQ(79);
Q(9,1) = OQ(35);
Q(9,2) = OQ(38);
Q(9,3) = OQ(44);
Q(9,4) = OQ(41);
Q(9,5) = OQ(6);
Q(9,6) = OQ(9);
Q(9,7) = OQ(12);
Q(9,8) = OQ(14);
Q(9,9) = OQ(47)*acc_cov_y + OQ(47)*acc_bias_cov_y + OG(45)^2*acc_cov_z + OG(81)^2*acc_cov_x + OG(32)^2*omega_cov_y + OG(35)^2*omega_cov_z + OG(39)^2*omega_cov_x + OG(32)*OQ(76) + OG(35)*OQ(73) + OG(39)*OQ(70) + OG(45)*OQ(91) + OG(81)*OQ(80);
Q(9,10) = OQ(15);
Q(9,11) = OQ(70);
Q(9,12) = OQ(76);
Q(9,13) = OQ(73);
Q(9,14) = OQ(80);
Q(9,15) = OQ(94);
Q(9,16) = OQ(91);
Q(10,1) = OQ(36);
Q(10,2) = OQ(40);
Q(10,3) = OQ(45);
Q(10,4) = OQ(42);
Q(10,5) = OQ(5);
Q(10,6) = OQ(8);
Q(10,7) = OQ(11);
Q(10,8) = OQ(13);
Q(10,9) = OQ(15);
Q(10,10) = OQ(47)*acc_cov_z + OQ(47)*acc_bias_cov_z + OG(46)^2*acc_cov_x + OG(83)^2*acc_cov_y + OG(34)^2*omega_cov_x + OG(33)^2*omega_cov_z + OG(38)^2*omega_cov_y + OG(33)*OQ(74) + OG(34)*OQ(75) + OG(38)*OQ(71) + OG(46)*OQ(92) + OG(83)*OQ(78);
Q(10,11) = OQ(75);
Q(10,12) = OQ(71);
Q(10,13) = OQ(74);
Q(10,14) = OQ(92);
Q(10,15) = OQ(78);
Q(10,16) = OQ(93);
Q(11,1) = OQ(51);
Q(11,2) = OQ(54);
Q(11,3) = OQ(68);
Q(11,4) = OQ(49);
Q(11,5) = OQ(63);
Q(11,6) = OQ(57);
Q(11,7) = OQ(60);
Q(11,8) = OQ(77);
Q(11,9) = OQ(70);
Q(11,10) = OQ(75);
Q(11,11) = omega_bias_cov_x;
Q(12,1) = OQ(53);
Q(12,2) = OQ(48);
Q(12,3) = OQ(55);
Q(12,4) = OQ(66);
Q(12,5) = OQ(58);
Q(12,6) = OQ(64);
Q(12,7) = OQ(61);
Q(12,8) = OQ(72);
Q(12,9) = OQ(76);
Q(12,10) = OQ(71);
Q(12,12) = omega_bias_cov_y;
Q(13,1) = OQ(52);
Q(13,2) = OQ(67);
Q(13,3) = OQ(50);
Q(13,4) = OQ(56);
Q(13,5) = OQ(59);
Q(13,6) = OQ(62);
Q(13,7) = OQ(65);
Q(13,8) = OQ(69);
Q(13,9) = OQ(73);
Q(13,10) = OQ(74);
Q(13,13) = omega_bias_cov_z;
Q(14,5) = OQ(81);
Q(14,6) = OQ(88);
Q(14,7) = OQ(85);
Q(14,8) = OQ(95);
Q(14,9) = OQ(80);
Q(14,10) = OQ(92);
Q(14,14) = acc_bias_cov_x;
Q(15,5) = OQ(82);
Q(15,6) = OQ(83);
Q(15,7) = OQ(89);
Q(15,8) = OQ(90);
Q(15,9) = OQ(94);
Q(15,10) = OQ(78);
Q(15,15) = acc_bias_cov_y;
Q(16,5) = OQ(87);
Q(16,6) = OQ(84);
Q(16,7) = OQ(86);
Q(16,8) = OQ(79);
Q(16,9) = OQ(91);
Q(16,10) = OQ(93);
Q(16,16) = acc_bias_cov_z;
Q(17,17) = OQ(46)*mag_noise_cov_n;
Q(18,18) = OQ(46)*mag_noise_cov_e;
Q(19,19) = OQ(46)*mag_noise_cov_d;
Q(20,20) = OQ(46)*mag_bias_noise_cov_x;
Q(21,21) = OQ(46)*mag_bias_noise_cov_y;
Q(22,22) = OQ(46)*mag_bias_noise_cov_z;
Q(23,23) = OQ(46)*baro_bias_noise_cov;
next_P = zeros(23,23);
next_P(1,1) = LP(1,1) + (OF(51) + OF(60) + OF(37)*q3)*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) + (OF(52) + OF(59) + OF(39)*q4)*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + (OF(53) + OF(58) + OF(38)*q2)*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) + OG(75)^2*omega_cov_y + OG(76)^2*omega_cov_z + OG(78)^2*omega_cov_x + OF(35)*(LP(1,3) + LP(11,3)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,3)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,3)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,3)*OF(35) + LP(2,3)*OF(67) + LP(4,3)*OF(69)) + OF(67)*(LP(1,2) + LP(11,2)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,2)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,2)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,2)*OF(35) + LP(2,2)*OF(67) + LP(4,2)*OF(69)) + OF(69)*(LP(1,4) + LP(11,4)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,4)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,4)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,4)*OF(35) + LP(2,4)*OF(67) + LP(4,4)*OF(69)) + LP(11,1)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,1)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,1)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,1)*OF(35) + LP(2,1)*OF(67) + LP(4,1)*OF(69) + OG(75)*OQ(53) + OG(76)*OQ(52) + OG(78)*OQ(51);
next_P(1,2) = LP(1,2) + OQ(16) - (OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24)*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) + (OF(53) + OF(58) + OF(37)*q1)*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + (OF(45) + OF(71) + OF(72))*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) + OF(36)*(LP(1,1) + LP(11,1)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,1)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,1)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,1)*OF(35) + LP(2,1)*OF(67) + LP(4,1)*OF(69)) + OF(34)*(LP(1,3) + LP(11,3)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,3)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,3)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,3)*OF(35) + LP(2,3)*OF(67) + LP(4,3)*OF(69)) + OF(35)*(LP(1,4) + LP(11,4)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,4)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,4)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,4)*OF(35) + LP(2,4)*OF(67) + LP(4,4)*OF(69)) + LP(11,2)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,2)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,2)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,2)*OF(35) + LP(2,2)*OF(67) + LP(4,2)*OF(69);
next_P(2,2) = LP(2,2) - (OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24)*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35)) + (OF(53) + OF(58) + OF(37)*q1)*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) + OG(43)^2*omega_cov_z + OG(74)^2*omega_cov_x + OG(80)^2*omega_cov_y - LP(13,2)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + (OF(45) + OF(71) + OF(72))*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) + OF(36)*(LP(2,1) - LP(13,1)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,1)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,1)*(OF(45) + OF(71) + OF(72)) + LP(1,1)*OF(36) + LP(3,1)*OF(34) + LP(4,1)*OF(35)) + OF(34)*(LP(2,3) - LP(13,3)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,3)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,3)*(OF(45) + OF(71) + OF(72)) + LP(1,3)*OF(36) + LP(3,3)*OF(34) + LP(4,3)*OF(35)) + OF(35)*(LP(2,4) - LP(13,4)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,4)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,4)*(OF(45) + OF(71) + OF(72)) + LP(1,4)*OF(36) + LP(3,4)*OF(34) + LP(4,4)*OF(35)) + LP(12,2)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,2)*(OF(45) + OF(71) + OF(72)) + LP(1,2)*OF(36) + LP(3,2)*OF(34) + LP(4,2)*OF(35) + OG(43)*OQ(67) + OG(74)*OQ(54) + OG(80)*OQ(48);
next_P(1,3) = LP(1,3) + OQ(20) - (OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24)*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) + (OF(51) + OF(60) + OF(39)*q1)*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) + (OF(45) + OF(70) + OF(72))*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + OF(36)*(LP(1,4) + LP(11,4)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,4)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,4)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,4)*OF(35) + LP(2,4)*OF(67) + LP(4,4)*OF(69)) + OF(68)*(LP(1,1) + LP(11,1)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,1)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,1)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,1)*OF(35) + LP(2,1)*OF(67) + LP(4,1)*OF(69)) + OF(69)*(LP(1,2) + LP(11,2)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,2)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,2)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,2)*OF(35) + LP(2,2)*OF(67) + LP(4,2)*OF(69)) + LP(11,3)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,3)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,3)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,3)*OF(35) + LP(2,3)*OF(67) + LP(4,3)*OF(69);
next_P(2,3) = LP(2,3) + OQ(25) - (OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24)*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) + (OF(51) + OF(60) + OF(39)*q1)*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35)) - LP(13,3)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + (OF(45) + OF(70) + OF(72))*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) + OF(36)*(LP(2,4) - LP(13,4)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,4)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,4)*(OF(45) + OF(71) + OF(72)) + LP(1,4)*OF(36) + LP(3,4)*OF(34) + LP(4,4)*OF(35)) + OF(68)*(LP(2,1) - LP(13,1)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,1)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,1)*(OF(45) + OF(71) + OF(72)) + LP(1,1)*OF(36) + LP(3,1)*OF(34) + LP(4,1)*OF(35)) + OF(69)*(LP(2,2) - LP(13,2)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,2)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,2)*(OF(45) + OF(71) + OF(72)) + LP(1,2)*OF(36) + LP(3,2)*OF(34) + LP(4,2)*OF(35)) + LP(12,3)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,3)*(OF(45) + OF(71) + OF(72)) + LP(1,3)*OF(36) + LP(3,3)*OF(34) + LP(4,3)*OF(35);
next_P(3,3) = LP(3,3) - (OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24)*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) + (OF(51) + OF(60) + OF(39)*q1)*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36)) + OG(42)^2*omega_cov_x + OG(73)^2*omega_cov_y + OG(77)^2*omega_cov_z - LP(11,3)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + (OF(45) + OF(70) + OF(72))*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36)) + OF(36)*(LP(3,4) - LP(11,4)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,4)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,4)*(OF(45) + OF(70) + OF(72)) + LP(4,4)*OF(36) + LP(1,4)*OF(68) + LP(2,4)*OF(69)) + OF(68)*(LP(3,1) - LP(11,1)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,1)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,1)*(OF(45) + OF(70) + OF(72)) + LP(4,1)*OF(36) + LP(1,1)*OF(68) + LP(2,1)*OF(69)) + OF(69)*(LP(3,2) - LP(11,2)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,2)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,2)*(OF(45) + OF(70) + OF(72)) + LP(4,2)*OF(36) + LP(1,2)*OF(68) + LP(2,2)*OF(69)) + LP(13,3)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,3)*(OF(45) + OF(70) + OF(72)) + LP(4,3)*OF(36) + LP(1,3)*OF(68) + LP(2,3)*OF(69) + OG(42)*OQ(68) + OG(77)*OQ(50) + OG(73)*OQ(55);
next_P(1,4) = LP(1,4) + OQ(18) - (OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24)*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + (OF(52) + OF(59) + OF(38)*q1)*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) + (OF(45) + OF(70) + OF(71))*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) + OF(34)*(LP(1,1) + LP(11,1)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,1)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,1)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,1)*OF(35) + LP(2,1)*OF(67) + LP(4,1)*OF(69)) + OF(68)*(LP(1,2) + LP(11,2)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,2)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,2)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,2)*OF(35) + LP(2,2)*OF(67) + LP(4,2)*OF(69)) + OF(67)*(LP(1,3) + LP(11,3)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,3)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,3)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,3)*OF(35) + LP(2,3)*OF(67) + LP(4,3)*OF(69)) + LP(11,4)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,4)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,4)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,4)*OF(35) + LP(2,4)*OF(67) + LP(4,4)*OF(69);
next_P(2,4) = LP(2,4) + OQ(22) - (OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24)*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) + (OF(52) + OF(59) + OF(38)*q1)*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) - LP(13,4)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + (OF(45) + OF(70) + OF(71))*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35)) + OF(34)*(LP(2,1) - LP(13,1)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,1)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,1)*(OF(45) + OF(71) + OF(72)) + LP(1,1)*OF(36) + LP(3,1)*OF(34) + LP(4,1)*OF(35)) + OF(68)*(LP(2,2) - LP(13,2)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,2)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,2)*(OF(45) + OF(71) + OF(72)) + LP(1,2)*OF(36) + LP(3,2)*OF(34) + LP(4,2)*OF(35)) + OF(67)*(LP(2,3) - LP(13,3)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,3)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,3)*(OF(45) + OF(71) + OF(72)) + LP(1,3)*OF(36) + LP(3,3)*OF(34) + LP(4,3)*OF(35)) + LP(12,4)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,4)*(OF(45) + OF(71) + OF(72)) + LP(1,4)*OF(36) + LP(3,4)*OF(34) + LP(4,4)*OF(35);
next_P(3,4) = LP(3,4) + OQ(27) - (OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24)*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36)) + (OF(52) + OF(59) + OF(38)*q1)*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) - LP(11,4)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + (OF(45) + OF(70) + OF(71))*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36)) + OF(34)*(LP(3,1) - LP(11,1)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,1)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,1)*(OF(45) + OF(70) + OF(72)) + LP(4,1)*OF(36) + LP(1,1)*OF(68) + LP(2,1)*OF(69)) + OF(68)*(LP(3,2) - LP(11,2)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,2)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,2)*(OF(45) + OF(70) + OF(72)) + LP(4,2)*OF(36) + LP(1,2)*OF(68) + LP(2,2)*OF(69)) + OF(67)*(LP(3,3) - LP(11,3)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,3)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,3)*(OF(45) + OF(70) + OF(72)) + LP(4,3)*OF(36) + LP(1,3)*OF(68) + LP(2,3)*OF(69)) + LP(13,4)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,4)*(OF(45) + OF(70) + OF(72)) + LP(4,4)*OF(36) + LP(1,4)*OF(68) + LP(2,4)*OF(69);
next_P(4,4) = LP(4,4) - (OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24)*(LP(4,12) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67)) + (OF(52) + OF(59) + OF(38)*q1)*(LP(4,11) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67)) + OG(44)^2*omega_cov_y + OG(72)^2*omega_cov_z + OG(79)^2*omega_cov_x - LP(12,4)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + (OF(45) + OF(70) + OF(71))*(LP(4,13) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67)) + OF(34)*(LP(4,1) - LP(12,1)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,1)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,1)*(OF(45) + OF(70) + OF(71)) + LP(1,1)*OF(34) + LP(2,1)*OF(68) + LP(3,1)*OF(67)) + OF(68)*(LP(4,2) - LP(12,2)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,2)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,2)*(OF(45) + OF(70) + OF(71)) + LP(1,2)*OF(34) + LP(2,2)*OF(68) + LP(3,2)*OF(67)) + OF(67)*(LP(4,3) - LP(12,3)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,3)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,3)*(OF(45) + OF(70) + OF(71)) + LP(1,3)*OF(34) + LP(2,3)*OF(68) + LP(3,3)*OF(67)) + LP(11,4)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,4)*(OF(45) + OF(70) + OF(71)) + LP(1,4)*OF(34) + LP(2,4)*OF(68) + LP(3,4)*OF(67) + OG(44)*OQ(66) + OG(72)*OQ(56) + OG(79)*OQ(49);
next_P(1,5) = LP(1,5) + OQ(17) + OF(42)*(LP(1,1) + LP(11,1)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,1)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,1)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,1)*OF(35) + LP(2,1)*OF(67) + LP(4,1)*OF(69)) + OF(40)*(LP(1,2) + LP(11,2)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,2)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,2)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,2)*OF(35) + LP(2,2)*OF(67) + LP(4,2)*OF(69)) + OF(44)*(LP(1,3) + LP(11,3)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,3)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,3)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,3)*OF(35) + LP(2,3)*OF(67) + LP(4,3)*OF(69)) - OF(43)*(LP(1,4) + LP(11,4)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,4)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,4)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,4)*OF(35) + LP(2,4)*OF(67) + LP(4,4)*OF(69)) - (OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32))*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) + (OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32))*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + (OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28))*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) + (OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32))*(LP(1,14) + LP(11,14)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,14)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,14)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,14)*OF(67) + LP(3,14)*OF(35) + LP(4,14)*OF(69)) + (OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32))*(LP(1,15) + LP(11,15)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,15)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,15)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,15)*OF(67) + LP(3,15)*OF(35) + LP(4,15)*OF(69)) - (OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28))*(LP(1,16) + LP(11,16)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,16)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,16)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,16)*OF(67) + LP(3,16)*OF(35) + LP(4,16)*OF(69)) + LP(11,5)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,5)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,5)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,5)*OF(35) + LP(2,5)*OF(67) + LP(4,5)*OF(69);
next_P(2,5) = LP(2,5) + OQ(23) - LP(13,5)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + OF(42)*(LP(2,1) - LP(13,1)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,1)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,1)*(OF(45) + OF(71) + OF(72)) + LP(1,1)*OF(36) + LP(3,1)*OF(34) + LP(4,1)*OF(35)) + OF(40)*(LP(2,2) - LP(13,2)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,2)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,2)*(OF(45) + OF(71) + OF(72)) + LP(1,2)*OF(36) + LP(3,2)*OF(34) + LP(4,2)*OF(35)) + OF(44)*(LP(2,3) - LP(13,3)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,3)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,3)*(OF(45) + OF(71) + OF(72)) + LP(1,3)*OF(36) + LP(3,3)*OF(34) + LP(4,3)*OF(35)) - OF(43)*(LP(2,4) - LP(13,4)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,4)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,4)*(OF(45) + OF(71) + OF(72)) + LP(1,4)*OF(36) + LP(3,4)*OF(34) + LP(4,4)*OF(35)) - (OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32))*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) + (OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32))*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) + (OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28))*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35)) + (OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32))*(LP(2,14) - LP(13,14)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,14)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,14)*(OF(45) + OF(71) + OF(72)) + LP(1,14)*OF(36) + LP(3,14)*OF(34) + LP(4,14)*OF(35)) + (OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32))*(LP(2,15) - LP(13,15)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,15)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,15)*(OF(45) + OF(71) + OF(72)) + LP(1,15)*OF(36) + LP(3,15)*OF(34) + LP(4,15)*OF(35)) - (OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28))*(LP(2,16) - LP(13,16)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,16)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,16)*(OF(45) + OF(71) + OF(72)) + LP(1,16)*OF(36) + LP(3,16)*OF(34) + LP(4,16)*OF(35)) + LP(12,5)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,5)*(OF(45) + OF(71) + OF(72)) + LP(1,5)*OF(36) + LP(3,5)*OF(34) + LP(4,5)*OF(35);
next_P(3,5) = LP(3,5) + OQ(29) - LP(11,5)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + OF(42)*(LP(3,1) - LP(11,1)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,1)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,1)*(OF(45) + OF(70) + OF(72)) + LP(4,1)*OF(36) + LP(1,1)*OF(68) + LP(2,1)*OF(69)) + OF(40)*(LP(3,2) - LP(11,2)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,2)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,2)*(OF(45) + OF(70) + OF(72)) + LP(4,2)*OF(36) + LP(1,2)*OF(68) + LP(2,2)*OF(69)) + OF(44)*(LP(3,3) - LP(11,3)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,3)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,3)*(OF(45) + OF(70) + OF(72)) + LP(4,3)*OF(36) + LP(1,3)*OF(68) + LP(2,3)*OF(69)) - OF(43)*(LP(3,4) - LP(11,4)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,4)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,4)*(OF(45) + OF(70) + OF(72)) + LP(4,4)*OF(36) + LP(1,4)*OF(68) + LP(2,4)*OF(69)) - (OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32))*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) + (OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32))*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36)) + (OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28))*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36)) + (OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32))*(LP(3,14) - LP(11,14)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,14)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,14)*(OF(45) + OF(70) + OF(72)) + LP(1,14)*OF(68) + LP(2,14)*OF(69) + LP(4,14)*OF(36)) + (OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32))*(LP(3,15) - LP(11,15)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,15)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,15)*(OF(45) + OF(70) + OF(72)) + LP(1,15)*OF(68) + LP(2,15)*OF(69) + LP(4,15)*OF(36)) - (OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28))*(LP(3,16) - LP(11,16)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,16)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,16)*(OF(45) + OF(70) + OF(72)) + LP(1,16)*OF(68) + LP(2,16)*OF(69) + LP(4,16)*OF(36)) + LP(13,5)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,5)*(OF(45) + OF(70) + OF(72)) + LP(4,5)*OF(36) + LP(1,5)*OF(68) + LP(2,5)*OF(69);
next_P(4,5) = LP(4,5) + OQ(24) - LP(12,5)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + OF(42)*(LP(4,1) - LP(12,1)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,1)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,1)*(OF(45) + OF(70) + OF(71)) + LP(1,1)*OF(34) + LP(2,1)*OF(68) + LP(3,1)*OF(67)) + OF(40)*(LP(4,2) - LP(12,2)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,2)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,2)*(OF(45) + OF(70) + OF(71)) + LP(1,2)*OF(34) + LP(2,2)*OF(68) + LP(3,2)*OF(67)) + OF(44)*(LP(4,3) - LP(12,3)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,3)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,3)*(OF(45) + OF(70) + OF(71)) + LP(1,3)*OF(34) + LP(2,3)*OF(68) + LP(3,3)*OF(67)) - OF(43)*(LP(4,4) - LP(12,4)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,4)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,4)*(OF(45) + OF(70) + OF(71)) + LP(1,4)*OF(34) + LP(2,4)*OF(68) + LP(3,4)*OF(67)) - (OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32))*(LP(4,11) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67)) + (OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32))*(LP(4,12) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67)) + (OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28))*(LP(4,13) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67)) + (OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32))*(LP(4,14) - LP(12,14)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,14)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,14)*(OF(45) + OF(70) + OF(71)) + LP(1,14)*OF(34) + LP(2,14)*OF(68) + LP(3,14)*OF(67)) + (OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32))*(LP(4,15) - LP(12,15)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,15)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,15)*(OF(45) + OF(70) + OF(71)) + LP(1,15)*OF(34) + LP(2,15)*OF(68) + LP(3,15)*OF(67)) - (OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28))*(LP(4,16) - LP(12,16)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,16)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,16)*(OF(45) + OF(70) + OF(71)) + LP(1,16)*OF(34) + LP(2,16)*OF(68) + LP(3,16)*OF(67)) + LP(11,5)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,5)*(OF(45) + OF(70) + OF(71)) + LP(1,5)*OF(34) + LP(2,5)*OF(68) + LP(3,5)*OF(67);
next_P(5,5) = LP(5,5) - LP(11,5)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,5)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,5)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,5)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,5)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,5)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + OG(52)^2*acc_cov_z + OG(64)^2*acc_cov_y + OG(65)^2*acc_cov_x + OG(56)^2*omega_cov_x + OG(69)^2*omega_cov_z + OG(70)^2*omega_cov_y + OF(42)*(LP(5,1) - LP(11,1)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,1)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,1)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,1)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,1)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,1)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,1)*OF(42) + LP(2,1)*OF(40) + LP(3,1)*OF(44) - LP(4,1)*OF(43)) + OF(40)*(LP(5,2) - LP(11,2)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,2)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,2)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,2)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,2)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,2)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,2)*OF(42) + LP(2,2)*OF(40) + LP(3,2)*OF(44) - LP(4,2)*OF(43)) + OF(44)*(LP(5,3) - LP(11,3)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,3)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,3)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,3)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,3)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,3)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,3)*OF(42) + LP(2,3)*OF(40) + LP(3,3)*OF(44) - LP(4,3)*OF(43)) - OF(43)*(LP(5,4) - LP(11,4)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,4)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,4)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,4)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,4)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,4)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,4)*OF(42) + LP(2,4)*OF(40) + LP(3,4)*OF(44) - LP(4,4)*OF(43)) - (OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32))*(LP(5,11) - LP(11,11)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,11)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,11)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,11)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,11)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,11)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,11)*OF(42) + LP(2,11)*OF(40) + LP(3,11)*OF(44) - LP(4,11)*OF(43)) + (OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32))*(LP(5,12) - LP(11,12)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,12)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,12)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,12)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,12)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,12)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,12)*OF(42) + LP(2,12)*OF(40) + LP(3,12)*OF(44) - LP(4,12)*OF(43)) + (OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28))*(LP(5,13) - LP(11,13)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,13)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,13)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,13)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,13)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,13)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,13)*OF(42) + LP(2,13)*OF(40) + LP(3,13)*OF(44) - LP(4,13)*OF(43)) + (OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32))*(LP(5,14) - LP(11,14)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,14)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,14)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,14)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,14)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,14)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,14)*OF(42) + LP(2,14)*OF(40) + LP(3,14)*OF(44) - LP(4,14)*OF(43)) + (OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32))*(LP(5,15) - LP(11,15)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,15)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,15)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,15)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,15)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,15)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,15)*OF(42) + LP(2,15)*OF(40) + LP(3,15)*OF(44) - LP(4,15)*OF(43)) - (OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28))*(LP(5,16) - LP(11,16)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,16)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,16)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,16)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,16)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,16)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,16)*OF(42) + LP(2,16)*OF(40) + LP(3,16)*OF(44) - LP(4,16)*OF(43)) + LP(1,5)*OF(42) + LP(2,5)*OF(40) + LP(3,5)*OF(44) - LP(4,5)*OF(43) + OG(56)*OQ(63) + OG(69)*OQ(59) + OG(70)*OQ(58) + OG(52)*OQ(87) + OG(64)*OQ(82) + OG(65)*OQ(81);
next_P(1,6) = LP(1,6) + OQ(19) + OF(43)*(LP(1,1) + LP(11,1)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,1)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,1)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,1)*OF(35) + LP(2,1)*OF(67) + LP(4,1)*OF(69)) - OF(44)*(LP(1,2) + LP(11,2)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,2)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,2)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,2)*OF(35) + LP(2,2)*OF(67) + LP(4,2)*OF(69)) + OF(40)*(LP(1,3) + LP(11,3)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,3)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,3)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,3)*OF(35) + LP(2,3)*OF(67) + LP(4,3)*OF(69)) + OF(42)*(LP(1,4) + LP(11,4)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,4)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,4)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,4)*OF(35) + LP(2,4)*OF(67) + LP(4,4)*OF(69)) + (OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30))*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) - (OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31))*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + (OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31))*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) - (OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30))*(LP(1,14) + LP(11,14)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,14)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,14)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,14)*OF(67) + LP(3,14)*OF(35) + LP(4,14)*OF(69)) + (OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30))*(LP(1,15) + LP(11,15)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,15)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,15)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,15)*OF(67) + LP(3,15)*OF(35) + LP(4,15)*OF(69)) + (OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31))*(LP(1,16) + LP(11,16)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,16)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,16)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,16)*OF(67) + LP(3,16)*OF(35) + LP(4,16)*OF(69)) + LP(11,6)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,6)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,6)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,6)*OF(35) + LP(2,6)*OF(67) + LP(4,6)*OF(69);
next_P(2,6) = LP(2,6) + OQ(26) - LP(13,6)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + OF(43)*(LP(2,1) - LP(13,1)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,1)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,1)*(OF(45) + OF(71) + OF(72)) + LP(1,1)*OF(36) + LP(3,1)*OF(34) + LP(4,1)*OF(35)) - OF(44)*(LP(2,2) - LP(13,2)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,2)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,2)*(OF(45) + OF(71) + OF(72)) + LP(1,2)*OF(36) + LP(3,2)*OF(34) + LP(4,2)*OF(35)) + OF(40)*(LP(2,3) - LP(13,3)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,3)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,3)*(OF(45) + OF(71) + OF(72)) + LP(1,3)*OF(36) + LP(3,3)*OF(34) + LP(4,3)*OF(35)) + OF(42)*(LP(2,4) - LP(13,4)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,4)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,4)*(OF(45) + OF(71) + OF(72)) + LP(1,4)*OF(36) + LP(3,4)*OF(34) + LP(4,4)*OF(35)) + (OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30))*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) - (OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31))*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) + (OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31))*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35)) - (OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30))*(LP(2,14) - LP(13,14)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,14)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,14)*(OF(45) + OF(71) + OF(72)) + LP(1,14)*OF(36) + LP(3,14)*OF(34) + LP(4,14)*OF(35)) + (OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30))*(LP(2,15) - LP(13,15)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,15)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,15)*(OF(45) + OF(71) + OF(72)) + LP(1,15)*OF(36) + LP(3,15)*OF(34) + LP(4,15)*OF(35)) + (OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31))*(LP(2,16) - LP(13,16)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,16)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,16)*(OF(45) + OF(71) + OF(72)) + LP(1,16)*OF(36) + LP(3,16)*OF(34) + LP(4,16)*OF(35)) + LP(12,6)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,6)*(OF(45) + OF(71) + OF(72)) + LP(1,6)*OF(36) + LP(3,6)*OF(34) + LP(4,6)*OF(35);
next_P(3,6) = LP(3,6) + OQ(31) - LP(11,6)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + OF(43)*(LP(3,1) - LP(11,1)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,1)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,1)*(OF(45) + OF(70) + OF(72)) + LP(4,1)*OF(36) + LP(1,1)*OF(68) + LP(2,1)*OF(69)) - OF(44)*(LP(3,2) - LP(11,2)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,2)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,2)*(OF(45) + OF(70) + OF(72)) + LP(4,2)*OF(36) + LP(1,2)*OF(68) + LP(2,2)*OF(69)) + OF(40)*(LP(3,3) - LP(11,3)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,3)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,3)*(OF(45) + OF(70) + OF(72)) + LP(4,3)*OF(36) + LP(1,3)*OF(68) + LP(2,3)*OF(69)) + OF(42)*(LP(3,4) - LP(11,4)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,4)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,4)*(OF(45) + OF(70) + OF(72)) + LP(4,4)*OF(36) + LP(1,4)*OF(68) + LP(2,4)*OF(69)) + (OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30))*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) - (OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31))*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36)) + (OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31))*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36)) - (OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30))*(LP(3,14) - LP(11,14)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,14)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,14)*(OF(45) + OF(70) + OF(72)) + LP(1,14)*OF(68) + LP(2,14)*OF(69) + LP(4,14)*OF(36)) + (OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30))*(LP(3,15) - LP(11,15)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,15)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,15)*(OF(45) + OF(70) + OF(72)) + LP(1,15)*OF(68) + LP(2,15)*OF(69) + LP(4,15)*OF(36)) + (OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31))*(LP(3,16) - LP(11,16)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,16)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,16)*(OF(45) + OF(70) + OF(72)) + LP(1,16)*OF(68) + LP(2,16)*OF(69) + LP(4,16)*OF(36)) + LP(13,6)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,6)*(OF(45) + OF(70) + OF(72)) + LP(4,6)*OF(36) + LP(1,6)*OF(68) + LP(2,6)*OF(69);
next_P(4,6) = LP(4,6) + OQ(28) - LP(12,6)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + OF(43)*(LP(4,1) - LP(12,1)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,1)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,1)*(OF(45) + OF(70) + OF(71)) + LP(1,1)*OF(34) + LP(2,1)*OF(68) + LP(3,1)*OF(67)) - OF(44)*(LP(4,2) - LP(12,2)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,2)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,2)*(OF(45) + OF(70) + OF(71)) + LP(1,2)*OF(34) + LP(2,2)*OF(68) + LP(3,2)*OF(67)) + OF(40)*(LP(4,3) - LP(12,3)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,3)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,3)*(OF(45) + OF(70) + OF(71)) + LP(1,3)*OF(34) + LP(2,3)*OF(68) + LP(3,3)*OF(67)) + OF(42)*(LP(4,4) - LP(12,4)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,4)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,4)*(OF(45) + OF(70) + OF(71)) + LP(1,4)*OF(34) + LP(2,4)*OF(68) + LP(3,4)*OF(67)) + (OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30))*(LP(4,11) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67)) - (OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31))*(LP(4,12) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67)) + (OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31))*(LP(4,13) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67)) - (OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30))*(LP(4,14) - LP(12,14)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,14)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,14)*(OF(45) + OF(70) + OF(71)) + LP(1,14)*OF(34) + LP(2,14)*OF(68) + LP(3,14)*OF(67)) + (OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30))*(LP(4,15) - LP(12,15)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,15)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,15)*(OF(45) + OF(70) + OF(71)) + LP(1,15)*OF(34) + LP(2,15)*OF(68) + LP(3,15)*OF(67)) + (OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31))*(LP(4,16) - LP(12,16)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,16)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,16)*(OF(45) + OF(70) + OF(71)) + LP(1,16)*OF(34) + LP(2,16)*OF(68) + LP(3,16)*OF(67)) + LP(11,6)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,6)*(OF(45) + OF(70) + OF(71)) + LP(1,6)*OF(34) + LP(2,6)*OF(68) + LP(3,6)*OF(67);
next_P(5,6) = LP(5,6) + OQ(1) - LP(11,6)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,6)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,6)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,6)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,6)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,6)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + OF(43)*(LP(5,1) - LP(11,1)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,1)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,1)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,1)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,1)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,1)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,1)*OF(42) + LP(2,1)*OF(40) + LP(3,1)*OF(44) - LP(4,1)*OF(43)) - OF(44)*(LP(5,2) - LP(11,2)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,2)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,2)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,2)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,2)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,2)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,2)*OF(42) + LP(2,2)*OF(40) + LP(3,2)*OF(44) - LP(4,2)*OF(43)) + OF(40)*(LP(5,3) - LP(11,3)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,3)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,3)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,3)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,3)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,3)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,3)*OF(42) + LP(2,3)*OF(40) + LP(3,3)*OF(44) - LP(4,3)*OF(43)) + OF(42)*(LP(5,4) - LP(11,4)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,4)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,4)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,4)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,4)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,4)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,4)*OF(42) + LP(2,4)*OF(40) + LP(3,4)*OF(44) - LP(4,4)*OF(43)) + (OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30))*(LP(5,11) - LP(11,11)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,11)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,11)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,11)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,11)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,11)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,11)*OF(42) + LP(2,11)*OF(40) + LP(3,11)*OF(44) - LP(4,11)*OF(43)) - (OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31))*(LP(5,12) - LP(11,12)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,12)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,12)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,12)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,12)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,12)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,12)*OF(42) + LP(2,12)*OF(40) + LP(3,12)*OF(44) - LP(4,12)*OF(43)) + (OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31))*(LP(5,13) - LP(11,13)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,13)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,13)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,13)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,13)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,13)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,13)*OF(42) + LP(2,13)*OF(40) + LP(3,13)*OF(44) - LP(4,13)*OF(43)) - (OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30))*(LP(5,14) - LP(11,14)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,14)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,14)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,14)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,14)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,14)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,14)*OF(42) + LP(2,14)*OF(40) + LP(3,14)*OF(44) - LP(4,14)*OF(43)) + (OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30))*(LP(5,15) - LP(11,15)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,15)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,15)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,15)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,15)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,15)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,15)*OF(42) + LP(2,15)*OF(40) + LP(3,15)*OF(44) - LP(4,15)*OF(43)) + (OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31))*(LP(5,16) - LP(11,16)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,16)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,16)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,16)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,16)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,16)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,16)*OF(42) + LP(2,16)*OF(40) + LP(3,16)*OF(44) - LP(4,16)*OF(43)) + LP(1,6)*OF(42) + LP(2,6)*OF(40) + LP(3,6)*OF(44) - LP(4,6)*OF(43);
next_P(6,6) = LP(6,6) + LP(11,6)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,6)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,6)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,6)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,6)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,6)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + OG(53)^2*acc_cov_x + OG(61)^2*acc_cov_z + OG(63)^2*acc_cov_y + OG(55)^2*omega_cov_y + OG(66)^2*omega_cov_z + OG(71)^2*omega_cov_x + OF(43)*(LP(6,1) + LP(11,1)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,1)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,1)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,1)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,1)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,1)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,1)*OF(43) - LP(2,1)*OF(44) + LP(3,1)*OF(40) + LP(4,1)*OF(42)) - OF(44)*(LP(6,2) + LP(11,2)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,2)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,2)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,2)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,2)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,2)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,2)*OF(43) - LP(2,2)*OF(44) + LP(3,2)*OF(40) + LP(4,2)*OF(42)) + OF(40)*(LP(6,3) + LP(11,3)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,3)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,3)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,3)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,3)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,3)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,3)*OF(43) - LP(2,3)*OF(44) + LP(3,3)*OF(40) + LP(4,3)*OF(42)) + OF(42)*(LP(6,4) + LP(11,4)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,4)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,4)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,4)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,4)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,4)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,4)*OF(43) - LP(2,4)*OF(44) + LP(3,4)*OF(40) + LP(4,4)*OF(42)) + (OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30))*(LP(6,11) + LP(11,11)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,11)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,11)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,11)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,11)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,11)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,11)*OF(43) - LP(2,11)*OF(44) + LP(3,11)*OF(40) + LP(4,11)*OF(42)) - (OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31))*(LP(6,12) + LP(11,12)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,12)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,12)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,12)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,12)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,12)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,12)*OF(43) - LP(2,12)*OF(44) + LP(3,12)*OF(40) + LP(4,12)*OF(42)) + (OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31))*(LP(6,13) + LP(11,13)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,13)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,13)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,13)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,13)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,13)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,13)*OF(43) - LP(2,13)*OF(44) + LP(3,13)*OF(40) + LP(4,13)*OF(42)) - (OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30))*(LP(6,14) + LP(11,14)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,14)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,14)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,14)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,14)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,14)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,14)*OF(43) - LP(2,14)*OF(44) + LP(3,14)*OF(40) + LP(4,14)*OF(42)) + (OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30))*(LP(6,15) + LP(11,15)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,15)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,15)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,15)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,15)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,15)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,15)*OF(43) - LP(2,15)*OF(44) + LP(3,15)*OF(40) + LP(4,15)*OF(42)) + (OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31))*(LP(6,16) + LP(11,16)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,16)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,16)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,16)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,16)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,16)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,16)*OF(43) - LP(2,16)*OF(44) + LP(3,16)*OF(40) + LP(4,16)*OF(42)) + LP(1,6)*OF(43) - LP(2,6)*OF(44) + LP(3,6)*OF(40) + LP(4,6)*OF(42) + OG(55)*OQ(64) + OG(66)*OQ(62) + OG(71)*OQ(57) + OG(53)*OQ(88) + OG(61)*OQ(84) + OG(63)*OQ(83);
next_P(1,7) = LP(1,7) + OQ(21) + OF(44)*(LP(1,1) + LP(11,1)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,1)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,1)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,1)*OF(35) + LP(2,1)*OF(67) + LP(4,1)*OF(69)) + OF(43)*(LP(1,2) + LP(11,2)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,2)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,2)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,2)*OF(35) + LP(2,2)*OF(67) + LP(4,2)*OF(69)) - OF(42)*(LP(1,3) + LP(11,3)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,3)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,3)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,3)*OF(35) + LP(2,3)*OF(67) + LP(4,3)*OF(69)) + OF(40)*(LP(1,4) + LP(11,4)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,4)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,4)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,4)*OF(35) + LP(2,4)*OF(67) + LP(4,4)*OF(69)) + (OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33))*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) + (OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29))*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) - (OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33))*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) + (OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33))*(LP(1,14) + LP(11,14)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,14)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,14)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,14)*OF(67) + LP(3,14)*OF(35) + LP(4,14)*OF(69)) - (OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29))*(LP(1,15) + LP(11,15)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,15)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,15)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,15)*OF(67) + LP(3,15)*OF(35) + LP(4,15)*OF(69)) + (OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33))*(LP(1,16) + LP(11,16)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,16)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,16)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,16)*OF(67) + LP(3,16)*OF(35) + LP(4,16)*OF(69)) + LP(11,7)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,7)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,7)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,7)*OF(35) + LP(2,7)*OF(67) + LP(4,7)*OF(69);
next_P(2,7) = LP(2,7) + OQ(30) - LP(13,7)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + OF(44)*(LP(2,1) - LP(13,1)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,1)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,1)*(OF(45) + OF(71) + OF(72)) + LP(1,1)*OF(36) + LP(3,1)*OF(34) + LP(4,1)*OF(35)) + OF(43)*(LP(2,2) - LP(13,2)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,2)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,2)*(OF(45) + OF(71) + OF(72)) + LP(1,2)*OF(36) + LP(3,2)*OF(34) + LP(4,2)*OF(35)) - OF(42)*(LP(2,3) - LP(13,3)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,3)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,3)*(OF(45) + OF(71) + OF(72)) + LP(1,3)*OF(36) + LP(3,3)*OF(34) + LP(4,3)*OF(35)) + OF(40)*(LP(2,4) - LP(13,4)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,4)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,4)*(OF(45) + OF(71) + OF(72)) + LP(1,4)*OF(36) + LP(3,4)*OF(34) + LP(4,4)*OF(35)) + (OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33))*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) + (OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29))*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) - (OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33))*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35)) + (OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33))*(LP(2,14) - LP(13,14)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,14)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,14)*(OF(45) + OF(71) + OF(72)) + LP(1,14)*OF(36) + LP(3,14)*OF(34) + LP(4,14)*OF(35)) - (OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29))*(LP(2,15) - LP(13,15)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,15)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,15)*(OF(45) + OF(71) + OF(72)) + LP(1,15)*OF(36) + LP(3,15)*OF(34) + LP(4,15)*OF(35)) + (OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33))*(LP(2,16) - LP(13,16)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,16)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,16)*(OF(45) + OF(71) + OF(72)) + LP(1,16)*OF(36) + LP(3,16)*OF(34) + LP(4,16)*OF(35)) + LP(12,7)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,7)*(OF(45) + OF(71) + OF(72)) + LP(1,7)*OF(36) + LP(3,7)*OF(34) + LP(4,7)*OF(35);
next_P(3,7) = LP(3,7) + OQ(33) - LP(11,7)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + OF(44)*(LP(3,1) - LP(11,1)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,1)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,1)*(OF(45) + OF(70) + OF(72)) + LP(4,1)*OF(36) + LP(1,1)*OF(68) + LP(2,1)*OF(69)) + OF(43)*(LP(3,2) - LP(11,2)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,2)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,2)*(OF(45) + OF(70) + OF(72)) + LP(4,2)*OF(36) + LP(1,2)*OF(68) + LP(2,2)*OF(69)) - OF(42)*(LP(3,3) - LP(11,3)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,3)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,3)*(OF(45) + OF(70) + OF(72)) + LP(4,3)*OF(36) + LP(1,3)*OF(68) + LP(2,3)*OF(69)) + OF(40)*(LP(3,4) - LP(11,4)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,4)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,4)*(OF(45) + OF(70) + OF(72)) + LP(4,4)*OF(36) + LP(1,4)*OF(68) + LP(2,4)*OF(69)) + (OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33))*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) + (OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29))*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36)) - (OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33))*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36)) + (OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33))*(LP(3,14) - LP(11,14)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,14)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,14)*(OF(45) + OF(70) + OF(72)) + LP(1,14)*OF(68) + LP(2,14)*OF(69) + LP(4,14)*OF(36)) - (OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29))*(LP(3,15) - LP(11,15)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,15)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,15)*(OF(45) + OF(70) + OF(72)) + LP(1,15)*OF(68) + LP(2,15)*OF(69) + LP(4,15)*OF(36)) + (OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33))*(LP(3,16) - LP(11,16)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,16)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,16)*(OF(45) + OF(70) + OF(72)) + LP(1,16)*OF(68) + LP(2,16)*OF(69) + LP(4,16)*OF(36)) + LP(13,7)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,7)*(OF(45) + OF(70) + OF(72)) + LP(4,7)*OF(36) + LP(1,7)*OF(68) + LP(2,7)*OF(69);
next_P(4,7) = LP(4,7) + OQ(32) - LP(12,7)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + OF(44)*(LP(4,1) - LP(12,1)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,1)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,1)*(OF(45) + OF(70) + OF(71)) + LP(1,1)*OF(34) + LP(2,1)*OF(68) + LP(3,1)*OF(67)) + OF(43)*(LP(4,2) - LP(12,2)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,2)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,2)*(OF(45) + OF(70) + OF(71)) + LP(1,2)*OF(34) + LP(2,2)*OF(68) + LP(3,2)*OF(67)) - OF(42)*(LP(4,3) - LP(12,3)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,3)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,3)*(OF(45) + OF(70) + OF(71)) + LP(1,3)*OF(34) + LP(2,3)*OF(68) + LP(3,3)*OF(67)) + OF(40)*(LP(4,4) - LP(12,4)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,4)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,4)*(OF(45) + OF(70) + OF(71)) + LP(1,4)*OF(34) + LP(2,4)*OF(68) + LP(3,4)*OF(67)) + (OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33))*(LP(4,11) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67)) + (OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29))*(LP(4,12) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67)) - (OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33))*(LP(4,13) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67)) + (OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33))*(LP(4,14) - LP(12,14)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,14)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,14)*(OF(45) + OF(70) + OF(71)) + LP(1,14)*OF(34) + LP(2,14)*OF(68) + LP(3,14)*OF(67)) - (OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29))*(LP(4,15) - LP(12,15)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,15)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,15)*(OF(45) + OF(70) + OF(71)) + LP(1,15)*OF(34) + LP(2,15)*OF(68) + LP(3,15)*OF(67)) + (OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33))*(LP(4,16) - LP(12,16)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,16)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,16)*(OF(45) + OF(70) + OF(71)) + LP(1,16)*OF(34) + LP(2,16)*OF(68) + LP(3,16)*OF(67)) + LP(11,7)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,7)*(OF(45) + OF(70) + OF(71)) + LP(1,7)*OF(34) + LP(2,7)*OF(68) + LP(3,7)*OF(67);
next_P(5,7) = LP(5,7) + OQ(2) - LP(11,7)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,7)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,7)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,7)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,7)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,7)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + OF(44)*(LP(5,1) - LP(11,1)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,1)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,1)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,1)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,1)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,1)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,1)*OF(42) + LP(2,1)*OF(40) + LP(3,1)*OF(44) - LP(4,1)*OF(43)) + OF(43)*(LP(5,2) - LP(11,2)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,2)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,2)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,2)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,2)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,2)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,2)*OF(42) + LP(2,2)*OF(40) + LP(3,2)*OF(44) - LP(4,2)*OF(43)) - OF(42)*(LP(5,3) - LP(11,3)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,3)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,3)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,3)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,3)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,3)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,3)*OF(42) + LP(2,3)*OF(40) + LP(3,3)*OF(44) - LP(4,3)*OF(43)) + OF(40)*(LP(5,4) - LP(11,4)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,4)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,4)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,4)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,4)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,4)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,4)*OF(42) + LP(2,4)*OF(40) + LP(3,4)*OF(44) - LP(4,4)*OF(43)) + (OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33))*(LP(5,11) - LP(11,11)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,11)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,11)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,11)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,11)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,11)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,11)*OF(42) + LP(2,11)*OF(40) + LP(3,11)*OF(44) - LP(4,11)*OF(43)) + (OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29))*(LP(5,12) - LP(11,12)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,12)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,12)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,12)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,12)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,12)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,12)*OF(42) + LP(2,12)*OF(40) + LP(3,12)*OF(44) - LP(4,12)*OF(43)) - (OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33))*(LP(5,13) - LP(11,13)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,13)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,13)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,13)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,13)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,13)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,13)*OF(42) + LP(2,13)*OF(40) + LP(3,13)*OF(44) - LP(4,13)*OF(43)) + (OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33))*(LP(5,14) - LP(11,14)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,14)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,14)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,14)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,14)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,14)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,14)*OF(42) + LP(2,14)*OF(40) + LP(3,14)*OF(44) - LP(4,14)*OF(43)) - (OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29))*(LP(5,15) - LP(11,15)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,15)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,15)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,15)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,15)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,15)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,15)*OF(42) + LP(2,15)*OF(40) + LP(3,15)*OF(44) - LP(4,15)*OF(43)) + (OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33))*(LP(5,16) - LP(11,16)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,16)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,16)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,16)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,16)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,16)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,16)*OF(42) + LP(2,16)*OF(40) + LP(3,16)*OF(44) - LP(4,16)*OF(43)) + LP(1,7)*OF(42) + LP(2,7)*OF(40) + LP(3,7)*OF(44) - LP(4,7)*OF(43);
next_P(6,7) = LP(6,7) + OQ(3) + LP(11,7)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,7)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,7)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,7)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,7)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,7)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + OF(44)*(LP(6,1) + LP(11,1)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,1)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,1)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,1)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,1)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,1)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,1)*OF(43) - LP(2,1)*OF(44) + LP(3,1)*OF(40) + LP(4,1)*OF(42)) + OF(43)*(LP(6,2) + LP(11,2)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,2)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,2)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,2)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,2)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,2)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,2)*OF(43) - LP(2,2)*OF(44) + LP(3,2)*OF(40) + LP(4,2)*OF(42)) - OF(42)*(LP(6,3) + LP(11,3)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,3)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,3)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,3)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,3)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,3)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,3)*OF(43) - LP(2,3)*OF(44) + LP(3,3)*OF(40) + LP(4,3)*OF(42)) + OF(40)*(LP(6,4) + LP(11,4)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,4)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,4)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,4)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,4)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,4)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,4)*OF(43) - LP(2,4)*OF(44) + LP(3,4)*OF(40) + LP(4,4)*OF(42)) + (OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33))*(LP(6,11) + LP(11,11)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,11)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,11)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,11)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,11)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,11)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,11)*OF(43) - LP(2,11)*OF(44) + LP(3,11)*OF(40) + LP(4,11)*OF(42)) + (OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29))*(LP(6,12) + LP(11,12)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,12)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,12)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,12)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,12)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,12)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,12)*OF(43) - LP(2,12)*OF(44) + LP(3,12)*OF(40) + LP(4,12)*OF(42)) - (OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33))*(LP(6,13) + LP(11,13)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,13)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,13)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,13)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,13)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,13)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,13)*OF(43) - LP(2,13)*OF(44) + LP(3,13)*OF(40) + LP(4,13)*OF(42)) + (OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33))*(LP(6,14) + LP(11,14)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,14)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,14)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,14)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,14)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,14)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,14)*OF(43) - LP(2,14)*OF(44) + LP(3,14)*OF(40) + LP(4,14)*OF(42)) - (OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29))*(LP(6,15) + LP(11,15)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,15)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,15)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,15)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,15)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,15)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,15)*OF(43) - LP(2,15)*OF(44) + LP(3,15)*OF(40) + LP(4,15)*OF(42)) + (OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33))*(LP(6,16) + LP(11,16)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,16)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,16)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,16)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,16)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,16)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,16)*OF(43) - LP(2,16)*OF(44) + LP(3,16)*OF(40) + LP(4,16)*OF(42)) + LP(1,7)*OF(43) - LP(2,7)*OF(44) + LP(3,7)*OF(40) + LP(4,7)*OF(42);
next_P(7,7) = LP(7,7) + LP(11,7)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,7)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,7)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,7)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,7)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,7)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + OG(51)^2*acc_cov_y + OG(60)^2*acc_cov_z + OG(62)^2*acc_cov_x + OG(54)^2*omega_cov_z + OG(67)^2*omega_cov_y + OG(68)^2*omega_cov_x + OF(44)*(LP(7,1) + LP(11,1)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,1)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,1)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,1)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,1)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,1)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,1)*OF(44) + LP(2,1)*OF(43) - LP(3,1)*OF(42) + LP(4,1)*OF(40)) + OF(43)*(LP(7,2) + LP(11,2)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,2)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,2)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,2)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,2)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,2)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,2)*OF(44) + LP(2,2)*OF(43) - LP(3,2)*OF(42) + LP(4,2)*OF(40)) - OF(42)*(LP(7,3) + LP(11,3)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,3)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,3)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,3)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,3)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,3)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,3)*OF(44) + LP(2,3)*OF(43) - LP(3,3)*OF(42) + LP(4,3)*OF(40)) + OF(40)*(LP(7,4) + LP(11,4)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,4)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,4)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,4)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,4)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,4)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,4)*OF(44) + LP(2,4)*OF(43) - LP(3,4)*OF(42) + LP(4,4)*OF(40)) + (OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33))*(LP(7,11) + LP(11,11)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,11)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,11)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,11)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,11)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,11)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,11)*OF(44) + LP(2,11)*OF(43) - LP(3,11)*OF(42) + LP(4,11)*OF(40)) + (OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29))*(LP(7,12) + LP(11,12)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,12)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,12)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,12)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,12)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,12)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,12)*OF(44) + LP(2,12)*OF(43) - LP(3,12)*OF(42) + LP(4,12)*OF(40)) - (OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33))*(LP(7,13) + LP(11,13)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,13)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,13)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,13)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,13)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,13)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,13)*OF(44) + LP(2,13)*OF(43) - LP(3,13)*OF(42) + LP(4,13)*OF(40)) + (OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33))*(LP(7,14) + LP(11,14)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,14)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,14)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,14)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,14)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,14)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,14)*OF(44) + LP(2,14)*OF(43) - LP(3,14)*OF(42) + LP(4,14)*OF(40)) - (OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29))*(LP(7,15) + LP(11,15)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,15)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,15)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,15)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,15)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,15)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,15)*OF(44) + LP(2,15)*OF(43) - LP(3,15)*OF(42) + LP(4,15)*OF(40)) + (OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33))*(LP(7,16) + LP(11,16)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,16)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,16)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,16)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,16)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,16)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,16)*OF(44) + LP(2,16)*OF(43) - LP(3,16)*OF(42) + LP(4,16)*OF(40)) + LP(1,7)*OF(44) + LP(2,7)*OF(43) - LP(3,7)*OF(42) + LP(4,7)*OF(40) + OG(54)*OQ(65) + OG(67)*OQ(61) + OG(68)*OQ(60) + OG(51)*OQ(89) + OG(60)*OQ(86) + OG(62)*OQ(85);
next_P(1,8) = LP(1,8) + OQ(34) + OF(41)*(LP(1,14) + LP(11,14)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,14)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,14)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,14)*OF(67) + LP(3,14)*OF(35) + LP(4,14)*OF(69)) + OF(50)*(LP(1,15) + LP(11,15)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,15)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,15)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,15)*OF(67) + LP(3,15)*OF(35) + LP(4,15)*OF(69)) - OF(49)*(LP(1,16) + LP(11,16)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,16)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,16)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,16)*OF(67) + LP(3,16)*OF(35) + LP(4,16)*OF(69)) + dt*(LP(1,5) + LP(11,5)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,5)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,5)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,5)*OF(35) + LP(2,5)*OF(67) + LP(4,5)*OF(69)) + LP(11,8)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,8)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,8)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,8)*OF(35) + LP(2,8)*OF(67) + LP(4,8)*OF(69) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69));
next_P(2,8) = LP(2,8) + OQ(37) - LP(13,8)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + OF(41)*(LP(2,14) - LP(13,14)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,14)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,14)*(OF(45) + OF(71) + OF(72)) + LP(1,14)*OF(36) + LP(3,14)*OF(34) + LP(4,14)*OF(35)) + OF(50)*(LP(2,15) - LP(13,15)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,15)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,15)*(OF(45) + OF(71) + OF(72)) + LP(1,15)*OF(36) + LP(3,15)*OF(34) + LP(4,15)*OF(35)) - OF(49)*(LP(2,16) - LP(13,16)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,16)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,16)*(OF(45) + OF(71) + OF(72)) + LP(1,16)*OF(36) + LP(3,16)*OF(34) + LP(4,16)*OF(35)) + dt*(LP(2,5) - LP(13,5)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,5)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,5)*(OF(45) + OF(71) + OF(72)) + LP(1,5)*OF(36) + LP(3,5)*OF(34) + LP(4,5)*OF(35)) + LP(12,8)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,8)*(OF(45) + OF(71) + OF(72)) + LP(1,8)*OF(36) + LP(3,8)*OF(34) + LP(4,8)*OF(35) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35));
next_P(3,8) = LP(3,8) + OQ(43) - LP(11,8)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + OF(41)*(LP(3,14) - LP(11,14)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,14)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,14)*(OF(45) + OF(70) + OF(72)) + LP(1,14)*OF(68) + LP(2,14)*OF(69) + LP(4,14)*OF(36)) + OF(50)*(LP(3,15) - LP(11,15)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,15)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,15)*(OF(45) + OF(70) + OF(72)) + LP(1,15)*OF(68) + LP(2,15)*OF(69) + LP(4,15)*OF(36)) - OF(49)*(LP(3,16) - LP(11,16)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,16)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,16)*(OF(45) + OF(70) + OF(72)) + LP(1,16)*OF(68) + LP(2,16)*OF(69) + LP(4,16)*OF(36)) + dt*(LP(3,5) - LP(11,5)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,5)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,5)*(OF(45) + OF(70) + OF(72)) + LP(4,5)*OF(36) + LP(1,5)*OF(68) + LP(2,5)*OF(69)) + LP(13,8)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,8)*(OF(45) + OF(70) + OF(72)) + LP(4,8)*OF(36) + LP(1,8)*OF(68) + LP(2,8)*OF(69) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36)) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36));
next_P(4,8) = LP(4,8) + OQ(39) - LP(12,8)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + OF(41)*(LP(4,14) - LP(12,14)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,14)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,14)*(OF(45) + OF(70) + OF(71)) + LP(1,14)*OF(34) + LP(2,14)*OF(68) + LP(3,14)*OF(67)) + OF(50)*(LP(4,15) - LP(12,15)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,15)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,15)*(OF(45) + OF(70) + OF(71)) + LP(1,15)*OF(34) + LP(2,15)*OF(68) + LP(3,15)*OF(67)) - OF(49)*(LP(4,16) - LP(12,16)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,16)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,16)*(OF(45) + OF(70) + OF(71)) + LP(1,16)*OF(34) + LP(2,16)*OF(68) + LP(3,16)*OF(67)) + dt*(LP(4,5) - LP(12,5)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,5)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,5)*(OF(45) + OF(70) + OF(71)) + LP(1,5)*OF(34) + LP(2,5)*OF(68) + LP(3,5)*OF(67)) + LP(11,8)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,8)*(OF(45) + OF(70) + OF(71)) + LP(1,8)*OF(34) + LP(2,8)*OF(68) + LP(3,8)*OF(67) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(4,11) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67)) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(4,12) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67)) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(4,13) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67));
next_P(5,8) = LP(5,8) + OQ(4) - LP(11,8)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,8)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,8)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,8)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,8)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,8)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + OF(41)*(LP(5,14) - LP(11,14)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,14)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,14)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,14)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,14)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,14)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,14)*OF(42) + LP(2,14)*OF(40) + LP(3,14)*OF(44) - LP(4,14)*OF(43)) + OF(50)*(LP(5,15) - LP(11,15)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,15)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,15)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,15)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,15)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,15)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,15)*OF(42) + LP(2,15)*OF(40) + LP(3,15)*OF(44) - LP(4,15)*OF(43)) - OF(49)*(LP(5,16) - LP(11,16)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,16)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,16)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,16)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,16)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,16)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,16)*OF(42) + LP(2,16)*OF(40) + LP(3,16)*OF(44) - LP(4,16)*OF(43)) + dt*(LP(5,5) - LP(11,5)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,5)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,5)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,5)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,5)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,5)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,5)*OF(42) + LP(2,5)*OF(40) + LP(3,5)*OF(44) - LP(4,5)*OF(43)) + LP(1,8)*OF(42) + LP(2,8)*OF(40) + LP(3,8)*OF(44) - LP(4,8)*OF(43) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(5,11) - LP(11,11)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,11)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,11)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,11)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,11)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,11)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,11)*OF(42) + LP(2,11)*OF(40) + LP(3,11)*OF(44) - LP(4,11)*OF(43)) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(5,12) - LP(11,12)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,12)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,12)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,12)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,12)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,12)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,12)*OF(42) + LP(2,12)*OF(40) + LP(3,12)*OF(44) - LP(4,12)*OF(43)) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(5,13) - LP(11,13)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,13)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,13)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,13)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,13)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,13)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,13)*OF(42) + LP(2,13)*OF(40) + LP(3,13)*OF(44) - LP(4,13)*OF(43));
next_P(6,8) = LP(6,8) + OQ(7) + LP(11,8)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,8)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,8)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,8)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,8)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,8)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + OF(41)*(LP(6,14) + LP(11,14)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,14)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,14)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,14)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,14)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,14)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,14)*OF(43) - LP(2,14)*OF(44) + LP(3,14)*OF(40) + LP(4,14)*OF(42)) + OF(50)*(LP(6,15) + LP(11,15)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,15)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,15)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,15)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,15)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,15)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,15)*OF(43) - LP(2,15)*OF(44) + LP(3,15)*OF(40) + LP(4,15)*OF(42)) - OF(49)*(LP(6,16) + LP(11,16)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,16)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,16)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,16)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,16)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,16)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,16)*OF(43) - LP(2,16)*OF(44) + LP(3,16)*OF(40) + LP(4,16)*OF(42)) + dt*(LP(6,5) + LP(11,5)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,5)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,5)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,5)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,5)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,5)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,5)*OF(43) - LP(2,5)*OF(44) + LP(3,5)*OF(40) + LP(4,5)*OF(42)) + LP(1,8)*OF(43) - LP(2,8)*OF(44) + LP(3,8)*OF(40) + LP(4,8)*OF(42) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(6,11) + LP(11,11)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,11)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,11)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,11)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,11)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,11)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,11)*OF(43) - LP(2,11)*OF(44) + LP(3,11)*OF(40) + LP(4,11)*OF(42)) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(6,12) + LP(11,12)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,12)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,12)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,12)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,12)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,12)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,12)*OF(43) - LP(2,12)*OF(44) + LP(3,12)*OF(40) + LP(4,12)*OF(42)) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(6,13) + LP(11,13)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,13)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,13)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,13)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,13)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,13)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,13)*OF(43) - LP(2,13)*OF(44) + LP(3,13)*OF(40) + LP(4,13)*OF(42));
next_P(7,8) = LP(7,8) + OQ(10) + LP(11,8)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,8)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,8)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,8)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,8)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,8)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + OF(41)*(LP(7,14) + LP(11,14)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,14)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,14)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,14)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,14)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,14)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,14)*OF(44) + LP(2,14)*OF(43) - LP(3,14)*OF(42) + LP(4,14)*OF(40)) + OF(50)*(LP(7,15) + LP(11,15)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,15)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,15)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,15)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,15)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,15)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,15)*OF(44) + LP(2,15)*OF(43) - LP(3,15)*OF(42) + LP(4,15)*OF(40)) - OF(49)*(LP(7,16) + LP(11,16)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,16)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,16)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,16)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,16)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,16)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,16)*OF(44) + LP(2,16)*OF(43) - LP(3,16)*OF(42) + LP(4,16)*OF(40)) + dt*(LP(7,5) + LP(11,5)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,5)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,5)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,5)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,5)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,5)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,5)*OF(44) + LP(2,5)*OF(43) - LP(3,5)*OF(42) + LP(4,5)*OF(40)) + LP(1,8)*OF(44) + LP(2,8)*OF(43) - LP(3,8)*OF(42) + LP(4,8)*OF(40) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(7,11) + LP(11,11)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,11)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,11)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,11)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,11)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,11)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,11)*OF(44) + LP(2,11)*OF(43) - LP(3,11)*OF(42) + LP(4,11)*OF(40)) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(7,12) + LP(11,12)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,12)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,12)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,12)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,12)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,12)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,12)*OF(44) + LP(2,12)*OF(43) - LP(3,12)*OF(42) + LP(4,12)*OF(40)) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(7,13) + LP(11,13)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,13)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,13)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,13)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,13)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,13)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,13)*OF(44) + LP(2,13)*OF(43) - LP(3,13)*OF(42) + LP(4,13)*OF(40));
next_P(8,8) = LP(8,8) + OQ(47)*acc_cov_x + OQ(47)*acc_bias_cov_x + LP(5,8)*dt + OF(41)*(LP(8,14) + LP(5,14)*dt + LP(14,14)*OF(41) + LP(15,14)*OF(50) - LP(16,14)*OF(49) - LP(12,14)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,14)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,14)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + OF(50)*(LP(8,15) + LP(5,15)*dt + LP(14,15)*OF(41) + LP(15,15)*OF(50) - LP(16,15)*OF(49) - LP(12,15)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,15)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,15)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) - OF(49)*(LP(8,16) + LP(5,16)*dt + LP(14,16)*OF(41) + LP(15,16)*OF(50) - LP(16,16)*OF(49) - LP(12,16)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,16)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,16)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + dt*(LP(8,5) + LP(5,5)*dt + LP(14,5)*OF(41) + LP(15,5)*OF(50) - LP(16,5)*OF(49) - LP(12,5)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,5)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,5)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + OG(47)^2*acc_cov_y + OG(82)^2*acc_cov_z + OG(31)^2*omega_cov_x + OG(36)^2*omega_cov_y + OG(40)^2*omega_cov_z + LP(14,8)*OF(41) + LP(15,8)*OF(50) - LP(16,8)*OF(49) + OG(31)*OQ(77) + OG(36)*OQ(72) + OG(40)*OQ(69) + OG(47)*OQ(90) + OG(82)*OQ(79) - LP(12,8)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,8)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) - dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288)*(LP(8,12) + LP(5,12)*dt + LP(14,12)*OF(41) + LP(15,12)*OF(50) - LP(16,12)*OF(49) - LP(12,12)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,12)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,12)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288)*(LP(8,13) + LP(5,13)*dt + LP(14,13)*OF(41) + LP(15,13)*OF(50) - LP(16,13)*OF(49) - LP(12,13)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,13)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,13)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + LP(11,8)*dt*(OF(46) + OF(47) + OF(55) + OF(56)) + dt*(OF(46) + OF(47) + OF(55) + OF(56))*(LP(8,11) + LP(5,11)*dt + LP(14,11)*OF(41) + LP(15,11)*OF(50) - LP(16,11)*OF(49) - LP(12,11)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,11)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,11)*dt*(OF(46) + OF(47) + OF(55) + OF(56)));
next_P(1,9) = LP(1,9) + OQ(35) + OF(41)*(LP(1,15) + LP(11,15)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,15)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,15)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,15)*OF(67) + LP(3,15)*OF(35) + LP(4,15)*OF(69)) - OF(50)*(LP(1,14) + LP(11,14)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,14)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,14)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,14)*OF(67) + LP(3,14)*OF(35) + LP(4,14)*OF(69)) + OF(48)*(LP(1,16) + LP(11,16)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,16)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,16)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,16)*OF(67) + LP(3,16)*OF(35) + LP(4,16)*OF(69)) + dt*(LP(1,6) + LP(11,6)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,6)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,6)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,6)*OF(35) + LP(2,6)*OF(67) + LP(4,6)*OF(69)) + LP(11,9)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,9)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,9)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,9)*OF(35) + LP(2,9)*OF(67) + LP(4,9)*OF(69) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69)) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69));
next_P(2,9) = LP(2,9) + OQ(38) - LP(13,9)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + OF(41)*(LP(2,15) - LP(13,15)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,15)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,15)*(OF(45) + OF(71) + OF(72)) + LP(1,15)*OF(36) + LP(3,15)*OF(34) + LP(4,15)*OF(35)) - OF(50)*(LP(2,14) - LP(13,14)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,14)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,14)*(OF(45) + OF(71) + OF(72)) + LP(1,14)*OF(36) + LP(3,14)*OF(34) + LP(4,14)*OF(35)) + OF(48)*(LP(2,16) - LP(13,16)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,16)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,16)*(OF(45) + OF(71) + OF(72)) + LP(1,16)*OF(36) + LP(3,16)*OF(34) + LP(4,16)*OF(35)) + dt*(LP(2,6) - LP(13,6)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,6)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,6)*(OF(45) + OF(71) + OF(72)) + LP(1,6)*OF(36) + LP(3,6)*OF(34) + LP(4,6)*OF(35)) + LP(12,9)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,9)*(OF(45) + OF(71) + OF(72)) + LP(1,9)*OF(36) + LP(3,9)*OF(34) + LP(4,9)*OF(35) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35)) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35));
next_P(3,9) = LP(3,9) + OQ(44) - LP(11,9)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + OF(41)*(LP(3,15) - LP(11,15)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,15)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,15)*(OF(45) + OF(70) + OF(72)) + LP(1,15)*OF(68) + LP(2,15)*OF(69) + LP(4,15)*OF(36)) - OF(50)*(LP(3,14) - LP(11,14)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,14)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,14)*(OF(45) + OF(70) + OF(72)) + LP(1,14)*OF(68) + LP(2,14)*OF(69) + LP(4,14)*OF(36)) + OF(48)*(LP(3,16) - LP(11,16)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,16)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,16)*(OF(45) + OF(70) + OF(72)) + LP(1,16)*OF(68) + LP(2,16)*OF(69) + LP(4,16)*OF(36)) + dt*(LP(3,6) - LP(11,6)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,6)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,6)*(OF(45) + OF(70) + OF(72)) + LP(4,6)*OF(36) + LP(1,6)*OF(68) + LP(2,6)*OF(69)) + LP(13,9)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,9)*(OF(45) + OF(70) + OF(72)) + LP(4,9)*OF(36) + LP(1,9)*OF(68) + LP(2,9)*OF(69) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36)) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36));
next_P(4,9) = LP(4,9) + OQ(41) - LP(12,9)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + OF(41)*(LP(4,15) - LP(12,15)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,15)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,15)*(OF(45) + OF(70) + OF(71)) + LP(1,15)*OF(34) + LP(2,15)*OF(68) + LP(3,15)*OF(67)) - OF(50)*(LP(4,14) - LP(12,14)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,14)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,14)*(OF(45) + OF(70) + OF(71)) + LP(1,14)*OF(34) + LP(2,14)*OF(68) + LP(3,14)*OF(67)) + OF(48)*(LP(4,16) - LP(12,16)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,16)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,16)*(OF(45) + OF(70) + OF(71)) + LP(1,16)*OF(34) + LP(2,16)*OF(68) + LP(3,16)*OF(67)) + dt*(LP(4,6) - LP(12,6)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,6)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,6)*(OF(45) + OF(70) + OF(71)) + LP(1,6)*OF(34) + LP(2,6)*OF(68) + LP(3,6)*OF(67)) + LP(11,9)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,9)*(OF(45) + OF(70) + OF(71)) + LP(1,9)*OF(34) + LP(2,9)*OF(68) + LP(3,9)*OF(67) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(4,12) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67)) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(4,11) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67)) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(4,13) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67));
next_P(5,9) = LP(5,9) + OQ(6) - LP(11,9)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,9)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,9)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,9)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,9)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,9)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) - OF(50)*(LP(5,14) - LP(11,14)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,14)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,14)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,14)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,14)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,14)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,14)*OF(42) + LP(2,14)*OF(40) + LP(3,14)*OF(44) - LP(4,14)*OF(43)) + OF(41)*(LP(5,15) - LP(11,15)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,15)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,15)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,15)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,15)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,15)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,15)*OF(42) + LP(2,15)*OF(40) + LP(3,15)*OF(44) - LP(4,15)*OF(43)) + OF(48)*(LP(5,16) - LP(11,16)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,16)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,16)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,16)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,16)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,16)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,16)*OF(42) + LP(2,16)*OF(40) + LP(3,16)*OF(44) - LP(4,16)*OF(43)) + dt*(LP(5,6) - LP(11,6)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,6)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,6)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,6)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,6)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,6)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,6)*OF(42) + LP(2,6)*OF(40) + LP(3,6)*OF(44) - LP(4,6)*OF(43)) + LP(1,9)*OF(42) + LP(2,9)*OF(40) + LP(3,9)*OF(44) - LP(4,9)*OF(43) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(5,12) - LP(11,12)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,12)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,12)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,12)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,12)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,12)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,12)*OF(42) + LP(2,12)*OF(40) + LP(3,12)*OF(44) - LP(4,12)*OF(43)) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(5,11) - LP(11,11)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,11)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,11)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,11)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,11)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,11)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,11)*OF(42) + LP(2,11)*OF(40) + LP(3,11)*OF(44) - LP(4,11)*OF(43)) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(5,13) - LP(11,13)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,13)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,13)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,13)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,13)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,13)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,13)*OF(42) + LP(2,13)*OF(40) + LP(3,13)*OF(44) - LP(4,13)*OF(43));
next_P(6,9) = LP(6,9) + OQ(9) + LP(11,9)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,9)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,9)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,9)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,9)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,9)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) - OF(50)*(LP(6,14) + LP(11,14)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,14)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,14)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,14)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,14)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,14)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,14)*OF(43) - LP(2,14)*OF(44) + LP(3,14)*OF(40) + LP(4,14)*OF(42)) + OF(41)*(LP(6,15) + LP(11,15)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,15)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,15)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,15)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,15)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,15)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,15)*OF(43) - LP(2,15)*OF(44) + LP(3,15)*OF(40) + LP(4,15)*OF(42)) + OF(48)*(LP(6,16) + LP(11,16)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,16)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,16)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,16)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,16)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,16)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,16)*OF(43) - LP(2,16)*OF(44) + LP(3,16)*OF(40) + LP(4,16)*OF(42)) + dt*(LP(6,6) + LP(11,6)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,6)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,6)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,6)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,6)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,6)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,6)*OF(43) - LP(2,6)*OF(44) + LP(3,6)*OF(40) + LP(4,6)*OF(42)) + LP(1,9)*OF(43) - LP(2,9)*OF(44) + LP(3,9)*OF(40) + LP(4,9)*OF(42) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(6,12) + LP(11,12)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,12)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,12)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,12)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,12)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,12)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,12)*OF(43) - LP(2,12)*OF(44) + LP(3,12)*OF(40) + LP(4,12)*OF(42)) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(6,11) + LP(11,11)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,11)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,11)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,11)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,11)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,11)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,11)*OF(43) - LP(2,11)*OF(44) + LP(3,11)*OF(40) + LP(4,11)*OF(42)) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(6,13) + LP(11,13)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,13)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,13)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,13)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,13)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,13)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,13)*OF(43) - LP(2,13)*OF(44) + LP(3,13)*OF(40) + LP(4,13)*OF(42));
next_P(7,9) = LP(7,9) + OQ(12) + LP(11,9)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,9)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,9)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,9)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,9)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,9)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) - OF(50)*(LP(7,14) + LP(11,14)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,14)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,14)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,14)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,14)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,14)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,14)*OF(44) + LP(2,14)*OF(43) - LP(3,14)*OF(42) + LP(4,14)*OF(40)) + OF(41)*(LP(7,15) + LP(11,15)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,15)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,15)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,15)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,15)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,15)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,15)*OF(44) + LP(2,15)*OF(43) - LP(3,15)*OF(42) + LP(4,15)*OF(40)) + OF(48)*(LP(7,16) + LP(11,16)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,16)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,16)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,16)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,16)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,16)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,16)*OF(44) + LP(2,16)*OF(43) - LP(3,16)*OF(42) + LP(4,16)*OF(40)) + dt*(LP(7,6) + LP(11,6)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,6)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,6)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,6)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,6)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,6)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,6)*OF(44) + LP(2,6)*OF(43) - LP(3,6)*OF(42) + LP(4,6)*OF(40)) + LP(1,9)*OF(44) + LP(2,9)*OF(43) - LP(3,9)*OF(42) + LP(4,9)*OF(40) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(7,12) + LP(11,12)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,12)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,12)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,12)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,12)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,12)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,12)*OF(44) + LP(2,12)*OF(43) - LP(3,12)*OF(42) + LP(4,12)*OF(40)) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(7,11) + LP(11,11)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,11)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,11)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,11)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,11)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,11)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,11)*OF(44) + LP(2,11)*OF(43) - LP(3,11)*OF(42) + LP(4,11)*OF(40)) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(7,13) + LP(11,13)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,13)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,13)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,13)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,13)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,13)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,13)*OF(44) + LP(2,13)*OF(43) - LP(3,13)*OF(42) + LP(4,13)*OF(40));
next_P(8,9) = LP(8,9) + OQ(14) + LP(5,9)*dt + OF(41)*(LP(8,15) + LP(5,15)*dt + LP(14,15)*OF(41) + LP(15,15)*OF(50) - LP(16,15)*OF(49) - LP(12,15)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,15)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,15)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) - OF(50)*(LP(8,14) + LP(5,14)*dt + LP(14,14)*OF(41) + LP(15,14)*OF(50) - LP(16,14)*OF(49) - LP(12,14)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,14)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,14)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + OF(48)*(LP(8,16) + LP(5,16)*dt + LP(14,16)*OF(41) + LP(15,16)*OF(50) - LP(16,16)*OF(49) - LP(12,16)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,16)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,16)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + dt*(LP(8,6) + LP(5,6)*dt + LP(14,6)*OF(41) + LP(15,6)*OF(50) - LP(16,6)*OF(49) - LP(12,6)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,6)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,6)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + LP(14,9)*OF(41) + LP(15,9)*OF(50) - LP(16,9)*OF(49) - LP(12,9)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,9)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(8,11) + LP(5,11)*dt + LP(14,11)*OF(41) + LP(15,11)*OF(50) - LP(16,11)*OF(49) - LP(12,11)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,11)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,11)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(8,13) + LP(5,13)*dt + LP(14,13)*OF(41) + LP(15,13)*OF(50) - LP(16,13)*OF(49) - LP(12,13)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,13)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,13)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + LP(11,9)*dt*(OF(46) + OF(47) + OF(55) + OF(56)) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(8,12) + LP(5,12)*dt + LP(14,12)*OF(41) + LP(15,12)*OF(50) - LP(16,12)*OF(49) - LP(12,12)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,12)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,12)*dt*(OF(46) + OF(47) + OF(55) + OF(56)));
next_P(9,9) = LP(9,9) + OQ(47)*acc_cov_y + OQ(47)*acc_bias_cov_y + LP(6,9)*dt + OF(41)*(LP(9,15) + LP(6,15)*dt - LP(14,15)*OF(50) + LP(15,15)*OF(41) + LP(16,15)*OF(48) + LP(11,15)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,15)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,15)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) - OF(50)*(LP(9,14) + LP(6,14)*dt - LP(14,14)*OF(50) + LP(15,14)*OF(41) + LP(16,14)*OF(48) + LP(11,14)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,14)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,14)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + OF(48)*(LP(9,16) + LP(6,16)*dt - LP(14,16)*OF(50) + LP(15,16)*OF(41) + LP(16,16)*OF(48) + LP(11,16)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,16)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,16)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + dt*(LP(9,6) + LP(6,6)*dt - LP(14,6)*OF(50) + LP(15,6)*OF(41) + LP(16,6)*OF(48) + LP(11,6)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,6)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,6)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + OG(45)^2*acc_cov_z + OG(81)^2*acc_cov_x + OG(32)^2*omega_cov_y + OG(35)^2*omega_cov_z + OG(39)^2*omega_cov_x - LP(14,9)*OF(50) + LP(15,9)*OF(41) + LP(16,9)*OF(48) + OG(32)*OQ(76) + OG(35)*OQ(73) + OG(39)*OQ(70) + OG(45)*OQ(91) + OG(81)*OQ(80) + LP(11,9)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,9)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288)*(LP(9,11) + LP(6,11)*dt - LP(14,11)*OF(50) + LP(15,11)*OF(41) + LP(16,11)*OF(48) + LP(11,11)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,11)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,11)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) - dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288)*(LP(9,13) + LP(6,13)*dt - LP(14,13)*OF(50) + LP(15,13)*OF(41) + LP(16,13)*OF(48) + LP(11,13)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,13)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,13)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + LP(12,9)*dt*(OF(46) + OF(54) + OF(56) + OF(57)) + dt*(OF(46) + OF(54) + OF(56) + OF(57))*(LP(9,12) + LP(6,12)*dt - LP(14,12)*OF(50) + LP(15,12)*OF(41) + LP(16,12)*OF(48) + LP(11,12)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,12)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,12)*dt*(OF(46) + OF(54) + OF(56) + OF(57)));
next_P(1,10) = LP(1,10) + OQ(36) + OF(49)*(LP(1,14) + LP(11,14)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,14)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,14)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,14)*OF(67) + LP(3,14)*OF(35) + LP(4,14)*OF(69)) + OF(41)*(LP(1,16) + LP(11,16)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,16)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,16)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,16)*OF(67) + LP(3,16)*OF(35) + LP(4,16)*OF(69)) - OF(48)*(LP(1,15) + LP(11,15)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,15)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,15)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,15)*OF(67) + LP(3,15)*OF(35) + LP(4,15)*OF(69)) + dt*(LP(1,7) + LP(11,7)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,7)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,7)*(OF(53) + OF(58) + OF(38)*q2) + LP(3,7)*OF(35) + LP(2,7)*OF(67) + LP(4,7)*OF(69)) + LP(11,10)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,10)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,10)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,10)*OF(67) + LP(3,10)*OF(35) + LP(4,10)*OF(69) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(1,13) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69)) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(1,11) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69)) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(1,12) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69));
next_P(2,10) = LP(2,10) + OQ(40) - LP(13,10)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + OF(49)*(LP(2,14) - LP(13,14)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,14)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,14)*(OF(45) + OF(71) + OF(72)) + LP(1,14)*OF(36) + LP(3,14)*OF(34) + LP(4,14)*OF(35)) + OF(41)*(LP(2,16) - LP(13,16)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,16)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,16)*(OF(45) + OF(71) + OF(72)) + LP(1,16)*OF(36) + LP(3,16)*OF(34) + LP(4,16)*OF(35)) - OF(48)*(LP(2,15) - LP(13,15)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,15)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,15)*(OF(45) + OF(71) + OF(72)) + LP(1,15)*OF(36) + LP(3,15)*OF(34) + LP(4,15)*OF(35)) + dt*(LP(2,7) - LP(13,7)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,7)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,7)*(OF(45) + OF(71) + OF(72)) + LP(1,7)*OF(36) + LP(3,7)*OF(34) + LP(4,7)*OF(35)) + LP(12,10)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,10)*(OF(45) + OF(71) + OF(72)) + LP(1,10)*OF(36) + LP(3,10)*OF(34) + LP(4,10)*OF(35) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(2,13) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35)) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(2,11) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35)) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(2,12) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35));
next_P(3,10) = LP(3,10) + OQ(45) - LP(11,10)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + OF(49)*(LP(3,14) - LP(11,14)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,14)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,14)*(OF(45) + OF(70) + OF(72)) + LP(1,14)*OF(68) + LP(2,14)*OF(69) + LP(4,14)*OF(36)) + OF(41)*(LP(3,16) - LP(11,16)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,16)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,16)*(OF(45) + OF(70) + OF(72)) + LP(1,16)*OF(68) + LP(2,16)*OF(69) + LP(4,16)*OF(36)) - OF(48)*(LP(3,15) - LP(11,15)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,15)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,15)*(OF(45) + OF(70) + OF(72)) + LP(1,15)*OF(68) + LP(2,15)*OF(69) + LP(4,15)*OF(36)) + dt*(LP(3,7) - LP(11,7)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,7)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,7)*(OF(45) + OF(70) + OF(72)) + LP(4,7)*OF(36) + LP(1,7)*OF(68) + LP(2,7)*OF(69)) + LP(13,10)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,10)*(OF(45) + OF(70) + OF(72)) + LP(1,10)*OF(68) + LP(2,10)*OF(69) + LP(4,10)*OF(36) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(3,13) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36)) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(3,11) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36)) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(3,12) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36));
next_P(4,10) = LP(4,10) + OQ(42) - LP(12,10)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + OF(49)*(LP(4,14) - LP(12,14)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,14)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,14)*(OF(45) + OF(70) + OF(71)) + LP(1,14)*OF(34) + LP(2,14)*OF(68) + LP(3,14)*OF(67)) + OF(41)*(LP(4,16) - LP(12,16)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,16)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,16)*(OF(45) + OF(70) + OF(71)) + LP(1,16)*OF(34) + LP(2,16)*OF(68) + LP(3,16)*OF(67)) - OF(48)*(LP(4,15) - LP(12,15)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,15)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,15)*(OF(45) + OF(70) + OF(71)) + LP(1,15)*OF(34) + LP(2,15)*OF(68) + LP(3,15)*OF(67)) + dt*(LP(4,7) - LP(12,7)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,7)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,7)*(OF(45) + OF(70) + OF(71)) + LP(1,7)*OF(34) + LP(2,7)*OF(68) + LP(3,7)*OF(67)) + LP(11,10)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,10)*(OF(45) + OF(70) + OF(71)) + LP(1,10)*OF(34) + LP(2,10)*OF(68) + LP(3,10)*OF(67) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(4,13) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67)) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(4,11) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67)) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(4,12) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67));
next_P(5,10) = LP(5,10) + OQ(5) - LP(11,10)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,10)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,10)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,10)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,10)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,10)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + OF(49)*(LP(5,14) - LP(11,14)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,14)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,14)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,14)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,14)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,14)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,14)*OF(42) + LP(2,14)*OF(40) + LP(3,14)*OF(44) - LP(4,14)*OF(43)) - OF(48)*(LP(5,15) - LP(11,15)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,15)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,15)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,15)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,15)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,15)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,15)*OF(42) + LP(2,15)*OF(40) + LP(3,15)*OF(44) - LP(4,15)*OF(43)) + OF(41)*(LP(5,16) - LP(11,16)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,16)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,16)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,16)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,16)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,16)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,16)*OF(42) + LP(2,16)*OF(40) + LP(3,16)*OF(44) - LP(4,16)*OF(43)) + dt*(LP(5,7) - LP(11,7)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,7)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,7)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,7)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,7)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,7)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,7)*OF(42) + LP(2,7)*OF(40) + LP(3,7)*OF(44) - LP(4,7)*OF(43)) + LP(1,10)*OF(42) + LP(2,10)*OF(40) + LP(3,10)*OF(44) - LP(4,10)*OF(43) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(5,13) - LP(11,13)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,13)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,13)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,13)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,13)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,13)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,13)*OF(42) + LP(2,13)*OF(40) + LP(3,13)*OF(44) - LP(4,13)*OF(43)) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(5,11) - LP(11,11)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,11)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,11)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,11)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,11)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,11)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,11)*OF(42) + LP(2,11)*OF(40) + LP(3,11)*OF(44) - LP(4,11)*OF(43)) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(5,12) - LP(11,12)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,12)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,12)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,12)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,12)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,12)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,12)*OF(42) + LP(2,12)*OF(40) + LP(3,12)*OF(44) - LP(4,12)*OF(43));
next_P(6,10) = LP(6,10) + OQ(8) + LP(11,10)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,10)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,10)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,10)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,10)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,10)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + OF(49)*(LP(6,14) + LP(11,14)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,14)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,14)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,14)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,14)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,14)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,14)*OF(43) - LP(2,14)*OF(44) + LP(3,14)*OF(40) + LP(4,14)*OF(42)) - OF(48)*(LP(6,15) + LP(11,15)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,15)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,15)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,15)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,15)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,15)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,15)*OF(43) - LP(2,15)*OF(44) + LP(3,15)*OF(40) + LP(4,15)*OF(42)) + OF(41)*(LP(6,16) + LP(11,16)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,16)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,16)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,16)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,16)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,16)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,16)*OF(43) - LP(2,16)*OF(44) + LP(3,16)*OF(40) + LP(4,16)*OF(42)) + dt*(LP(6,7) + LP(11,7)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,7)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,7)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,7)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,7)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,7)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,7)*OF(43) - LP(2,7)*OF(44) + LP(3,7)*OF(40) + LP(4,7)*OF(42)) + LP(1,10)*OF(43) - LP(2,10)*OF(44) + LP(3,10)*OF(40) + LP(4,10)*OF(42) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(6,13) + LP(11,13)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,13)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,13)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,13)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,13)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,13)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,13)*OF(43) - LP(2,13)*OF(44) + LP(3,13)*OF(40) + LP(4,13)*OF(42)) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(6,11) + LP(11,11)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,11)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,11)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,11)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,11)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,11)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,11)*OF(43) - LP(2,11)*OF(44) + LP(3,11)*OF(40) + LP(4,11)*OF(42)) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(6,12) + LP(11,12)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,12)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,12)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,12)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,12)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,12)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,12)*OF(43) - LP(2,12)*OF(44) + LP(3,12)*OF(40) + LP(4,12)*OF(42));
next_P(7,10) = LP(7,10) + OQ(11) + LP(11,10)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,10)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,10)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,10)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,10)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,10)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + OF(49)*(LP(7,14) + LP(11,14)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,14)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,14)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,14)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,14)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,14)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,14)*OF(44) + LP(2,14)*OF(43) - LP(3,14)*OF(42) + LP(4,14)*OF(40)) - OF(48)*(LP(7,15) + LP(11,15)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,15)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,15)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,15)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,15)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,15)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,15)*OF(44) + LP(2,15)*OF(43) - LP(3,15)*OF(42) + LP(4,15)*OF(40)) + OF(41)*(LP(7,16) + LP(11,16)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,16)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,16)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,16)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,16)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,16)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,16)*OF(44) + LP(2,16)*OF(43) - LP(3,16)*OF(42) + LP(4,16)*OF(40)) + dt*(LP(7,7) + LP(11,7)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,7)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,7)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,7)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,7)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,7)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,7)*OF(44) + LP(2,7)*OF(43) - LP(3,7)*OF(42) + LP(4,7)*OF(40)) + LP(1,10)*OF(44) + LP(2,10)*OF(43) - LP(3,10)*OF(42) + LP(4,10)*OF(40) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(7,13) + LP(11,13)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,13)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,13)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,13)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,13)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,13)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,13)*OF(44) + LP(2,13)*OF(43) - LP(3,13)*OF(42) + LP(4,13)*OF(40)) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(7,11) + LP(11,11)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,11)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,11)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,11)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,11)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,11)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,11)*OF(44) + LP(2,11)*OF(43) - LP(3,11)*OF(42) + LP(4,11)*OF(40)) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(7,12) + LP(11,12)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,12)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,12)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,12)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,12)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,12)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,12)*OF(44) + LP(2,12)*OF(43) - LP(3,12)*OF(42) + LP(4,12)*OF(40));
next_P(8,10) = LP(8,10) + OQ(13) + LP(5,10)*dt + OF(49)*(LP(8,14) + LP(5,14)*dt + LP(14,14)*OF(41) + LP(15,14)*OF(50) - LP(16,14)*OF(49) - LP(12,14)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,14)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,14)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) - OF(48)*(LP(8,15) + LP(5,15)*dt + LP(14,15)*OF(41) + LP(15,15)*OF(50) - LP(16,15)*OF(49) - LP(12,15)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,15)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,15)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + OF(41)*(LP(8,16) + LP(5,16)*dt + LP(14,16)*OF(41) + LP(15,16)*OF(50) - LP(16,16)*OF(49) - LP(12,16)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,16)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,16)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + dt*(LP(8,7) + LP(5,7)*dt + LP(14,7)*OF(41) + LP(15,7)*OF(50) - LP(16,7)*OF(49) - LP(12,7)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,7)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,7)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + LP(14,10)*OF(41) + LP(15,10)*OF(50) - LP(16,10)*OF(49) - LP(12,10)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,10)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(8,11) + LP(5,11)*dt + LP(14,11)*OF(41) + LP(15,11)*OF(50) - LP(16,11)*OF(49) - LP(12,11)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,11)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,11)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(8,12) + LP(5,12)*dt + LP(14,12)*OF(41) + LP(15,12)*OF(50) - LP(16,12)*OF(49) - LP(12,12)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,12)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,12)*dt*(OF(46) + OF(47) + OF(55) + OF(56))) + LP(11,10)*dt*(OF(46) + OF(47) + OF(55) + OF(56)) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(8,13) + LP(5,13)*dt + LP(14,13)*OF(41) + LP(15,13)*OF(50) - LP(16,13)*OF(49) - LP(12,13)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,13)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,13)*dt*(OF(46) + OF(47) + OF(55) + OF(56)));
next_P(9,10) = LP(9,10) + OQ(15) + LP(6,10)*dt + OF(49)*(LP(9,14) + LP(6,14)*dt - LP(14,14)*OF(50) + LP(15,14)*OF(41) + LP(16,14)*OF(48) + LP(11,14)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,14)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,14)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) - OF(48)*(LP(9,15) + LP(6,15)*dt - LP(14,15)*OF(50) + LP(15,15)*OF(41) + LP(16,15)*OF(48) + LP(11,15)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,15)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,15)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + OF(41)*(LP(9,16) + LP(6,16)*dt - LP(14,16)*OF(50) + LP(15,16)*OF(41) + LP(16,16)*OF(48) + LP(11,16)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,16)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,16)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + dt*(LP(9,7) + LP(6,7)*dt - LP(14,7)*OF(50) + LP(15,7)*OF(41) + LP(16,7)*OF(48) + LP(11,7)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,7)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,7)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) - LP(14,10)*OF(50) + LP(15,10)*OF(41) + LP(16,10)*OF(48) + LP(11,10)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,10)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(9,11) + LP(6,11)*dt - LP(14,11)*OF(50) + LP(15,11)*OF(41) + LP(16,11)*OF(48) + LP(11,11)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,11)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,11)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(9,12) + LP(6,12)*dt - LP(14,12)*OF(50) + LP(15,12)*OF(41) + LP(16,12)*OF(48) + LP(11,12)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,12)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,12)*dt*(OF(46) + OF(54) + OF(56) + OF(57))) + LP(12,10)*dt*(OF(46) + OF(54) + OF(56) + OF(57)) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(9,13) + LP(6,13)*dt - LP(14,13)*OF(50) + LP(15,13)*OF(41) + LP(16,13)*OF(48) + LP(11,13)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,13)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,13)*dt*(OF(46) + OF(54) + OF(56) + OF(57)));
next_P(10,10) = LP(10,10) + OQ(47)*acc_cov_z + OQ(47)*acc_bias_cov_z + LP(7,10)*dt + OF(49)*(LP(10,14) + LP(7,14)*dt + LP(14,14)*OF(49) - LP(15,14)*OF(48) + LP(16,14)*OF(41) - LP(11,14)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,14)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,14)*dt*(OF(47) + OF(54) + OF(55) + OF(57))) - OF(48)*(LP(10,15) + LP(7,15)*dt + LP(14,15)*OF(49) - LP(15,15)*OF(48) + LP(16,15)*OF(41) - LP(11,15)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,15)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,15)*dt*(OF(47) + OF(54) + OF(55) + OF(57))) + OF(41)*(LP(10,16) + LP(7,16)*dt + LP(14,16)*OF(49) - LP(15,16)*OF(48) + LP(16,16)*OF(41) - LP(11,16)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,16)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,16)*dt*(OF(47) + OF(54) + OF(55) + OF(57))) + dt*(LP(10,7) + LP(7,7)*dt + LP(14,7)*OF(49) - LP(15,7)*OF(48) + LP(16,7)*OF(41) - LP(11,7)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,7)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,7)*dt*(OF(47) + OF(54) + OF(55) + OF(57))) + OG(46)^2*acc_cov_x + OG(83)^2*acc_cov_y + OG(34)^2*omega_cov_x + OG(33)^2*omega_cov_z + OG(38)^2*omega_cov_y + LP(14,10)*OF(49) - LP(15,10)*OF(48) + LP(16,10)*OF(41) + OG(33)*OQ(74) + OG(34)*OQ(75) + OG(38)*OQ(71) + OG(46)*OQ(92) + OG(83)*OQ(78) - LP(11,10)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,10)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) - dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288)*(LP(10,11) + LP(7,11)*dt + LP(14,11)*OF(49) - LP(15,11)*OF(48) + LP(16,11)*OF(41) - LP(11,11)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,11)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,11)*dt*(OF(47) + OF(54) + OF(55) + OF(57))) + dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288)*(LP(10,12) + LP(7,12)*dt + LP(14,12)*OF(49) - LP(15,12)*OF(48) + LP(16,12)*OF(41) - LP(11,12)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,12)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,12)*dt*(OF(47) + OF(54) + OF(55) + OF(57))) + LP(13,10)*dt*(OF(47) + OF(54) + OF(55) + OF(57)) + dt*(OF(47) + OF(54) + OF(55) + OF(57))*(LP(10,13) + LP(7,13)*dt + LP(14,13)*OF(49) - LP(15,13)*OF(48) + LP(16,13)*OF(41) - LP(11,13)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,13)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,13)*dt*(OF(47) + OF(54) + OF(55) + OF(57)));
next_P(1,11) = LP(1,11) + OQ(51) + LP(11,11)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,11)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,11)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,11)*OF(67) + LP(3,11)*OF(35) + LP(4,11)*OF(69);
next_P(2,11) = LP(2,11) + OQ(54) - LP(13,11)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,11)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,11)*(OF(45) + OF(71) + OF(72)) + LP(1,11)*OF(36) + LP(3,11)*OF(34) + LP(4,11)*OF(35);
next_P(3,11) = LP(3,11) + OQ(68) - LP(11,11)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,11)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,11)*(OF(45) + OF(70) + OF(72)) + LP(1,11)*OF(68) + LP(2,11)*OF(69) + LP(4,11)*OF(36);
next_P(4,11) = LP(4,11) + OQ(49) - LP(12,11)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,11)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,11)*(OF(45) + OF(70) + OF(71)) + LP(1,11)*OF(34) + LP(2,11)*OF(68) + LP(3,11)*OF(67);
next_P(5,11) = LP(5,11) + OQ(63) - LP(11,11)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,11)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,11)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,11)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,11)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,11)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,11)*OF(42) + LP(2,11)*OF(40) + LP(3,11)*OF(44) - LP(4,11)*OF(43);
next_P(6,11) = LP(6,11) + OQ(57) + LP(11,11)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,11)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,11)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,11)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,11)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,11)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,11)*OF(43) - LP(2,11)*OF(44) + LP(3,11)*OF(40) + LP(4,11)*OF(42);
next_P(7,11) = LP(7,11) + OQ(60) + LP(11,11)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,11)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,11)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,11)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,11)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,11)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,11)*OF(44) + LP(2,11)*OF(43) - LP(3,11)*OF(42) + LP(4,11)*OF(40);
next_P(8,11) = LP(8,11) + OQ(77) + LP(5,11)*dt + LP(14,11)*OF(41) + LP(15,11)*OF(50) - LP(16,11)*OF(49) - LP(12,11)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,11)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,11)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,11) = LP(9,11) + OQ(70) + LP(6,11)*dt - LP(14,11)*OF(50) + LP(15,11)*OF(41) + LP(16,11)*OF(48) + LP(11,11)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,11)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,11)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,11) = LP(10,11) + OQ(75) + LP(7,11)*dt + LP(14,11)*OF(49) - LP(15,11)*OF(48) + LP(16,11)*OF(41) - LP(11,11)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,11)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,11)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,11) = LP(11,11) + omega_bias_cov_x;
next_P(1,12) = LP(1,12) + OQ(53) + LP(11,12)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,12)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,12)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,12)*OF(67) + LP(3,12)*OF(35) + LP(4,12)*OF(69);
next_P(2,12) = LP(2,12) + OQ(48) - LP(13,12)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,12)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,12)*(OF(45) + OF(71) + OF(72)) + LP(1,12)*OF(36) + LP(3,12)*OF(34) + LP(4,12)*OF(35);
next_P(3,12) = LP(3,12) + OQ(55) - LP(11,12)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,12)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,12)*(OF(45) + OF(70) + OF(72)) + LP(1,12)*OF(68) + LP(2,12)*OF(69) + LP(4,12)*OF(36);
next_P(4,12) = LP(4,12) + OQ(66) - LP(12,12)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,12)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,12)*(OF(45) + OF(70) + OF(71)) + LP(1,12)*OF(34) + LP(2,12)*OF(68) + LP(3,12)*OF(67);
next_P(5,12) = LP(5,12) + OQ(58) - LP(11,12)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,12)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,12)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,12)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,12)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,12)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,12)*OF(42) + LP(2,12)*OF(40) + LP(3,12)*OF(44) - LP(4,12)*OF(43);
next_P(6,12) = LP(6,12) + OQ(64) + LP(11,12)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,12)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,12)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,12)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,12)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,12)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,12)*OF(43) - LP(2,12)*OF(44) + LP(3,12)*OF(40) + LP(4,12)*OF(42);
next_P(7,12) = LP(7,12) + OQ(61) + LP(11,12)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,12)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,12)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,12)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,12)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,12)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,12)*OF(44) + LP(2,12)*OF(43) - LP(3,12)*OF(42) + LP(4,12)*OF(40);
next_P(8,12) = LP(8,12) + OQ(72) + LP(5,12)*dt + LP(14,12)*OF(41) + LP(15,12)*OF(50) - LP(16,12)*OF(49) - LP(12,12)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,12)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,12)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,12) = LP(9,12) + OQ(76) + LP(6,12)*dt - LP(14,12)*OF(50) + LP(15,12)*OF(41) + LP(16,12)*OF(48) + LP(11,12)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,12)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,12)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,12) = LP(10,12) + OQ(71) + LP(7,12)*dt + LP(14,12)*OF(49) - LP(15,12)*OF(48) + LP(16,12)*OF(41) - LP(11,12)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,12)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,12)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,12) = LP(11,12);
next_P(12,12) = LP(12,12) + omega_bias_cov_y;
next_P(1,13) = LP(1,13) + OQ(52) + LP(11,13)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,13)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,13)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,13)*OF(67) + LP(3,13)*OF(35) + LP(4,13)*OF(69);
next_P(2,13) = LP(2,13) + OQ(67) - LP(13,13)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,13)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,13)*(OF(45) + OF(71) + OF(72)) + LP(1,13)*OF(36) + LP(3,13)*OF(34) + LP(4,13)*OF(35);
next_P(3,13) = LP(3,13) + OQ(50) - LP(11,13)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,13)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,13)*(OF(45) + OF(70) + OF(72)) + LP(1,13)*OF(68) + LP(2,13)*OF(69) + LP(4,13)*OF(36);
next_P(4,13) = LP(4,13) + OQ(56) - LP(12,13)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,13)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,13)*(OF(45) + OF(70) + OF(71)) + LP(1,13)*OF(34) + LP(2,13)*OF(68) + LP(3,13)*OF(67);
next_P(5,13) = LP(5,13) + OQ(59) - LP(11,13)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,13)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,13)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,13)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,13)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,13)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,13)*OF(42) + LP(2,13)*OF(40) + LP(3,13)*OF(44) - LP(4,13)*OF(43);
next_P(6,13) = LP(6,13) + OQ(62) + LP(11,13)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,13)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,13)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,13)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,13)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,13)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,13)*OF(43) - LP(2,13)*OF(44) + LP(3,13)*OF(40) + LP(4,13)*OF(42);
next_P(7,13) = LP(7,13) + OQ(65) + LP(11,13)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,13)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,13)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,13)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,13)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,13)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,13)*OF(44) + LP(2,13)*OF(43) - LP(3,13)*OF(42) + LP(4,13)*OF(40);
next_P(8,13) = LP(8,13) + OQ(69) + LP(5,13)*dt + LP(14,13)*OF(41) + LP(15,13)*OF(50) - LP(16,13)*OF(49) - LP(12,13)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,13)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,13)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,13) = LP(9,13) + OQ(73) + LP(6,13)*dt - LP(14,13)*OF(50) + LP(15,13)*OF(41) + LP(16,13)*OF(48) + LP(11,13)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,13)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,13)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,13) = LP(10,13) + OQ(74) + LP(7,13)*dt + LP(14,13)*OF(49) - LP(15,13)*OF(48) + LP(16,13)*OF(41) - LP(11,13)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,13)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,13)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,13) = LP(11,13);
next_P(12,13) = LP(12,13);
next_P(13,13) = LP(13,13) + omega_bias_cov_z;
next_P(1,14) = LP(1,14) + LP(11,14)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,14)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,14)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,14)*OF(67) + LP(3,14)*OF(35) + LP(4,14)*OF(69);
next_P(2,14) = LP(2,14) - LP(13,14)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,14)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,14)*(OF(45) + OF(71) + OF(72)) + LP(1,14)*OF(36) + LP(3,14)*OF(34) + LP(4,14)*OF(35);
next_P(3,14) = LP(3,14) - LP(11,14)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,14)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,14)*(OF(45) + OF(70) + OF(72)) + LP(1,14)*OF(68) + LP(2,14)*OF(69) + LP(4,14)*OF(36);
next_P(4,14) = LP(4,14) - LP(12,14)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,14)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,14)*(OF(45) + OF(70) + OF(71)) + LP(1,14)*OF(34) + LP(2,14)*OF(68) + LP(3,14)*OF(67);
next_P(5,14) = LP(5,14) + OQ(81) - LP(11,14)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,14)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,14)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,14)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,14)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,14)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,14)*OF(42) + LP(2,14)*OF(40) + LP(3,14)*OF(44) - LP(4,14)*OF(43);
next_P(6,14) = LP(6,14) + OQ(88) + LP(11,14)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,14)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,14)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,14)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,14)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,14)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,14)*OF(43) - LP(2,14)*OF(44) + LP(3,14)*OF(40) + LP(4,14)*OF(42);
next_P(7,14) = LP(7,14) + OQ(85) + LP(11,14)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,14)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,14)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,14)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,14)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,14)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,14)*OF(44) + LP(2,14)*OF(43) - LP(3,14)*OF(42) + LP(4,14)*OF(40);
next_P(8,14) = LP(8,14) + OQ(95) + LP(5,14)*dt + LP(14,14)*OF(41) + LP(15,14)*OF(50) - LP(16,14)*OF(49) - LP(12,14)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,14)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,14)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,14) = LP(9,14) + OQ(80) + LP(6,14)*dt - LP(14,14)*OF(50) + LP(15,14)*OF(41) + LP(16,14)*OF(48) + LP(11,14)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,14)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,14)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,14) = LP(10,14) + OQ(92) + LP(7,14)*dt + LP(14,14)*OF(49) - LP(15,14)*OF(48) + LP(16,14)*OF(41) - LP(11,14)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,14)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,14)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,14) = LP(11,14);
next_P(12,14) = LP(12,14);
next_P(13,14) = LP(13,14);
next_P(14,14) = LP(14,14) + acc_bias_cov_x;
next_P(1,15) = LP(1,15) + LP(11,15)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,15)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,15)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,15)*OF(67) + LP(3,15)*OF(35) + LP(4,15)*OF(69);
next_P(2,15) = LP(2,15) - LP(13,15)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,15)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,15)*(OF(45) + OF(71) + OF(72)) + LP(1,15)*OF(36) + LP(3,15)*OF(34) + LP(4,15)*OF(35);
next_P(3,15) = LP(3,15) - LP(11,15)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,15)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,15)*(OF(45) + OF(70) + OF(72)) + LP(1,15)*OF(68) + LP(2,15)*OF(69) + LP(4,15)*OF(36);
next_P(4,15) = LP(4,15) - LP(12,15)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,15)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,15)*(OF(45) + OF(70) + OF(71)) + LP(1,15)*OF(34) + LP(2,15)*OF(68) + LP(3,15)*OF(67);
next_P(5,15) = LP(5,15) + OQ(82) - LP(11,15)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,15)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,15)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,15)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,15)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,15)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,15)*OF(42) + LP(2,15)*OF(40) + LP(3,15)*OF(44) - LP(4,15)*OF(43);
next_P(6,15) = LP(6,15) + OQ(83) + LP(11,15)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,15)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,15)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,15)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,15)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,15)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,15)*OF(43) - LP(2,15)*OF(44) + LP(3,15)*OF(40) + LP(4,15)*OF(42);
next_P(7,15) = LP(7,15) + OQ(89) + LP(11,15)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,15)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,15)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,15)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,15)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,15)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,15)*OF(44) + LP(2,15)*OF(43) - LP(3,15)*OF(42) + LP(4,15)*OF(40);
next_P(8,15) = LP(8,15) + OQ(90) + LP(5,15)*dt + LP(14,15)*OF(41) + LP(15,15)*OF(50) - LP(16,15)*OF(49) - LP(12,15)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,15)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,15)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,15) = LP(9,15) + OQ(94) + LP(6,15)*dt - LP(14,15)*OF(50) + LP(15,15)*OF(41) + LP(16,15)*OF(48) + LP(11,15)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,15)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,15)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,15) = LP(10,15) + OQ(78) + LP(7,15)*dt + LP(14,15)*OF(49) - LP(15,15)*OF(48) + LP(16,15)*OF(41) - LP(11,15)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,15)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,15)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,15) = LP(11,15);
next_P(12,15) = LP(12,15);
next_P(13,15) = LP(13,15);
next_P(14,15) = LP(14,15);
next_P(15,15) = LP(15,15) + acc_bias_cov_y;
next_P(1,16) = LP(1,16) + LP(11,16)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,16)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,16)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,16)*OF(67) + LP(3,16)*OF(35) + LP(4,16)*OF(69);
next_P(2,16) = LP(2,16) - LP(13,16)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,16)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,16)*(OF(45) + OF(71) + OF(72)) + LP(1,16)*OF(36) + LP(3,16)*OF(34) + LP(4,16)*OF(35);
next_P(3,16) = LP(3,16) - LP(11,16)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,16)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,16)*(OF(45) + OF(70) + OF(72)) + LP(1,16)*OF(68) + LP(2,16)*OF(69) + LP(4,16)*OF(36);
next_P(4,16) = LP(4,16) - LP(12,16)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,16)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,16)*(OF(45) + OF(70) + OF(71)) + LP(1,16)*OF(34) + LP(2,16)*OF(68) + LP(3,16)*OF(67);
next_P(5,16) = LP(5,16) + OQ(87) - LP(11,16)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,16)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,16)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,16)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,16)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,16)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,16)*OF(42) + LP(2,16)*OF(40) + LP(3,16)*OF(44) - LP(4,16)*OF(43);
next_P(6,16) = LP(6,16) + OQ(84) + LP(11,16)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,16)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,16)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,16)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,16)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,16)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,16)*OF(43) - LP(2,16)*OF(44) + LP(3,16)*OF(40) + LP(4,16)*OF(42);
next_P(7,16) = LP(7,16) + OQ(86) + LP(11,16)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,16)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,16)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,16)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,16)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,16)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,16)*OF(44) + LP(2,16)*OF(43) - LP(3,16)*OF(42) + LP(4,16)*OF(40);
next_P(8,16) = LP(8,16) + OQ(79) + LP(5,16)*dt + LP(14,16)*OF(41) + LP(15,16)*OF(50) - LP(16,16)*OF(49) - LP(12,16)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,16)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,16)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,16) = LP(9,16) + OQ(91) + LP(6,16)*dt - LP(14,16)*OF(50) + LP(15,16)*OF(41) + LP(16,16)*OF(48) + LP(11,16)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,16)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,16)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,16) = LP(10,16) + OQ(93) + LP(7,16)*dt + LP(14,16)*OF(49) - LP(15,16)*OF(48) + LP(16,16)*OF(41) - LP(11,16)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,16)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,16)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,16) = LP(11,16);
next_P(12,16) = LP(12,16);
next_P(13,16) = LP(13,16);
next_P(14,16) = LP(14,16);
next_P(15,16) = LP(15,16);
next_P(16,16) = LP(16,16) + acc_bias_cov_z;
next_P(1,17) = LP(1,17) + LP(11,17)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,17)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,17)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,17)*OF(67) + LP(3,17)*OF(35) + LP(4,17)*OF(69);
next_P(2,17) = LP(2,17) - LP(13,17)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,17)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,17)*(OF(45) + OF(71) + OF(72)) + LP(1,17)*OF(36) + LP(3,17)*OF(34) + LP(4,17)*OF(35);
next_P(3,17) = LP(3,17) - LP(11,17)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,17)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,17)*(OF(45) + OF(70) + OF(72)) + LP(1,17)*OF(68) + LP(2,17)*OF(69) + LP(4,17)*OF(36);
next_P(4,17) = LP(4,17) - LP(12,17)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,17)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,17)*(OF(45) + OF(70) + OF(71)) + LP(1,17)*OF(34) + LP(2,17)*OF(68) + LP(3,17)*OF(67);
next_P(5,17) = LP(5,17) - LP(11,17)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,17)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,17)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,17)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,17)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,17)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,17)*OF(42) + LP(2,17)*OF(40) + LP(3,17)*OF(44) - LP(4,17)*OF(43);
next_P(6,17) = LP(6,17) + LP(11,17)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,17)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,17)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,17)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,17)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,17)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,17)*OF(43) - LP(2,17)*OF(44) + LP(3,17)*OF(40) + LP(4,17)*OF(42);
next_P(7,17) = LP(7,17) + LP(11,17)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,17)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,17)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,17)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,17)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,17)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,17)*OF(44) + LP(2,17)*OF(43) - LP(3,17)*OF(42) + LP(4,17)*OF(40);
next_P(8,17) = LP(8,17) + LP(5,17)*dt + LP(14,17)*OF(41) + LP(15,17)*OF(50) - LP(16,17)*OF(49) - LP(12,17)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,17)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,17)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,17) = LP(9,17) + LP(6,17)*dt - LP(14,17)*OF(50) + LP(15,17)*OF(41) + LP(16,17)*OF(48) + LP(11,17)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,17)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,17)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,17) = LP(10,17) + LP(7,17)*dt + LP(14,17)*OF(49) - LP(15,17)*OF(48) + LP(16,17)*OF(41) - LP(11,17)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,17)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,17)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,17) = LP(11,17);
next_P(12,17) = LP(12,17);
next_P(13,17) = LP(13,17);
next_P(14,17) = LP(14,17);
next_P(15,17) = LP(15,17);
next_P(16,17) = LP(16,17);
next_P(17,17) = LP(17,17) + OQ(46)*mag_noise_cov_n;
next_P(1,18) = LP(1,18) + LP(11,18)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,18)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,18)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,18)*OF(67) + LP(3,18)*OF(35) + LP(4,18)*OF(69);
next_P(2,18) = LP(2,18) - LP(13,18)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,18)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,18)*(OF(45) + OF(71) + OF(72)) + LP(1,18)*OF(36) + LP(3,18)*OF(34) + LP(4,18)*OF(35);
next_P(3,18) = LP(3,18) - LP(11,18)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,18)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,18)*(OF(45) + OF(70) + OF(72)) + LP(1,18)*OF(68) + LP(2,18)*OF(69) + LP(4,18)*OF(36);
next_P(4,18) = LP(4,18) - LP(12,18)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,18)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,18)*(OF(45) + OF(70) + OF(71)) + LP(1,18)*OF(34) + LP(2,18)*OF(68) + LP(3,18)*OF(67);
next_P(5,18) = LP(5,18) - LP(11,18)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,18)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,18)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,18)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,18)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,18)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,18)*OF(42) + LP(2,18)*OF(40) + LP(3,18)*OF(44) - LP(4,18)*OF(43);
next_P(6,18) = LP(6,18) + LP(11,18)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,18)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,18)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,18)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,18)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,18)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,18)*OF(43) - LP(2,18)*OF(44) + LP(3,18)*OF(40) + LP(4,18)*OF(42);
next_P(7,18) = LP(7,18) + LP(11,18)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,18)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,18)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,18)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,18)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,18)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,18)*OF(44) + LP(2,18)*OF(43) - LP(3,18)*OF(42) + LP(4,18)*OF(40);
next_P(8,18) = LP(8,18) + LP(5,18)*dt + LP(14,18)*OF(41) + LP(15,18)*OF(50) - LP(16,18)*OF(49) - LP(12,18)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,18)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,18)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,18) = LP(9,18) + LP(6,18)*dt - LP(14,18)*OF(50) + LP(15,18)*OF(41) + LP(16,18)*OF(48) + LP(11,18)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,18)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,18)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,18) = LP(10,18) + LP(7,18)*dt + LP(14,18)*OF(49) - LP(15,18)*OF(48) + LP(16,18)*OF(41) - LP(11,18)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,18)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,18)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,18) = LP(11,18);
next_P(12,18) = LP(12,18);
next_P(13,18) = LP(13,18);
next_P(14,18) = LP(14,18);
next_P(15,18) = LP(15,18);
next_P(16,18) = LP(16,18);
next_P(17,18) = LP(17,18);
next_P(18,18) = LP(18,18) + OQ(46)*mag_noise_cov_e;
next_P(1,19) = LP(1,19) + LP(11,19)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,19)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,19)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,19)*OF(67) + LP(3,19)*OF(35) + LP(4,19)*OF(69);
next_P(2,19) = LP(2,19) - LP(13,19)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,19)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,19)*(OF(45) + OF(71) + OF(72)) + LP(1,19)*OF(36) + LP(3,19)*OF(34) + LP(4,19)*OF(35);
next_P(3,19) = LP(3,19) - LP(11,19)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,19)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,19)*(OF(45) + OF(70) + OF(72)) + LP(1,19)*OF(68) + LP(2,19)*OF(69) + LP(4,19)*OF(36);
next_P(4,19) = LP(4,19) - LP(12,19)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,19)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,19)*(OF(45) + OF(70) + OF(71)) + LP(1,19)*OF(34) + LP(2,19)*OF(68) + LP(3,19)*OF(67);
next_P(5,19) = LP(5,19) - LP(11,19)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,19)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,19)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,19)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,19)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,19)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,19)*OF(42) + LP(2,19)*OF(40) + LP(3,19)*OF(44) - LP(4,19)*OF(43);
next_P(6,19) = LP(6,19) + LP(11,19)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,19)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,19)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,19)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,19)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,19)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,19)*OF(43) - LP(2,19)*OF(44) + LP(3,19)*OF(40) + LP(4,19)*OF(42);
next_P(7,19) = LP(7,19) + LP(11,19)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,19)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,19)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,19)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,19)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,19)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,19)*OF(44) + LP(2,19)*OF(43) - LP(3,19)*OF(42) + LP(4,19)*OF(40);
next_P(8,19) = LP(8,19) + LP(5,19)*dt + LP(14,19)*OF(41) + LP(15,19)*OF(50) - LP(16,19)*OF(49) - LP(12,19)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,19)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,19)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,19) = LP(9,19) + LP(6,19)*dt - LP(14,19)*OF(50) + LP(15,19)*OF(41) + LP(16,19)*OF(48) + LP(11,19)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,19)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,19)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,19) = LP(10,19) + LP(7,19)*dt + LP(14,19)*OF(49) - LP(15,19)*OF(48) + LP(16,19)*OF(41) - LP(11,19)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,19)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,19)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,19) = LP(11,19);
next_P(12,19) = LP(12,19);
next_P(13,19) = LP(13,19);
next_P(14,19) = LP(14,19);
next_P(15,19) = LP(15,19);
next_P(16,19) = LP(16,19);
next_P(17,19) = LP(17,19);
next_P(18,19) = LP(18,19);
next_P(19,19) = LP(19,19) + OQ(46)*mag_noise_cov_d;
next_P(1,20) = LP(1,20) + LP(11,20)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,20)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,20)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,20)*OF(67) + LP(3,20)*OF(35) + LP(4,20)*OF(69);
next_P(2,20) = LP(2,20) - LP(13,20)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,20)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,20)*(OF(45) + OF(71) + OF(72)) + LP(1,20)*OF(36) + LP(3,20)*OF(34) + LP(4,20)*OF(35);
next_P(3,20) = LP(3,20) - LP(11,20)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,20)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,20)*(OF(45) + OF(70) + OF(72)) + LP(1,20)*OF(68) + LP(2,20)*OF(69) + LP(4,20)*OF(36);
next_P(4,20) = LP(4,20) - LP(12,20)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,20)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,20)*(OF(45) + OF(70) + OF(71)) + LP(1,20)*OF(34) + LP(2,20)*OF(68) + LP(3,20)*OF(67);
next_P(5,20) = LP(5,20) - LP(11,20)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,20)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,20)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,20)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,20)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,20)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,20)*OF(42) + LP(2,20)*OF(40) + LP(3,20)*OF(44) - LP(4,20)*OF(43);
next_P(6,20) = LP(6,20) + LP(11,20)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,20)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,20)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,20)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,20)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,20)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,20)*OF(43) - LP(2,20)*OF(44) + LP(3,20)*OF(40) + LP(4,20)*OF(42);
next_P(7,20) = LP(7,20) + LP(11,20)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,20)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,20)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,20)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,20)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,20)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,20)*OF(44) + LP(2,20)*OF(43) - LP(3,20)*OF(42) + LP(4,20)*OF(40);
next_P(8,20) = LP(8,20) + LP(5,20)*dt + LP(14,20)*OF(41) + LP(15,20)*OF(50) - LP(16,20)*OF(49) - LP(12,20)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,20)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,20)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,20) = LP(9,20) + LP(6,20)*dt - LP(14,20)*OF(50) + LP(15,20)*OF(41) + LP(16,20)*OF(48) + LP(11,20)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,20)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,20)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,20) = LP(10,20) + LP(7,20)*dt + LP(14,20)*OF(49) - LP(15,20)*OF(48) + LP(16,20)*OF(41) - LP(11,20)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,20)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,20)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,20) = LP(11,20);
next_P(12,20) = LP(12,20);
next_P(13,20) = LP(13,20);
next_P(14,20) = LP(14,20);
next_P(15,20) = LP(15,20);
next_P(16,20) = LP(16,20);
next_P(17,20) = LP(17,20);
next_P(18,20) = LP(18,20);
next_P(19,20) = LP(19,20);
next_P(20,20) = LP(20,20) + OQ(46)*mag_bias_noise_cov_x;
next_P(1,21) = LP(1,21) + LP(11,21)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,21)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,21)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,21)*OF(67) + LP(3,21)*OF(35) + LP(4,21)*OF(69);
next_P(2,21) = LP(2,21) - LP(13,21)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,21)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,21)*(OF(45) + OF(71) + OF(72)) + LP(1,21)*OF(36) + LP(3,21)*OF(34) + LP(4,21)*OF(35);
next_P(3,21) = LP(3,21) - LP(11,21)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,21)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,21)*(OF(45) + OF(70) + OF(72)) + LP(1,21)*OF(68) + LP(2,21)*OF(69) + LP(4,21)*OF(36);
next_P(4,21) = LP(4,21) - LP(12,21)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,21)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,21)*(OF(45) + OF(70) + OF(71)) + LP(1,21)*OF(34) + LP(2,21)*OF(68) + LP(3,21)*OF(67);
next_P(5,21) = LP(5,21) - LP(11,21)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,21)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,21)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,21)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,21)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,21)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,21)*OF(42) + LP(2,21)*OF(40) + LP(3,21)*OF(44) - LP(4,21)*OF(43);
next_P(6,21) = LP(6,21) + LP(11,21)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,21)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,21)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,21)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,21)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,21)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,21)*OF(43) - LP(2,21)*OF(44) + LP(3,21)*OF(40) + LP(4,21)*OF(42);
next_P(7,21) = LP(7,21) + LP(11,21)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,21)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,21)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,21)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,21)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,21)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,21)*OF(44) + LP(2,21)*OF(43) - LP(3,21)*OF(42) + LP(4,21)*OF(40);
next_P(8,21) = LP(8,21) + LP(5,21)*dt + LP(14,21)*OF(41) + LP(15,21)*OF(50) - LP(16,21)*OF(49) - LP(12,21)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,21)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,21)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,21) = LP(9,21) + LP(6,21)*dt - LP(14,21)*OF(50) + LP(15,21)*OF(41) + LP(16,21)*OF(48) + LP(11,21)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,21)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,21)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,21) = LP(10,21) + LP(7,21)*dt + LP(14,21)*OF(49) - LP(15,21)*OF(48) + LP(16,21)*OF(41) - LP(11,21)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,21)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,21)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,21) = LP(11,21);
next_P(12,21) = LP(12,21);
next_P(13,21) = LP(13,21);
next_P(14,21) = LP(14,21);
next_P(15,21) = LP(15,21);
next_P(16,21) = LP(16,21);
next_P(17,21) = LP(17,21);
next_P(18,21) = LP(18,21);
next_P(19,21) = LP(19,21);
next_P(20,21) = LP(20,21);
next_P(21,21) = LP(21,21) + OQ(46)*mag_bias_noise_cov_y;
next_P(1,22) = LP(1,22) + LP(11,22)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,22)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,22)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,22)*OF(67) + LP(3,22)*OF(35) + LP(4,22)*OF(69);
next_P(2,22) = LP(2,22) - LP(13,22)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,22)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,22)*(OF(45) + OF(71) + OF(72)) + LP(1,22)*OF(36) + LP(3,22)*OF(34) + LP(4,22)*OF(35);
next_P(3,22) = LP(3,22) - LP(11,22)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,22)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,22)*(OF(45) + OF(70) + OF(72)) + LP(1,22)*OF(68) + LP(2,22)*OF(69) + LP(4,22)*OF(36);
next_P(4,22) = LP(4,22) - LP(12,22)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,22)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,22)*(OF(45) + OF(70) + OF(71)) + LP(1,22)*OF(34) + LP(2,22)*OF(68) + LP(3,22)*OF(67);
next_P(5,22) = LP(5,22) - LP(11,22)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,22)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,22)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,22)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,22)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,22)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,22)*OF(42) + LP(2,22)*OF(40) + LP(3,22)*OF(44) - LP(4,22)*OF(43);
next_P(6,22) = LP(6,22) + LP(11,22)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,22)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,22)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,22)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,22)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,22)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,22)*OF(43) - LP(2,22)*OF(44) + LP(3,22)*OF(40) + LP(4,22)*OF(42);
next_P(7,22) = LP(7,22) + LP(11,22)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,22)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,22)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,22)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,22)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,22)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,22)*OF(44) + LP(2,22)*OF(43) - LP(3,22)*OF(42) + LP(4,22)*OF(40);
next_P(8,22) = LP(8,22) + LP(5,22)*dt + LP(14,22)*OF(41) + LP(15,22)*OF(50) - LP(16,22)*OF(49) - LP(12,22)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,22)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,22)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,22) = LP(9,22) + LP(6,22)*dt - LP(14,22)*OF(50) + LP(15,22)*OF(41) + LP(16,22)*OF(48) + LP(11,22)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,22)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,22)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,22) = LP(10,22) + LP(7,22)*dt + LP(14,22)*OF(49) - LP(15,22)*OF(48) + LP(16,22)*OF(41) - LP(11,22)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,22)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,22)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,22) = LP(11,22);
next_P(12,22) = LP(12,22);
next_P(13,22) = LP(13,22);
next_P(14,22) = LP(14,22);
next_P(15,22) = LP(15,22);
next_P(16,22) = LP(16,22);
next_P(17,22) = LP(17,22);
next_P(18,22) = LP(18,22);
next_P(19,22) = LP(19,22);
next_P(20,22) = LP(20,22);
next_P(21,22) = LP(21,22);
next_P(22,22) = LP(22,22) + OQ(46)*mag_bias_noise_cov_z;
next_P(1,23) = LP(1,23) + LP(11,23)*(OF(51) + OF(60) + OF(37)*q3) + LP(12,23)*(OF(52) + OF(59) + OF(39)*q4) + LP(13,23)*(OF(53) + OF(58) + OF(38)*q2) + LP(2,23)*OF(67) + LP(3,23)*OF(35) + LP(4,23)*OF(69);
next_P(2,23) = LP(2,23) - LP(13,23)*(OF(59) + (da_prev_y*dt*q1)/24 + (da_prev_x*dt*q4)/24) + LP(12,23)*(OF(53) + OF(58) + OF(37)*q1) + LP(11,23)*(OF(45) + OF(71) + OF(72)) + LP(1,23)*OF(36) + LP(3,23)*OF(34) + LP(4,23)*OF(35);
next_P(3,23) = LP(3,23) - LP(11,23)*(OF(58) + (da_prev_y*dt*q2)/24 + (da_prev_z*dt*q1)/24) + LP(13,23)*(OF(51) + OF(60) + OF(39)*q1) + LP(12,23)*(OF(45) + OF(70) + OF(72)) + LP(1,23)*OF(68) + LP(2,23)*OF(69) + LP(4,23)*OF(36);
next_P(4,23) = LP(4,23) - LP(12,23)*(OF(60) + (da_prev_x*dt*q1)/24 + (da_prev_z*dt*q3)/24) + LP(11,23)*(OF(52) + OF(59) + OF(38)*q1) + LP(13,23)*(OF(45) + OF(70) + OF(71)) + LP(1,23)*OF(34) + LP(2,23)*OF(68) + LP(3,23)*OF(67);
next_P(5,23) = LP(5,23) - LP(11,23)*(OF(10)*OF(13) + OF(22)*OF(28) + OF(20)*OF(32)) + LP(12,23)*(OF(14)*OF(28) - OF(10)*OF(24) + OF(19)*OF(32)) + LP(13,23)*(OF(10)*OF(23) - OF(15)*OF(32) + OF(21)*OF(28)) + LP(14,23)*(OF(16)*OF(28) - OF(10)*dt + OF(17)*OF(32)) + LP(15,23)*(OF(28)*dt + OF(10)*OF(16) - OF(18)*OF(32)) - LP(16,23)*(OF(32)*dt + OF(10)*OF(17) + OF(18)*OF(28)) + LP(1,23)*OF(42) + LP(2,23)*OF(40) + LP(3,23)*OF(44) - LP(4,23)*OF(43);
next_P(6,23) = LP(6,23) + LP(11,23)*(OF(11)*OF(22) - OF(13)*OF(31) + OF(20)*OF(30)) - LP(12,23)*(OF(11)*OF(14) + OF(19)*OF(30) + OF(24)*OF(31)) + LP(13,23)*(OF(15)*OF(30) - OF(11)*OF(21) + OF(23)*OF(31)) - LP(14,23)*(OF(31)*dt + OF(11)*OF(16) + OF(17)*OF(30)) + LP(15,23)*(OF(16)*OF(31) - OF(11)*dt + OF(18)*OF(30)) + LP(16,23)*(OF(30)*dt + OF(11)*OF(18) - OF(17)*OF(31)) + LP(1,23)*OF(43) - LP(2,23)*OF(44) + LP(3,23)*OF(40) + LP(4,23)*OF(42);
next_P(7,23) = LP(7,23) + LP(11,23)*(OF(13)*OF(29) - OF(12)*OF(20) + OF(22)*OF(33)) + LP(12,23)*(OF(12)*OF(19) - OF(14)*OF(33) + OF(24)*OF(29)) - LP(13,23)*(OF(12)*OF(15) + OF(23)*OF(29) + OF(21)*OF(33)) + LP(14,23)*(OF(29)*dt + OF(12)*OF(17) - OF(16)*OF(33)) - LP(15,23)*(OF(33)*dt + OF(12)*OF(18) + OF(16)*OF(29)) + LP(16,23)*(OF(17)*OF(29) - OF(12)*dt + OF(18)*OF(33)) + LP(1,23)*OF(44) + LP(2,23)*OF(43) - LP(3,23)*OF(42) + LP(4,23)*OF(40);
next_P(8,23) = LP(8,23) + LP(5,23)*dt + LP(14,23)*OF(41) + LP(15,23)*OF(50) - LP(16,23)*OF(49) - LP(12,23)*dt*(OF(61) + OF(66) - (OF(8)*da_prev_x*dt)/48 + (da_prev_x*dt*dv_prev_y)/288) + LP(13,23)*dt*(OF(62) + OF(65) + (OF(7)*da_prev_x*dt)/48 - (da_prev_x*dt*dv_prev_z)/288) + LP(11,23)*dt*(OF(46) + OF(47) + OF(55) + OF(56));
next_P(9,23) = LP(9,23) + LP(6,23)*dt - LP(14,23)*OF(50) + LP(15,23)*OF(41) + LP(16,23)*OF(48) + LP(11,23)*dt*(OF(61) + OF(66) + (OF(9)*da_prev_y*dt)/48 - (da_prev_y*dt*dv_prev_x)/288) - LP(13,23)*dt*(OF(63) + OF(64) - (OF(7)*da_prev_y*dt)/48 + (da_prev_y*dt*dv_prev_z)/288) + LP(12,23)*dt*(OF(46) + OF(54) + OF(56) + OF(57));
next_P(10,23) = LP(10,23) + LP(7,23)*dt + LP(14,23)*OF(49) - LP(15,23)*OF(48) + LP(16,23)*OF(41) - LP(11,23)*dt*(OF(62) + OF(65) - (OF(9)*da_prev_z*dt)/48 + (da_prev_z*dt*dv_prev_x)/288) + LP(12,23)*dt*(OF(63) + OF(64) + (OF(8)*da_prev_z*dt)/48 - (da_prev_z*dt*dv_prev_y)/288) + LP(13,23)*dt*(OF(47) + OF(54) + OF(55) + OF(57));
next_P(11,23) = LP(11,23);
next_P(12,23) = LP(12,23);
next_P(13,23) = LP(13,23);
next_P(14,23) = LP(14,23);
next_P(15,23) = LP(15,23);
next_P(16,23) = LP(16,23);
next_P(17,23) = LP(17,23);
next_P(18,23) = LP(18,23);
next_P(19,23) = LP(19,23);
next_P(20,23) = LP(20,23);
next_P(21,23) = LP(21,23);
next_P(22,23) = LP(22,23);
next_P(23,23) = LP(23,23) + OQ(46)*baro_bias_noise_cov;
H_VP = zeros(6,23);
H_VP(1,5) = 1;
H_VP(2,6) = 1;
H_VP(3,7) = 1;
H_VP(4,8) = 1;
H_VP(5,9) = 1;
H_VP(6,10) = 1;
OK_VP = zeros(6,1);
OK_VP(1) = 1/(LP(7,7) + rv_d);
OK_VP(2) = 1/(LP(6,6) + rv_e);
OK_VP(3) = 1/(LP(5,5) + rv_n);
OK_VP(4) = 1/(LP(10,10) + rp_d);
OK_VP(5) = 1/(LP(9,9) + rp_e);
OK_VP(6) = 1/(LP(8,8) + rp_n);
K_gain = zeros(23,6);
K_gain(1,1) = LP(1,5)*OK_VP(3);
K_gain(1,2) = LP(1,6)*OK_VP(2);
K_gain(1,3) = LP(1,7)*OK_VP(1);
K_gain(1,4) = LP(1,8)*OK_VP(6);
K_gain(1,5) = LP(1,9)*OK_VP(5);
K_gain(1,6) = LP(1,10)*OK_VP(4);
K_gain(2,1) = LP(2,5)*OK_VP(3);
K_gain(2,2) = LP(2,6)*OK_VP(2);
K_gain(2,3) = LP(2,7)*OK_VP(1);
K_gain(2,4) = LP(2,8)*OK_VP(6);
K_gain(2,5) = LP(2,9)*OK_VP(5);
K_gain(2,6) = LP(2,10)*OK_VP(4);
K_gain(3,1) = LP(3,5)*OK_VP(3);
K_gain(3,2) = LP(3,6)*OK_VP(2);
K_gain(3,3) = LP(3,7)*OK_VP(1);
K_gain(3,4) = LP(3,8)*OK_VP(6);
K_gain(3,5) = LP(3,9)*OK_VP(5);
K_gain(3,6) = LP(3,10)*OK_VP(4);
K_gain(4,1) = LP(4,5)*OK_VP(3);
K_gain(4,2) = LP(4,6)*OK_VP(2);
K_gain(4,3) = LP(4,7)*OK_VP(1);
K_gain(4,4) = LP(4,8)*OK_VP(6);
K_gain(4,5) = LP(4,9)*OK_VP(5);
K_gain(4,6) = LP(4,10)*OK_VP(4);
K_gain(5,1) = LP(5,5)*OK_VP(3);
K_gain(5,2) = LP(5,6)*OK_VP(2);
K_gain(5,3) = LP(5,7)*OK_VP(1);
K_gain(5,4) = LP(5,8)*OK_VP(6);
K_gain(5,5) = LP(5,9)*OK_VP(5);
K_gain(5,6) = LP(5,10)*OK_VP(4);
K_gain(6,1) = LP(6,5)*OK_VP(3);
K_gain(6,2) = LP(6,6)*OK_VP(2);
K_gain(6,3) = LP(6,7)*OK_VP(1);
K_gain(6,4) = LP(6,8)*OK_VP(6);
K_gain(6,5) = LP(6,9)*OK_VP(5);
K_gain(6,6) = LP(6,10)*OK_VP(4);
K_gain(7,1) = LP(7,5)*OK_VP(3);
K_gain(7,2) = LP(7,6)*OK_VP(2);
K_gain(7,3) = LP(7,7)*OK_VP(1);
K_gain(7,4) = LP(7,8)*OK_VP(6);
K_gain(7,5) = LP(7,9)*OK_VP(5);
K_gain(7,6) = LP(7,10)*OK_VP(4);
K_gain(8,1) = LP(8,5)*OK_VP(3);
K_gain(8,2) = LP(8,6)*OK_VP(2);
K_gain(8,3) = LP(8,7)*OK_VP(1);
K_gain(8,4) = LP(8,8)*OK_VP(6);
K_gain(8,5) = LP(8,9)*OK_VP(5);
K_gain(8,6) = LP(8,10)*OK_VP(4);
K_gain(9,1) = LP(9,5)*OK_VP(3);
K_gain(9,2) = LP(9,6)*OK_VP(2);
K_gain(9,3) = LP(9,7)*OK_VP(1);
K_gain(9,4) = LP(9,8)*OK_VP(6);
K_gain(9,5) = LP(9,9)*OK_VP(5);
K_gain(9,6) = LP(9,10)*OK_VP(4);
K_gain(10,1) = LP(10,5)*OK_VP(3);
K_gain(10,2) = LP(10,6)*OK_VP(2);
K_gain(10,3) = LP(10,7)*OK_VP(1);
K_gain(10,4) = LP(10,8)*OK_VP(6);
K_gain(10,5) = LP(10,9)*OK_VP(5);
K_gain(10,6) = LP(10,10)*OK_VP(4);
K_gain(11,1) = LP(11,5)*OK_VP(3);
K_gain(11,2) = LP(11,6)*OK_VP(2);
K_gain(11,3) = LP(11,7)*OK_VP(1);
K_gain(11,4) = LP(11,8)*OK_VP(6);
K_gain(11,5) = LP(11,9)*OK_VP(5);
K_gain(11,6) = LP(11,10)*OK_VP(4);
K_gain(12,1) = LP(12,5)*OK_VP(3);
K_gain(12,2) = LP(12,6)*OK_VP(2);
K_gain(12,3) = LP(12,7)*OK_VP(1);
K_gain(12,4) = LP(12,8)*OK_VP(6);
K_gain(12,5) = LP(12,9)*OK_VP(5);
K_gain(12,6) = LP(12,10)*OK_VP(4);
K_gain(13,1) = LP(13,5)*OK_VP(3);
K_gain(13,2) = LP(13,6)*OK_VP(2);
K_gain(13,3) = LP(13,7)*OK_VP(1);
K_gain(13,4) = LP(13,8)*OK_VP(6);
K_gain(13,5) = LP(13,9)*OK_VP(5);
K_gain(13,6) = LP(13,10)*OK_VP(4);
K_gain(14,1) = LP(14,5)*OK_VP(3);
K_gain(14,2) = LP(14,6)*OK_VP(2);
K_gain(14,3) = LP(14,7)*OK_VP(1);
K_gain(14,4) = LP(14,8)*OK_VP(6);
K_gain(14,5) = LP(14,9)*OK_VP(5);
K_gain(14,6) = LP(14,10)*OK_VP(4);
K_gain(15,1) = LP(15,5)*OK_VP(3);
K_gain(15,2) = LP(15,6)*OK_VP(2);
K_gain(15,3) = LP(15,7)*OK_VP(1);
K_gain(15,4) = LP(15,8)*OK_VP(6);
K_gain(15,5) = LP(15,9)*OK_VP(5);
K_gain(15,6) = LP(15,10)*OK_VP(4);
K_gain(16,1) = LP(16,5)*OK_VP(3);
K_gain(16,2) = LP(16,6)*OK_VP(2);
K_gain(16,3) = LP(16,7)*OK_VP(1);
K_gain(16,4) = LP(16,8)*OK_VP(6);
K_gain(16,5) = LP(16,9)*OK_VP(5);
K_gain(16,6) = LP(16,10)*OK_VP(4);
K_gain(17,1) = LP(17,5)*OK_VP(3);
K_gain(17,2) = LP(17,6)*OK_VP(2);
K_gain(17,3) = LP(17,7)*OK_VP(1);
K_gain(17,4) = LP(17,8)*OK_VP(6);
K_gain(17,5) = LP(17,9)*OK_VP(5);
K_gain(17,6) = LP(17,10)*OK_VP(4);
K_gain(18,1) = LP(18,5)*OK_VP(3);
K_gain(18,2) = LP(18,6)*OK_VP(2);
K_gain(18,3) = LP(18,7)*OK_VP(1);
K_gain(18,4) = LP(18,8)*OK_VP(6);
K_gain(18,5) = LP(18,9)*OK_VP(5);
K_gain(18,6) = LP(18,10)*OK_VP(4);
K_gain(19,1) = LP(19,5)*OK_VP(3);
K_gain(19,2) = LP(19,6)*OK_VP(2);
K_gain(19,3) = LP(19,7)*OK_VP(1);
K_gain(19,4) = LP(19,8)*OK_VP(6);
K_gain(19,5) = LP(19,9)*OK_VP(5);
K_gain(19,6) = LP(19,10)*OK_VP(4);
K_gain(20,1) = LP(20,5)*OK_VP(3);
K_gain(20,2) = LP(20,6)*OK_VP(2);
K_gain(20,3) = LP(20,7)*OK_VP(1);
K_gain(20,4) = LP(20,8)*OK_VP(6);
K_gain(20,5) = LP(20,9)*OK_VP(5);
K_gain(20,6) = LP(20,10)*OK_VP(4);
K_gain(21,1) = LP(21,5)*OK_VP(3);
K_gain(21,2) = LP(21,6)*OK_VP(2);
K_gain(21,3) = LP(21,7)*OK_VP(1);
K_gain(21,4) = LP(21,8)*OK_VP(6);
K_gain(21,5) = LP(21,9)*OK_VP(5);
K_gain(21,6) = LP(21,10)*OK_VP(4);
K_gain(22,1) = LP(22,5)*OK_VP(3);
K_gain(22,2) = LP(22,6)*OK_VP(2);
K_gain(22,3) = LP(22,7)*OK_VP(1);
K_gain(22,4) = LP(22,8)*OK_VP(6);
K_gain(22,5) = LP(22,9)*OK_VP(5);
K_gain(22,6) = LP(22,10)*OK_VP(4);
K_gain(23,1) = LP(23,5)*OK_VP(3);
K_gain(23,2) = LP(23,6)*OK_VP(2);
K_gain(23,3) = LP(23,7)*OK_VP(1);
K_gain(23,4) = LP(23,8)*OK_VP(6);
K_gain(23,5) = LP(23,9)*OK_VP(5);
K_gain(23,6) = LP(23,10)*OK_VP(4);
OH_MAG = zeros(14,1);
OH_MAG(1) = 2*mag_d*q4 + 2*mag_e*q3 + 2*mag_n*q2;
OH_MAG(2) = 2*mag_e*q4 - 2*mag_d*q3 + 2*mag_n*q1;
OH_MAG(3) = 2*mag_d*q2 + 2*mag_e*q1 - 2*mag_n*q4;
OH_MAG(4) = 2*mag_d*q1 - 2*mag_e*q2 + 2*mag_n*q3;
OH_MAG(5) = -q4^2;
OH_MAG(6) = -q3^2;
OH_MAG(7) = -q2^2;
OH_MAG(8) = q1^2;
OH_MAG(9) = 2*q3*q4;
OH_MAG(10) = 2*q2*q4;
OH_MAG(11) = 2*q2*q3;
OH_MAG(12) = 2*q1*q4;
OH_MAG(13) = 2*q1*q3;
OH_MAG(14) = 2*q1*q2;
H_MAG = zeros(1,23);
H_MAG(1) = OH_MAG(2);
H_MAG(2) = OH_MAG(1);
H_MAG(3) = -OH_MAG(4);
H_MAG(4) = OH_MAG(3);
H_MAG(17) = OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2;
H_MAG(18) = OH_MAG(11) + OH_MAG(12);
H_MAG(19) = OH_MAG(10) - OH_MAG(13);
H_MAG(20) = 1;
OK_MX = zeros(4,1);
OK_MX(1) = 1/(LP(20,20) + rmag_x + LP(19,20)*(OH_MAG(10) - OH_MAG(13)) + (OH_MAG(11) + OH_MAG(12))*(LP(20,18) + LP(19,18)*(OH_MAG(10) - OH_MAG(13)) + LP(18,18)*(OH_MAG(11) + OH_MAG(12)) + LP(17,18)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + LP(1,18)*OH_MAG(2) + LP(2,18)*OH_MAG(1) - LP(3,18)*OH_MAG(4) + LP(4,18)*OH_MAG(3)) + (OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2)*(LP(20,17) + LP(19,17)*(OH_MAG(10) - OH_MAG(13)) + LP(18,17)*(OH_MAG(11) + OH_MAG(12)) + LP(17,17)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + LP(1,17)*OH_MAG(2) + LP(2,17)*OH_MAG(1) - LP(3,17)*OH_MAG(4) + LP(4,17)*OH_MAG(3)) + LP(18,20)*(OH_MAG(11) + OH_MAG(12)) + OH_MAG(2)*(LP(20,1) + LP(19,1)*(OH_MAG(10) - OH_MAG(13)) + LP(18,1)*(OH_MAG(11) + OH_MAG(12)) + LP(17,1)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + LP(1,1)*OH_MAG(2) + LP(2,1)*OH_MAG(1) - LP(3,1)*OH_MAG(4) + LP(4,1)*OH_MAG(3)) + OH_MAG(1)*(LP(20,2) + LP(19,2)*(OH_MAG(10) - OH_MAG(13)) + LP(18,2)*(OH_MAG(11) + OH_MAG(12)) + LP(17,2)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + LP(1,2)*OH_MAG(2) + LP(2,2)*OH_MAG(1) - LP(3,2)*OH_MAG(4) + LP(4,2)*OH_MAG(3)) - OH_MAG(4)*(LP(20,3) + LP(19,3)*(OH_MAG(10) - OH_MAG(13)) + LP(18,3)*(OH_MAG(11) + OH_MAG(12)) + LP(17,3)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + LP(1,3)*OH_MAG(2) + LP(2,3)*OH_MAG(1) - LP(3,3)*OH_MAG(4) + LP(4,3)*OH_MAG(3)) + OH_MAG(3)*(LP(20,4) + LP(19,4)*(OH_MAG(10) - OH_MAG(13)) + LP(18,4)*(OH_MAG(11) + OH_MAG(12)) + LP(17,4)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + LP(1,4)*OH_MAG(2) + LP(2,4)*OH_MAG(1) - LP(3,4)*OH_MAG(4) + LP(4,4)*OH_MAG(3)) + LP(17,20)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + (OH_MAG(10) - OH_MAG(13))*(LP(20,19) + LP(19,19)*(OH_MAG(10) - OH_MAG(13)) + LP(18,19)*(OH_MAG(11) + OH_MAG(12)) + LP(17,19)*(OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2) + LP(1,19)*OH_MAG(2) + LP(2,19)*OH_MAG(1) - LP(3,19)*OH_MAG(4) + LP(4,19)*OH_MAG(3)) + LP(1,20)*OH_MAG(2) + LP(2,20)*OH_MAG(1) - LP(3,20)*OH_MAG(4) + LP(4,20)*OH_MAG(3));
OK_MX(2) = OH_MAG(5) + OH_MAG(6) + OH_MAG(8) + q2^2;
OK_MX(3) = OH_MAG(10) - OH_MAG(13);
OK_MX(4) = OH_MAG(11) + OH_MAG(12);
K_gain = zeros(23,1);
K_gain(1) = OK_MX(1)*(LP(1,20) + LP(1,1)*OH_MAG(2) + LP(1,2)*OH_MAG(1) - LP(1,3)*OH_MAG(4) + LP(1,4)*OH_MAG(3) + LP(1,17)*OK_MX(2) + LP(1,18)*OK_MX(4) + LP(1,19)*OK_MX(3));
K_gain(2) = OK_MX(1)*(LP(2,20) + LP(2,1)*OH_MAG(2) + LP(2,2)*OH_MAG(1) - LP(2,3)*OH_MAG(4) + LP(2,4)*OH_MAG(3) + LP(2,17)*OK_MX(2) + LP(2,18)*OK_MX(4) + LP(2,19)*OK_MX(3));
K_gain(3) = OK_MX(1)*(LP(3,20) + LP(3,1)*OH_MAG(2) + LP(3,2)*OH_MAG(1) - LP(3,3)*OH_MAG(4) + LP(3,4)*OH_MAG(3) + LP(3,17)*OK_MX(2) + LP(3,18)*OK_MX(4) + LP(3,19)*OK_MX(3));
K_gain(4) = OK_MX(1)*(LP(4,20) + LP(4,1)*OH_MAG(2) + LP(4,2)*OH_MAG(1) - LP(4,3)*OH_MAG(4) + LP(4,4)*OH_MAG(3) + LP(4,17)*OK_MX(2) + LP(4,18)*OK_MX(4) + LP(4,19)*OK_MX(3));
K_gain(5) = OK_MX(1)*(LP(5,20) + LP(5,1)*OH_MAG(2) + LP(5,2)*OH_MAG(1) - LP(5,3)*OH_MAG(4) + LP(5,4)*OH_MAG(3) + LP(5,17)*OK_MX(2) + LP(5,18)*OK_MX(4) + LP(5,19)*OK_MX(3));
K_gain(6) = OK_MX(1)*(LP(6,20) + LP(6,1)*OH_MAG(2) + LP(6,2)*OH_MAG(1) - LP(6,3)*OH_MAG(4) + LP(6,4)*OH_MAG(3) + LP(6,17)*OK_MX(2) + LP(6,18)*OK_MX(4) + LP(6,19)*OK_MX(3));
K_gain(7) = OK_MX(1)*(LP(7,20) + LP(7,1)*OH_MAG(2) + LP(7,2)*OH_MAG(1) - LP(7,3)*OH_MAG(4) + LP(7,4)*OH_MAG(3) + LP(7,17)*OK_MX(2) + LP(7,18)*OK_MX(4) + LP(7,19)*OK_MX(3));
K_gain(8) = OK_MX(1)*(LP(8,20) + LP(8,1)*OH_MAG(2) + LP(8,2)*OH_MAG(1) - LP(8,3)*OH_MAG(4) + LP(8,4)*OH_MAG(3) + LP(8,17)*OK_MX(2) + LP(8,18)*OK_MX(4) + LP(8,19)*OK_MX(3));
K_gain(9) = OK_MX(1)*(LP(9,20) + LP(9,1)*OH_MAG(2) + LP(9,2)*OH_MAG(1) - LP(9,3)*OH_MAG(4) + LP(9,4)*OH_MAG(3) + LP(9,17)*OK_MX(2) + LP(9,18)*OK_MX(4) + LP(9,19)*OK_MX(3));
K_gain(10) = OK_MX(1)*(LP(10,20) + LP(10,1)*OH_MAG(2) + LP(10,2)*OH_MAG(1) - LP(10,3)*OH_MAG(4) + LP(10,4)*OH_MAG(3) + LP(10,17)*OK_MX(2) + LP(10,18)*OK_MX(4) + LP(10,19)*OK_MX(3));
K_gain(11) = OK_MX(1)*(LP(11,20) + LP(11,1)*OH_MAG(2) + LP(11,2)*OH_MAG(1) - LP(11,3)*OH_MAG(4) + LP(11,4)*OH_MAG(3) + LP(11,17)*OK_MX(2) + LP(11,18)*OK_MX(4) + LP(11,19)*OK_MX(3));
K_gain(12) = OK_MX(1)*(LP(12,20) + LP(12,1)*OH_MAG(2) + LP(12,2)*OH_MAG(1) - LP(12,3)*OH_MAG(4) + LP(12,4)*OH_MAG(3) + LP(12,17)*OK_MX(2) + LP(12,18)*OK_MX(4) + LP(12,19)*OK_MX(3));
K_gain(13) = OK_MX(1)*(LP(13,20) + LP(13,1)*OH_MAG(2) + LP(13,2)*OH_MAG(1) - LP(13,3)*OH_MAG(4) + LP(13,4)*OH_MAG(3) + LP(13,17)*OK_MX(2) + LP(13,18)*OK_MX(4) + LP(13,19)*OK_MX(3));
K_gain(14) = OK_MX(1)*(LP(14,20) + LP(14,1)*OH_MAG(2) + LP(14,2)*OH_MAG(1) - LP(14,3)*OH_MAG(4) + LP(14,4)*OH_MAG(3) + LP(14,17)*OK_MX(2) + LP(14,18)*OK_MX(4) + LP(14,19)*OK_MX(3));
K_gain(15) = OK_MX(1)*(LP(15,20) + LP(15,1)*OH_MAG(2) + LP(15,2)*OH_MAG(1) - LP(15,3)*OH_MAG(4) + LP(15,4)*OH_MAG(3) + LP(15,17)*OK_MX(2) + LP(15,18)*OK_MX(4) + LP(15,19)*OK_MX(3));
K_gain(16) = OK_MX(1)*(LP(16,20) + LP(16,1)*OH_MAG(2) + LP(16,2)*OH_MAG(1) - LP(16,3)*OH_MAG(4) + LP(16,4)*OH_MAG(3) + LP(16,17)*OK_MX(2) + LP(16,18)*OK_MX(4) + LP(16,19)*OK_MX(3));
K_gain(17) = OK_MX(1)*(LP(17,20) + LP(17,1)*OH_MAG(2) + LP(17,2)*OH_MAG(1) - LP(17,3)*OH_MAG(4) + LP(17,4)*OH_MAG(3) + LP(17,17)*OK_MX(2) + LP(17,18)*OK_MX(4) + LP(17,19)*OK_MX(3));
K_gain(18) = OK_MX(1)*(LP(18,20) + LP(18,1)*OH_MAG(2) + LP(18,2)*OH_MAG(1) - LP(18,3)*OH_MAG(4) + LP(18,4)*OH_MAG(3) + LP(18,17)*OK_MX(2) + LP(18,18)*OK_MX(4) + LP(18,19)*OK_MX(3));
K_gain(19) = OK_MX(1)*(LP(19,20) + LP(19,1)*OH_MAG(2) + LP(19,2)*OH_MAG(1) - LP(19,3)*OH_MAG(4) + LP(19,4)*OH_MAG(3) + LP(19,17)*OK_MX(2) + LP(19,18)*OK_MX(4) + LP(19,19)*OK_MX(3));
K_gain(20) = OK_MX(1)*(LP(20,20) + LP(20,1)*OH_MAG(2) + LP(20,2)*OH_MAG(1) - LP(20,3)*OH_MAG(4) + LP(20,4)*OH_MAG(3) + LP(20,17)*OK_MX(2) + LP(20,18)*OK_MX(4) + LP(20,19)*OK_MX(3));
K_gain(21) = OK_MX(1)*(LP(21,20) + LP(21,1)*OH_MAG(2) + LP(21,2)*OH_MAG(1) - LP(21,3)*OH_MAG(4) + LP(21,4)*OH_MAG(3) + LP(21,17)*OK_MX(2) + LP(21,18)*OK_MX(4) + LP(21,19)*OK_MX(3));
K_gain(22) = OK_MX(1)*(LP(22,20) + LP(22,1)*OH_MAG(2) + LP(22,2)*OH_MAG(1) - LP(22,3)*OH_MAG(4) + LP(22,4)*OH_MAG(3) + LP(22,17)*OK_MX(2) + LP(22,18)*OK_MX(4) + LP(22,19)*OK_MX(3));
K_gain(23) = OK_MX(1)*(LP(23,20) + LP(23,1)*OH_MAG(2) + LP(23,2)*OH_MAG(1) - LP(23,3)*OH_MAG(4) + LP(23,4)*OH_MAG(3) + LP(23,17)*OK_MX(2) + LP(23,18)*OK_MX(4) + LP(23,19)*OK_MX(3));
H_MAG = zeros(1,23);
H_MAG(1) = OH_MAG(3);
H_MAG(2) = OH_MAG(4);
H_MAG(3) = OH_MAG(1);
H_MAG(4) = -OH_MAG(2);
H_MAG(17) = OH_MAG(11) - OH_MAG(12);
H_MAG(18) = OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2;
H_MAG(19) = OH_MAG(9) + OH_MAG(14);
H_MAG(21) = 1;
OK_MY = zeros(4,1);
OK_MY(1) = 1/(LP(21,21) + rmag_y + LP(17,21)*(OH_MAG(11) - OH_MAG(12)) + (OH_MAG(9) + OH_MAG(14))*(LP(21,19) + LP(17,19)*(OH_MAG(11) - OH_MAG(12)) + LP(19,19)*(OH_MAG(9) + OH_MAG(14)) + LP(18,19)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + LP(1,19)*OH_MAG(3) + LP(2,19)*OH_MAG(4) + LP(3,19)*OH_MAG(1) - LP(4,19)*OH_MAG(2)) + (OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2)*(LP(21,18) + LP(17,18)*(OH_MAG(11) - OH_MAG(12)) + LP(19,18)*(OH_MAG(9) + OH_MAG(14)) + LP(18,18)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + LP(1,18)*OH_MAG(3) + LP(2,18)*OH_MAG(4) + LP(3,18)*OH_MAG(1) - LP(4,18)*OH_MAG(2)) + LP(19,21)*(OH_MAG(9) + OH_MAG(14)) + OH_MAG(3)*(LP(21,1) + LP(17,1)*(OH_MAG(11) - OH_MAG(12)) + LP(19,1)*(OH_MAG(9) + OH_MAG(14)) + LP(18,1)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + LP(1,1)*OH_MAG(3) + LP(2,1)*OH_MAG(4) + LP(3,1)*OH_MAG(1) - LP(4,1)*OH_MAG(2)) + OH_MAG(4)*(LP(21,2) + LP(17,2)*(OH_MAG(11) - OH_MAG(12)) + LP(19,2)*(OH_MAG(9) + OH_MAG(14)) + LP(18,2)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + LP(1,2)*OH_MAG(3) + LP(2,2)*OH_MAG(4) + LP(3,2)*OH_MAG(1) - LP(4,2)*OH_MAG(2)) + OH_MAG(1)*(LP(21,3) + LP(17,3)*(OH_MAG(11) - OH_MAG(12)) + LP(19,3)*(OH_MAG(9) + OH_MAG(14)) + LP(18,3)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + LP(1,3)*OH_MAG(3) + LP(2,3)*OH_MAG(4) + LP(3,3)*OH_MAG(1) - LP(4,3)*OH_MAG(2)) - OH_MAG(2)*(LP(21,4) + LP(17,4)*(OH_MAG(11) - OH_MAG(12)) + LP(19,4)*(OH_MAG(9) + OH_MAG(14)) + LP(18,4)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + LP(1,4)*OH_MAG(3) + LP(2,4)*OH_MAG(4) + LP(3,4)*OH_MAG(1) - LP(4,4)*OH_MAG(2)) + LP(18,21)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + (OH_MAG(11) - OH_MAG(12))*(LP(21,17) + LP(17,17)*(OH_MAG(11) - OH_MAG(12)) + LP(19,17)*(OH_MAG(9) + OH_MAG(14)) + LP(18,17)*(OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2) + LP(1,17)*OH_MAG(3) + LP(2,17)*OH_MAG(4) + LP(3,17)*OH_MAG(1) - LP(4,17)*OH_MAG(2)) + LP(1,21)*OH_MAG(3) + LP(2,21)*OH_MAG(4) + LP(3,21)*OH_MAG(1) - LP(4,21)*OH_MAG(2));
OK_MY(2) = OH_MAG(5) + OH_MAG(7) + OH_MAG(8) + q3^2;
OK_MY(3) = OH_MAG(11) - OH_MAG(12);
OK_MY(4) = OH_MAG(9) + OH_MAG(14);
K_gain = zeros(23,1);
K_gain(1) = OK_MY(1)*(LP(1,21) + LP(1,1)*OH_MAG(3) + LP(1,3)*OH_MAG(1) + LP(1,2)*OH_MAG(4) - LP(1,4)*OH_MAG(2) + LP(1,17)*OK_MY(3) + LP(1,18)*OK_MY(2) + LP(1,19)*OK_MY(4));
K_gain(2) = OK_MY(1)*(LP(2,21) + LP(2,1)*OH_MAG(3) + LP(2,3)*OH_MAG(1) + LP(2,2)*OH_MAG(4) - LP(2,4)*OH_MAG(2) + LP(2,17)*OK_MY(3) + LP(2,18)*OK_MY(2) + LP(2,19)*OK_MY(4));
K_gain(3) = OK_MY(1)*(LP(3,21) + LP(3,1)*OH_MAG(3) + LP(3,3)*OH_MAG(1) + LP(3,2)*OH_MAG(4) - LP(3,4)*OH_MAG(2) + LP(3,17)*OK_MY(3) + LP(3,18)*OK_MY(2) + LP(3,19)*OK_MY(4));
K_gain(4) = OK_MY(1)*(LP(4,21) + LP(4,1)*OH_MAG(3) + LP(4,3)*OH_MAG(1) + LP(4,2)*OH_MAG(4) - LP(4,4)*OH_MAG(2) + LP(4,17)*OK_MY(3) + LP(4,18)*OK_MY(2) + LP(4,19)*OK_MY(4));
K_gain(5) = OK_MY(1)*(LP(5,21) + LP(5,1)*OH_MAG(3) + LP(5,3)*OH_MAG(1) + LP(5,2)*OH_MAG(4) - LP(5,4)*OH_MAG(2) + LP(5,17)*OK_MY(3) + LP(5,18)*OK_MY(2) + LP(5,19)*OK_MY(4));
K_gain(6) = OK_MY(1)*(LP(6,21) + LP(6,1)*OH_MAG(3) + LP(6,3)*OH_MAG(1) + LP(6,2)*OH_MAG(4) - LP(6,4)*OH_MAG(2) + LP(6,17)*OK_MY(3) + LP(6,18)*OK_MY(2) + LP(6,19)*OK_MY(4));
K_gain(7) = OK_MY(1)*(LP(7,21) + LP(7,1)*OH_MAG(3) + LP(7,3)*OH_MAG(1) + LP(7,2)*OH_MAG(4) - LP(7,4)*OH_MAG(2) + LP(7,17)*OK_MY(3) + LP(7,18)*OK_MY(2) + LP(7,19)*OK_MY(4));
K_gain(8) = OK_MY(1)*(LP(8,21) + LP(8,1)*OH_MAG(3) + LP(8,3)*OH_MAG(1) + LP(8,2)*OH_MAG(4) - LP(8,4)*OH_MAG(2) + LP(8,17)*OK_MY(3) + LP(8,18)*OK_MY(2) + LP(8,19)*OK_MY(4));
K_gain(9) = OK_MY(1)*(LP(9,21) + LP(9,1)*OH_MAG(3) + LP(9,3)*OH_MAG(1) + LP(9,2)*OH_MAG(4) - LP(9,4)*OH_MAG(2) + LP(9,17)*OK_MY(3) + LP(9,18)*OK_MY(2) + LP(9,19)*OK_MY(4));
K_gain(10) = OK_MY(1)*(LP(10,21) + LP(10,1)*OH_MAG(3) + LP(10,3)*OH_MAG(1) + LP(10,2)*OH_MAG(4) - LP(10,4)*OH_MAG(2) + LP(10,17)*OK_MY(3) + LP(10,18)*OK_MY(2) + LP(10,19)*OK_MY(4));
K_gain(11) = OK_MY(1)*(LP(11,21) + LP(11,1)*OH_MAG(3) + LP(11,3)*OH_MAG(1) + LP(11,2)*OH_MAG(4) - LP(11,4)*OH_MAG(2) + LP(11,17)*OK_MY(3) + LP(11,18)*OK_MY(2) + LP(11,19)*OK_MY(4));
K_gain(12) = OK_MY(1)*(LP(12,21) + LP(12,1)*OH_MAG(3) + LP(12,3)*OH_MAG(1) + LP(12,2)*OH_MAG(4) - LP(12,4)*OH_MAG(2) + LP(12,17)*OK_MY(3) + LP(12,18)*OK_MY(2) + LP(12,19)*OK_MY(4));
K_gain(13) = OK_MY(1)*(LP(13,21) + LP(13,1)*OH_MAG(3) + LP(13,3)*OH_MAG(1) + LP(13,2)*OH_MAG(4) - LP(13,4)*OH_MAG(2) + LP(13,17)*OK_MY(3) + LP(13,18)*OK_MY(2) + LP(13,19)*OK_MY(4));
K_gain(14) = OK_MY(1)*(LP(14,21) + LP(14,1)*OH_MAG(3) + LP(14,3)*OH_MAG(1) + LP(14,2)*OH_MAG(4) - LP(14,4)*OH_MAG(2) + LP(14,17)*OK_MY(3) + LP(14,18)*OK_MY(2) + LP(14,19)*OK_MY(4));
K_gain(15) = OK_MY(1)*(LP(15,21) + LP(15,1)*OH_MAG(3) + LP(15,3)*OH_MAG(1) + LP(15,2)*OH_MAG(4) - LP(15,4)*OH_MAG(2) + LP(15,17)*OK_MY(3) + LP(15,18)*OK_MY(2) + LP(15,19)*OK_MY(4));
K_gain(16) = OK_MY(1)*(LP(16,21) + LP(16,1)*OH_MAG(3) + LP(16,3)*OH_MAG(1) + LP(16,2)*OH_MAG(4) - LP(16,4)*OH_MAG(2) + LP(16,17)*OK_MY(3) + LP(16,18)*OK_MY(2) + LP(16,19)*OK_MY(4));
K_gain(17) = OK_MY(1)*(LP(17,21) + LP(17,1)*OH_MAG(3) + LP(17,3)*OH_MAG(1) + LP(17,2)*OH_MAG(4) - LP(17,4)*OH_MAG(2) + LP(17,17)*OK_MY(3) + LP(17,18)*OK_MY(2) + LP(17,19)*OK_MY(4));
K_gain(18) = OK_MY(1)*(LP(18,21) + LP(18,1)*OH_MAG(3) + LP(18,3)*OH_MAG(1) + LP(18,2)*OH_MAG(4) - LP(18,4)*OH_MAG(2) + LP(18,17)*OK_MY(3) + LP(18,18)*OK_MY(2) + LP(18,19)*OK_MY(4));
K_gain(19) = OK_MY(1)*(LP(19,21) + LP(19,1)*OH_MAG(3) + LP(19,3)*OH_MAG(1) + LP(19,2)*OH_MAG(4) - LP(19,4)*OH_MAG(2) + LP(19,17)*OK_MY(3) + LP(19,18)*OK_MY(2) + LP(19,19)*OK_MY(4));
K_gain(20) = OK_MY(1)*(LP(20,21) + LP(20,1)*OH_MAG(3) + LP(20,3)*OH_MAG(1) + LP(20,2)*OH_MAG(4) - LP(20,4)*OH_MAG(2) + LP(20,17)*OK_MY(3) + LP(20,18)*OK_MY(2) + LP(20,19)*OK_MY(4));
K_gain(21) = OK_MY(1)*(LP(21,21) + LP(21,1)*OH_MAG(3) + LP(21,3)*OH_MAG(1) + LP(21,2)*OH_MAG(4) - LP(21,4)*OH_MAG(2) + LP(21,17)*OK_MY(3) + LP(21,18)*OK_MY(2) + LP(21,19)*OK_MY(4));
K_gain(22) = OK_MY(1)*(LP(22,21) + LP(22,1)*OH_MAG(3) + LP(22,3)*OH_MAG(1) + LP(22,2)*OH_MAG(4) - LP(22,4)*OH_MAG(2) + LP(22,17)*OK_MY(3) + LP(22,18)*OK_MY(2) + LP(22,19)*OK_MY(4));
K_gain(23) = OK_MY(1)*(LP(23,21) + LP(23,1)*OH_MAG(3) + LP(23,3)*OH_MAG(1) + LP(23,2)*OH_MAG(4) - LP(23,4)*OH_MAG(2) + LP(23,17)*OK_MY(3) + LP(23,18)*OK_MY(2) + LP(23,19)*OK_MY(4));
H_MAG = zeros(1,23);
H_MAG(1) = OH_MAG(4);
H_MAG(2) = -OH_MAG(3);
H_MAG(3) = OH_MAG(2);
H_MAG(4) = OH_MAG(1);
H_MAG(17) = OH_MAG(10) + OH_MAG(13);
H_MAG(18) = OH_MAG(9) - OH_MAG(14);
H_MAG(19) = OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2;
H_MAG(22) = 1;
OK_MZ = zeros(4,1);
OK_MZ(1) = 1/(LP(22,22) + rmag_z + LP(18,22)*(OH_MAG(9) - OH_MAG(14)) + (OH_MAG(10) + OH_MAG(13))*(LP(22,17) + LP(18,17)*(OH_MAG(9) - OH_MAG(14)) + LP(17,17)*(OH_MAG(10) + OH_MAG(13)) + LP(19,17)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + LP(1,17)*OH_MAG(4) - LP(2,17)*OH_MAG(3) + LP(3,17)*OH_MAG(2) + LP(4,17)*OH_MAG(1)) + (OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2)*(LP(22,19) + LP(18,19)*(OH_MAG(9) - OH_MAG(14)) + LP(17,19)*(OH_MAG(10) + OH_MAG(13)) + LP(19,19)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + LP(1,19)*OH_MAG(4) - LP(2,19)*OH_MAG(3) + LP(3,19)*OH_MAG(2) + LP(4,19)*OH_MAG(1)) + LP(17,22)*(OH_MAG(10) + OH_MAG(13)) + OH_MAG(4)*(LP(22,1) + LP(18,1)*(OH_MAG(9) - OH_MAG(14)) + LP(17,1)*(OH_MAG(10) + OH_MAG(13)) + LP(19,1)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + LP(1,1)*OH_MAG(4) - LP(2,1)*OH_MAG(3) + LP(3,1)*OH_MAG(2) + LP(4,1)*OH_MAG(1)) - OH_MAG(3)*(LP(22,2) + LP(18,2)*(OH_MAG(9) - OH_MAG(14)) + LP(17,2)*(OH_MAG(10) + OH_MAG(13)) + LP(19,2)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + LP(1,2)*OH_MAG(4) - LP(2,2)*OH_MAG(3) + LP(3,2)*OH_MAG(2) + LP(4,2)*OH_MAG(1)) + OH_MAG(2)*(LP(22,3) + LP(18,3)*(OH_MAG(9) - OH_MAG(14)) + LP(17,3)*(OH_MAG(10) + OH_MAG(13)) + LP(19,3)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + LP(1,3)*OH_MAG(4) - LP(2,3)*OH_MAG(3) + LP(3,3)*OH_MAG(2) + LP(4,3)*OH_MAG(1)) + OH_MAG(1)*(LP(22,4) + LP(18,4)*(OH_MAG(9) - OH_MAG(14)) + LP(17,4)*(OH_MAG(10) + OH_MAG(13)) + LP(19,4)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + LP(1,4)*OH_MAG(4) - LP(2,4)*OH_MAG(3) + LP(3,4)*OH_MAG(2) + LP(4,4)*OH_MAG(1)) + LP(19,22)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + (OH_MAG(9) - OH_MAG(14))*(LP(22,18) + LP(18,18)*(OH_MAG(9) - OH_MAG(14)) + LP(17,18)*(OH_MAG(10) + OH_MAG(13)) + LP(19,18)*(OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2) + LP(1,18)*OH_MAG(4) - LP(2,18)*OH_MAG(3) + LP(3,18)*OH_MAG(2) + LP(4,18)*OH_MAG(1)) + LP(1,22)*OH_MAG(4) - LP(2,22)*OH_MAG(3) + LP(3,22)*OH_MAG(2) + LP(4,22)*OH_MAG(1));
OK_MZ(2) = OH_MAG(6) + OH_MAG(7) + OH_MAG(8) + q4^2;
OK_MZ(3) = OH_MAG(9) - OH_MAG(14);
OK_MZ(4) = OH_MAG(10) + OH_MAG(13);
K_gain = zeros(23,1);
K_gain(1) = OK_MZ(1)*(LP(1,22) + LP(1,1)*OH_MAG(4) - LP(1,2)*OH_MAG(3) + LP(1,3)*OH_MAG(2) + LP(1,4)*OH_MAG(1) + LP(1,17)*OK_MZ(4) + LP(1,18)*OK_MZ(3) + LP(1,19)*OK_MZ(2));
K_gain(2) = OK_MZ(1)*(LP(2,22) + LP(2,1)*OH_MAG(4) - LP(2,2)*OH_MAG(3) + LP(2,3)*OH_MAG(2) + LP(2,4)*OH_MAG(1) + LP(2,17)*OK_MZ(4) + LP(2,18)*OK_MZ(3) + LP(2,19)*OK_MZ(2));
K_gain(3) = OK_MZ(1)*(LP(3,22) + LP(3,1)*OH_MAG(4) - LP(3,2)*OH_MAG(3) + LP(3,3)*OH_MAG(2) + LP(3,4)*OH_MAG(1) + LP(3,17)*OK_MZ(4) + LP(3,18)*OK_MZ(3) + LP(3,19)*OK_MZ(2));
K_gain(4) = OK_MZ(1)*(LP(4,22) + LP(4,1)*OH_MAG(4) - LP(4,2)*OH_MAG(3) + LP(4,3)*OH_MAG(2) + LP(4,4)*OH_MAG(1) + LP(4,17)*OK_MZ(4) + LP(4,18)*OK_MZ(3) + LP(4,19)*OK_MZ(2));
K_gain(5) = OK_MZ(1)*(LP(5,22) + LP(5,1)*OH_MAG(4) - LP(5,2)*OH_MAG(3) + LP(5,3)*OH_MAG(2) + LP(5,4)*OH_MAG(1) + LP(5,17)*OK_MZ(4) + LP(5,18)*OK_MZ(3) + LP(5,19)*OK_MZ(2));
K_gain(6) = OK_MZ(1)*(LP(6,22) + LP(6,1)*OH_MAG(4) - LP(6,2)*OH_MAG(3) + LP(6,3)*OH_MAG(2) + LP(6,4)*OH_MAG(1) + LP(6,17)*OK_MZ(4) + LP(6,18)*OK_MZ(3) + LP(6,19)*OK_MZ(2));
K_gain(7) = OK_MZ(1)*(LP(7,22) + LP(7,1)*OH_MAG(4) - LP(7,2)*OH_MAG(3) + LP(7,3)*OH_MAG(2) + LP(7,4)*OH_MAG(1) + LP(7,17)*OK_MZ(4) + LP(7,18)*OK_MZ(3) + LP(7,19)*OK_MZ(2));
K_gain(8) = OK_MZ(1)*(LP(8,22) + LP(8,1)*OH_MAG(4) - LP(8,2)*OH_MAG(3) + LP(8,3)*OH_MAG(2) + LP(8,4)*OH_MAG(1) + LP(8,17)*OK_MZ(4) + LP(8,18)*OK_MZ(3) + LP(8,19)*OK_MZ(2));
K_gain(9) = OK_MZ(1)*(LP(9,22) + LP(9,1)*OH_MAG(4) - LP(9,2)*OH_MAG(3) + LP(9,3)*OH_MAG(2) + LP(9,4)*OH_MAG(1) + LP(9,17)*OK_MZ(4) + LP(9,18)*OK_MZ(3) + LP(9,19)*OK_MZ(2));
K_gain(10) = OK_MZ(1)*(LP(10,22) + LP(10,1)*OH_MAG(4) - LP(10,2)*OH_MAG(3) + LP(10,3)*OH_MAG(2) + LP(10,4)*OH_MAG(1) + LP(10,17)*OK_MZ(4) + LP(10,18)*OK_MZ(3) + LP(10,19)*OK_MZ(2));
K_gain(11) = OK_MZ(1)*(LP(11,22) + LP(11,1)*OH_MAG(4) - LP(11,2)*OH_MAG(3) + LP(11,3)*OH_MAG(2) + LP(11,4)*OH_MAG(1) + LP(11,17)*OK_MZ(4) + LP(11,18)*OK_MZ(3) + LP(11,19)*OK_MZ(2));
K_gain(12) = OK_MZ(1)*(LP(12,22) + LP(12,1)*OH_MAG(4) - LP(12,2)*OH_MAG(3) + LP(12,3)*OH_MAG(2) + LP(12,4)*OH_MAG(1) + LP(12,17)*OK_MZ(4) + LP(12,18)*OK_MZ(3) + LP(12,19)*OK_MZ(2));
K_gain(13) = OK_MZ(1)*(LP(13,22) + LP(13,1)*OH_MAG(4) - LP(13,2)*OH_MAG(3) + LP(13,3)*OH_MAG(2) + LP(13,4)*OH_MAG(1) + LP(13,17)*OK_MZ(4) + LP(13,18)*OK_MZ(3) + LP(13,19)*OK_MZ(2));
K_gain(14) = OK_MZ(1)*(LP(14,22) + LP(14,1)*OH_MAG(4) - LP(14,2)*OH_MAG(3) + LP(14,3)*OH_MAG(2) + LP(14,4)*OH_MAG(1) + LP(14,17)*OK_MZ(4) + LP(14,18)*OK_MZ(3) + LP(14,19)*OK_MZ(2));
K_gain(15) = OK_MZ(1)*(LP(15,22) + LP(15,1)*OH_MAG(4) - LP(15,2)*OH_MAG(3) + LP(15,3)*OH_MAG(2) + LP(15,4)*OH_MAG(1) + LP(15,17)*OK_MZ(4) + LP(15,18)*OK_MZ(3) + LP(15,19)*OK_MZ(2));
K_gain(16) = OK_MZ(1)*(LP(16,22) + LP(16,1)*OH_MAG(4) - LP(16,2)*OH_MAG(3) + LP(16,3)*OH_MAG(2) + LP(16,4)*OH_MAG(1) + LP(16,17)*OK_MZ(4) + LP(16,18)*OK_MZ(3) + LP(16,19)*OK_MZ(2));
K_gain(17) = OK_MZ(1)*(LP(17,22) + LP(17,1)*OH_MAG(4) - LP(17,2)*OH_MAG(3) + LP(17,3)*OH_MAG(2) + LP(17,4)*OH_MAG(1) + LP(17,17)*OK_MZ(4) + LP(17,18)*OK_MZ(3) + LP(17,19)*OK_MZ(2));
K_gain(18) = OK_MZ(1)*(LP(18,22) + LP(18,1)*OH_MAG(4) - LP(18,2)*OH_MAG(3) + LP(18,3)*OH_MAG(2) + LP(18,4)*OH_MAG(1) + LP(18,17)*OK_MZ(4) + LP(18,18)*OK_MZ(3) + LP(18,19)*OK_MZ(2));
K_gain(19) = OK_MZ(1)*(LP(19,22) + LP(19,1)*OH_MAG(4) - LP(19,2)*OH_MAG(3) + LP(19,3)*OH_MAG(2) + LP(19,4)*OH_MAG(1) + LP(19,17)*OK_MZ(4) + LP(19,18)*OK_MZ(3) + LP(19,19)*OK_MZ(2));
K_gain(20) = OK_MZ(1)*(LP(20,22) + LP(20,1)*OH_MAG(4) - LP(20,2)*OH_MAG(3) + LP(20,3)*OH_MAG(2) + LP(20,4)*OH_MAG(1) + LP(20,17)*OK_MZ(4) + LP(20,18)*OK_MZ(3) + LP(20,19)*OK_MZ(2));
K_gain(21) = OK_MZ(1)*(LP(21,22) + LP(21,1)*OH_MAG(4) - LP(21,2)*OH_MAG(3) + LP(21,3)*OH_MAG(2) + LP(21,4)*OH_MAG(1) + LP(21,17)*OK_MZ(4) + LP(21,18)*OK_MZ(3) + LP(21,19)*OK_MZ(2));
K_gain(22) = OK_MZ(1)*(LP(22,22) + LP(22,1)*OH_MAG(4) - LP(22,2)*OH_MAG(3) + LP(22,3)*OH_MAG(2) + LP(22,4)*OH_MAG(1) + LP(22,17)*OK_MZ(4) + LP(22,18)*OK_MZ(3) + LP(22,19)*OK_MZ(2));
K_gain(23) = OK_MZ(1)*(LP(23,22) + LP(23,1)*OH_MAG(4) - LP(23,2)*OH_MAG(3) + LP(23,3)*OH_MAG(2) + LP(23,4)*OH_MAG(1) + LP(23,17)*OK_MZ(4) + LP(23,18)*OK_MZ(3) + LP(23,19)*OK_MZ(2));
OH_DEC = zeros(1,1);
OH_DEC(1) = 1/(mag_e^2/mag_n^2 + 1);
H_DEC = zeros(1,23);
H_DEC(17) = -(OH_DEC(1)*mag_e)/mag_n^2;
H_DEC(18) = OH_DEC(1)/mag_n;
OK_DEC = zeros(3,1);
OK_DEC(1) = 1/(rdec + (OH_DEC(1)*((LP(18,18)*OH_DEC(1))/mag_n - (LP(17,18)*OH_DEC(1)*mag_e)/mag_n^2))/mag_n - (OH_DEC(1)*mag_e*((LP(18,17)*OH_DEC(1))/mag_n - (LP(17,17)*OH_DEC(1)*mag_e)/mag_n^2))/mag_n^2);
OK_DEC(2) = 1/mag_n;
OK_DEC(3) = OK_DEC(2)^2;
K_gain = zeros(23,1);
K_gain(1) = OK_DEC(1)*(LP(1,18)*OH_DEC(1)*OK_DEC(2) - LP(1,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(2) = OK_DEC(1)*(LP(2,18)*OH_DEC(1)*OK_DEC(2) - LP(2,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(3) = OK_DEC(1)*(LP(3,18)*OH_DEC(1)*OK_DEC(2) - LP(3,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(4) = OK_DEC(1)*(LP(4,18)*OH_DEC(1)*OK_DEC(2) - LP(4,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(5) = OK_DEC(1)*(LP(5,18)*OH_DEC(1)*OK_DEC(2) - LP(5,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(6) = OK_DEC(1)*(LP(6,18)*OH_DEC(1)*OK_DEC(2) - LP(6,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(7) = OK_DEC(1)*(LP(7,18)*OH_DEC(1)*OK_DEC(2) - LP(7,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(8) = OK_DEC(1)*(LP(8,18)*OH_DEC(1)*OK_DEC(2) - LP(8,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(9) = OK_DEC(1)*(LP(9,18)*OH_DEC(1)*OK_DEC(2) - LP(9,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(10) = OK_DEC(1)*(LP(10,18)*OH_DEC(1)*OK_DEC(2) - LP(10,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(11) = OK_DEC(1)*(LP(11,18)*OH_DEC(1)*OK_DEC(2) - LP(11,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(12) = OK_DEC(1)*(LP(12,18)*OH_DEC(1)*OK_DEC(2) - LP(12,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(13) = OK_DEC(1)*(LP(13,18)*OH_DEC(1)*OK_DEC(2) - LP(13,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(14) = OK_DEC(1)*(LP(14,18)*OH_DEC(1)*OK_DEC(2) - LP(14,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(15) = OK_DEC(1)*(LP(15,18)*OH_DEC(1)*OK_DEC(2) - LP(15,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(16) = OK_DEC(1)*(LP(16,18)*OH_DEC(1)*OK_DEC(2) - LP(16,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(17) = OK_DEC(1)*(LP(17,18)*OH_DEC(1)*OK_DEC(2) - LP(17,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(18) = OK_DEC(1)*(LP(18,18)*OH_DEC(1)*OK_DEC(2) - LP(18,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(19) = OK_DEC(1)*(LP(19,18)*OH_DEC(1)*OK_DEC(2) - LP(19,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(20) = OK_DEC(1)*(LP(20,18)*OH_DEC(1)*OK_DEC(2) - LP(20,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(21) = OK_DEC(1)*(LP(21,18)*OH_DEC(1)*OK_DEC(2) - LP(21,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(22) = OK_DEC(1)*(LP(22,18)*OH_DEC(1)*OK_DEC(2) - LP(22,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
K_gain(23) = OK_DEC(1)*(LP(23,18)*OH_DEC(1)*OK_DEC(2) - LP(23,17)*OH_DEC(1)*OK_DEC(3)*mag_e);
H_YAW321 = zeros(1,23);
H_YAW321(1) = -(2*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2);
H_YAW321(2) = -(2*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2);
H_YAW321(3) = (2*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2);
H_YAW321(4) = (2*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2);
K_gain = zeros(23,1);
K_gain(1) = -(2*(LP(1,1)*q4^3 + LP(1,2)*q3^3 - LP(1,3)*q2^3 - LP(1,4)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,2)*q1^2*q3 - LP(1,3)*q1^2*q2 - LP(1,1)*q2^2*q4 + LP(1,2)*q2^2*q3 - LP(1,4)*q1*q2^2 + LP(1,1)*q3^2*q4 - LP(1,3)*q2*q3^2 + LP(1,4)*q1*q3^2 + LP(1,2)*q3*q4^2 + LP(1,3)*q2*q4^2 - LP(1,4)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(1,2)*q1*q2*q4 - 2*LP(1,3)*q1*q3*q4 - 2*LP(1,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(2) = -(2*(LP(2,1)*q4^3 + LP(2,2)*q3^3 - LP(2,3)*q2^3 - LP(2,4)*q1^3 + LP(2,1)*q1^2*q4 - LP(2,2)*q1^2*q3 - LP(2,3)*q1^2*q2 - LP(2,1)*q2^2*q4 + LP(2,2)*q2^2*q3 - LP(2,4)*q1*q2^2 + LP(2,1)*q3^2*q4 - LP(2,3)*q2*q3^2 + LP(2,4)*q1*q3^2 + LP(2,2)*q3*q4^2 + LP(2,3)*q2*q4^2 - LP(2,4)*q1*q4^2 + 2*LP(2,1)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(2,3)*q1*q3*q4 - 2*LP(2,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(3) = -(2*(LP(3,1)*q4^3 + LP(3,2)*q3^3 - LP(3,3)*q2^3 - LP(3,4)*q1^3 + LP(3,1)*q1^2*q4 - LP(3,2)*q1^2*q3 - LP(3,3)*q1^2*q2 - LP(3,1)*q2^2*q4 + LP(3,2)*q2^2*q3 - LP(3,4)*q1*q2^2 + LP(3,1)*q3^2*q4 - LP(3,3)*q2*q3^2 + LP(3,4)*q1*q3^2 + LP(3,2)*q3*q4^2 + LP(3,3)*q2*q4^2 - LP(3,4)*q1*q4^2 + 2*LP(3,1)*q1*q2*q3 + 2*LP(3,2)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(3,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(4) = -(2*(LP(4,1)*q4^3 + LP(4,2)*q3^3 - LP(4,3)*q2^3 - LP(4,4)*q1^3 + LP(4,1)*q1^2*q4 - LP(4,2)*q1^2*q3 - LP(4,3)*q1^2*q2 - LP(4,1)*q2^2*q4 + LP(4,2)*q2^2*q3 - LP(4,4)*q1*q2^2 + LP(4,1)*q3^2*q4 - LP(4,3)*q2*q3^2 + LP(4,4)*q1*q3^2 + LP(4,2)*q3*q4^2 + LP(4,3)*q2*q4^2 - LP(4,4)*q1*q4^2 + 2*LP(4,1)*q1*q2*q3 + 2*LP(4,2)*q1*q2*q4 - 2*LP(4,3)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(5) = -(2*(LP(5,1)*q4^3 + LP(5,2)*q3^3 - LP(5,3)*q2^3 - LP(5,4)*q1^3 + LP(5,1)*q1^2*q4 - LP(5,2)*q1^2*q3 - LP(5,3)*q1^2*q2 - LP(5,1)*q2^2*q4 + LP(5,2)*q2^2*q3 - LP(5,4)*q1*q2^2 + LP(5,1)*q3^2*q4 - LP(5,3)*q2*q3^2 + LP(5,4)*q1*q3^2 + LP(5,2)*q3*q4^2 + LP(5,3)*q2*q4^2 - LP(5,4)*q1*q4^2 + 2*LP(5,1)*q1*q2*q3 + 2*LP(5,2)*q1*q2*q4 - 2*LP(5,3)*q1*q3*q4 - 2*LP(5,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(6) = -(2*(LP(6,1)*q4^3 + LP(6,2)*q3^3 - LP(6,3)*q2^3 - LP(6,4)*q1^3 + LP(6,1)*q1^2*q4 - LP(6,2)*q1^2*q3 - LP(6,3)*q1^2*q2 - LP(6,1)*q2^2*q4 + LP(6,2)*q2^2*q3 - LP(6,4)*q1*q2^2 + LP(6,1)*q3^2*q4 - LP(6,3)*q2*q3^2 + LP(6,4)*q1*q3^2 + LP(6,2)*q3*q4^2 + LP(6,3)*q2*q4^2 - LP(6,4)*q1*q4^2 + 2*LP(6,1)*q1*q2*q3 + 2*LP(6,2)*q1*q2*q4 - 2*LP(6,3)*q1*q3*q4 - 2*LP(6,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(7) = -(2*(LP(7,1)*q4^3 + LP(7,2)*q3^3 - LP(7,3)*q2^3 - LP(7,4)*q1^3 + LP(7,1)*q1^2*q4 - LP(7,2)*q1^2*q3 - LP(7,3)*q1^2*q2 - LP(7,1)*q2^2*q4 + LP(7,2)*q2^2*q3 - LP(7,4)*q1*q2^2 + LP(7,1)*q3^2*q4 - LP(7,3)*q2*q3^2 + LP(7,4)*q1*q3^2 + LP(7,2)*q3*q4^2 + LP(7,3)*q2*q4^2 - LP(7,4)*q1*q4^2 + 2*LP(7,1)*q1*q2*q3 + 2*LP(7,2)*q1*q2*q4 - 2*LP(7,3)*q1*q3*q4 - 2*LP(7,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(8) = -(2*(LP(8,1)*q4^3 + LP(8,2)*q3^3 - LP(8,3)*q2^3 - LP(8,4)*q1^3 + LP(8,1)*q1^2*q4 - LP(8,2)*q1^2*q3 - LP(8,3)*q1^2*q2 - LP(8,1)*q2^2*q4 + LP(8,2)*q2^2*q3 - LP(8,4)*q1*q2^2 + LP(8,1)*q3^2*q4 - LP(8,3)*q2*q3^2 + LP(8,4)*q1*q3^2 + LP(8,2)*q3*q4^2 + LP(8,3)*q2*q4^2 - LP(8,4)*q1*q4^2 + 2*LP(8,1)*q1*q2*q3 + 2*LP(8,2)*q1*q2*q4 - 2*LP(8,3)*q1*q3*q4 - 2*LP(8,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(9) = -(2*(LP(9,1)*q4^3 + LP(9,2)*q3^3 - LP(9,3)*q2^3 - LP(9,4)*q1^3 + LP(9,1)*q1^2*q4 - LP(9,2)*q1^2*q3 - LP(9,3)*q1^2*q2 - LP(9,1)*q2^2*q4 + LP(9,2)*q2^2*q3 - LP(9,4)*q1*q2^2 + LP(9,1)*q3^2*q4 - LP(9,3)*q2*q3^2 + LP(9,4)*q1*q3^2 + LP(9,2)*q3*q4^2 + LP(9,3)*q2*q4^2 - LP(9,4)*q1*q4^2 + 2*LP(9,1)*q1*q2*q3 + 2*LP(9,2)*q1*q2*q4 - 2*LP(9,3)*q1*q3*q4 - 2*LP(9,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(10) = -(2*(LP(10,1)*q4^3 + LP(10,2)*q3^3 - LP(10,3)*q2^3 - LP(10,4)*q1^3 + LP(10,1)*q1^2*q4 - LP(10,2)*q1^2*q3 - LP(10,3)*q1^2*q2 - LP(10,1)*q2^2*q4 + LP(10,2)*q2^2*q3 - LP(10,4)*q1*q2^2 + LP(10,1)*q3^2*q4 - LP(10,3)*q2*q3^2 + LP(10,4)*q1*q3^2 + LP(10,2)*q3*q4^2 + LP(10,3)*q2*q4^2 - LP(10,4)*q1*q4^2 + 2*LP(10,1)*q1*q2*q3 + 2*LP(10,2)*q1*q2*q4 - 2*LP(10,3)*q1*q3*q4 - 2*LP(10,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(11) = -(2*(LP(11,1)*q4^3 + LP(11,2)*q3^3 - LP(11,3)*q2^3 - LP(11,4)*q1^3 + LP(11,1)*q1^2*q4 - LP(11,2)*q1^2*q3 - LP(11,3)*q1^2*q2 - LP(11,1)*q2^2*q4 + LP(11,2)*q2^2*q3 - LP(11,4)*q1*q2^2 + LP(11,1)*q3^2*q4 - LP(11,3)*q2*q3^2 + LP(11,4)*q1*q3^2 + LP(11,2)*q3*q4^2 + LP(11,3)*q2*q4^2 - LP(11,4)*q1*q4^2 + 2*LP(11,1)*q1*q2*q3 + 2*LP(11,2)*q1*q2*q4 - 2*LP(11,3)*q1*q3*q4 - 2*LP(11,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(12) = -(2*(LP(12,1)*q4^3 + LP(12,2)*q3^3 - LP(12,3)*q2^3 - LP(12,4)*q1^3 + LP(12,1)*q1^2*q4 - LP(12,2)*q1^2*q3 - LP(12,3)*q1^2*q2 - LP(12,1)*q2^2*q4 + LP(12,2)*q2^2*q3 - LP(12,4)*q1*q2^2 + LP(12,1)*q3^2*q4 - LP(12,3)*q2*q3^2 + LP(12,4)*q1*q3^2 + LP(12,2)*q3*q4^2 + LP(12,3)*q2*q4^2 - LP(12,4)*q1*q4^2 + 2*LP(12,1)*q1*q2*q3 + 2*LP(12,2)*q1*q2*q4 - 2*LP(12,3)*q1*q3*q4 - 2*LP(12,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(13) = -(2*(LP(13,1)*q4^3 + LP(13,2)*q3^3 - LP(13,3)*q2^3 - LP(13,4)*q1^3 + LP(13,1)*q1^2*q4 - LP(13,2)*q1^2*q3 - LP(13,3)*q1^2*q2 - LP(13,1)*q2^2*q4 + LP(13,2)*q2^2*q3 - LP(13,4)*q1*q2^2 + LP(13,1)*q3^2*q4 - LP(13,3)*q2*q3^2 + LP(13,4)*q1*q3^2 + LP(13,2)*q3*q4^2 + LP(13,3)*q2*q4^2 - LP(13,4)*q1*q4^2 + 2*LP(13,1)*q1*q2*q3 + 2*LP(13,2)*q1*q2*q4 - 2*LP(13,3)*q1*q3*q4 - 2*LP(13,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(14) = -(2*(LP(14,1)*q4^3 + LP(14,2)*q3^3 - LP(14,3)*q2^3 - LP(14,4)*q1^3 + LP(14,1)*q1^2*q4 - LP(14,2)*q1^2*q3 - LP(14,3)*q1^2*q2 - LP(14,1)*q2^2*q4 + LP(14,2)*q2^2*q3 - LP(14,4)*q1*q2^2 + LP(14,1)*q3^2*q4 - LP(14,3)*q2*q3^2 + LP(14,4)*q1*q3^2 + LP(14,2)*q3*q4^2 + LP(14,3)*q2*q4^2 - LP(14,4)*q1*q4^2 + 2*LP(14,1)*q1*q2*q3 + 2*LP(14,2)*q1*q2*q4 - 2*LP(14,3)*q1*q3*q4 - 2*LP(14,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(15) = -(2*(LP(15,1)*q4^3 + LP(15,2)*q3^3 - LP(15,3)*q2^3 - LP(15,4)*q1^3 + LP(15,1)*q1^2*q4 - LP(15,2)*q1^2*q3 - LP(15,3)*q1^2*q2 - LP(15,1)*q2^2*q4 + LP(15,2)*q2^2*q3 - LP(15,4)*q1*q2^2 + LP(15,1)*q3^2*q4 - LP(15,3)*q2*q3^2 + LP(15,4)*q1*q3^2 + LP(15,2)*q3*q4^2 + LP(15,3)*q2*q4^2 - LP(15,4)*q1*q4^2 + 2*LP(15,1)*q1*q2*q3 + 2*LP(15,2)*q1*q2*q4 - 2*LP(15,3)*q1*q3*q4 - 2*LP(15,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(16) = -(2*(LP(16,1)*q4^3 + LP(16,2)*q3^3 - LP(16,3)*q2^3 - LP(16,4)*q1^3 + LP(16,1)*q1^2*q4 - LP(16,2)*q1^2*q3 - LP(16,3)*q1^2*q2 - LP(16,1)*q2^2*q4 + LP(16,2)*q2^2*q3 - LP(16,4)*q1*q2^2 + LP(16,1)*q3^2*q4 - LP(16,3)*q2*q3^2 + LP(16,4)*q1*q3^2 + LP(16,2)*q3*q4^2 + LP(16,3)*q2*q4^2 - LP(16,4)*q1*q4^2 + 2*LP(16,1)*q1*q2*q3 + 2*LP(16,2)*q1*q2*q4 - 2*LP(16,3)*q1*q3*q4 - 2*LP(16,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(17) = -(2*(LP(17,1)*q4^3 + LP(17,2)*q3^3 - LP(17,3)*q2^3 - LP(17,4)*q1^3 + LP(17,1)*q1^2*q4 - LP(17,2)*q1^2*q3 - LP(17,3)*q1^2*q2 - LP(17,1)*q2^2*q4 + LP(17,2)*q2^2*q3 - LP(17,4)*q1*q2^2 + LP(17,1)*q3^2*q4 - LP(17,3)*q2*q3^2 + LP(17,4)*q1*q3^2 + LP(17,2)*q3*q4^2 + LP(17,3)*q2*q4^2 - LP(17,4)*q1*q4^2 + 2*LP(17,1)*q1*q2*q3 + 2*LP(17,2)*q1*q2*q4 - 2*LP(17,3)*q1*q3*q4 - 2*LP(17,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(18) = -(2*(LP(18,1)*q4^3 + LP(18,2)*q3^3 - LP(18,3)*q2^3 - LP(18,4)*q1^3 + LP(18,1)*q1^2*q4 - LP(18,2)*q1^2*q3 - LP(18,3)*q1^2*q2 - LP(18,1)*q2^2*q4 + LP(18,2)*q2^2*q3 - LP(18,4)*q1*q2^2 + LP(18,1)*q3^2*q4 - LP(18,3)*q2*q3^2 + LP(18,4)*q1*q3^2 + LP(18,2)*q3*q4^2 + LP(18,3)*q2*q4^2 - LP(18,4)*q1*q4^2 + 2*LP(18,1)*q1*q2*q3 + 2*LP(18,2)*q1*q2*q4 - 2*LP(18,3)*q1*q3*q4 - 2*LP(18,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(19) = -(2*(LP(19,1)*q4^3 + LP(19,2)*q3^3 - LP(19,3)*q2^3 - LP(19,4)*q1^3 + LP(19,1)*q1^2*q4 - LP(19,2)*q1^2*q3 - LP(19,3)*q1^2*q2 - LP(19,1)*q2^2*q4 + LP(19,2)*q2^2*q3 - LP(19,4)*q1*q2^2 + LP(19,1)*q3^2*q4 - LP(19,3)*q2*q3^2 + LP(19,4)*q1*q3^2 + LP(19,2)*q3*q4^2 + LP(19,3)*q2*q4^2 - LP(19,4)*q1*q4^2 + 2*LP(19,1)*q1*q2*q3 + 2*LP(19,2)*q1*q2*q4 - 2*LP(19,3)*q1*q3*q4 - 2*LP(19,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(20) = -(2*(LP(20,1)*q4^3 + LP(20,2)*q3^3 - LP(20,3)*q2^3 - LP(20,4)*q1^3 + LP(20,1)*q1^2*q4 - LP(20,2)*q1^2*q3 - LP(20,3)*q1^2*q2 - LP(20,1)*q2^2*q4 + LP(20,2)*q2^2*q3 - LP(20,4)*q1*q2^2 + LP(20,1)*q3^2*q4 - LP(20,3)*q2*q3^2 + LP(20,4)*q1*q3^2 + LP(20,2)*q3*q4^2 + LP(20,3)*q2*q4^2 - LP(20,4)*q1*q4^2 + 2*LP(20,1)*q1*q2*q3 + 2*LP(20,2)*q1*q2*q4 - 2*LP(20,3)*q1*q3*q4 - 2*LP(20,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(21) = -(2*(LP(21,1)*q4^3 + LP(21,2)*q3^3 - LP(21,3)*q2^3 - LP(21,4)*q1^3 + LP(21,1)*q1^2*q4 - LP(21,2)*q1^2*q3 - LP(21,3)*q1^2*q2 - LP(21,1)*q2^2*q4 + LP(21,2)*q2^2*q3 - LP(21,4)*q1*q2^2 + LP(21,1)*q3^2*q4 - LP(21,3)*q2*q3^2 + LP(21,4)*q1*q3^2 + LP(21,2)*q3*q4^2 + LP(21,3)*q2*q4^2 - LP(21,4)*q1*q4^2 + 2*LP(21,1)*q1*q2*q3 + 2*LP(21,2)*q1*q2*q4 - 2*LP(21,3)*q1*q3*q4 - 2*LP(21,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(22) = -(2*(LP(22,1)*q4^3 + LP(22,2)*q3^3 - LP(22,3)*q2^3 - LP(22,4)*q1^3 + LP(22,1)*q1^2*q4 - LP(22,2)*q1^2*q3 - LP(22,3)*q1^2*q2 - LP(22,1)*q2^2*q4 + LP(22,2)*q2^2*q3 - LP(22,4)*q1*q2^2 + LP(22,1)*q3^2*q4 - LP(22,3)*q2*q3^2 + LP(22,4)*q1*q3^2 + LP(22,2)*q3*q4^2 + LP(22,3)*q2*q4^2 - LP(22,4)*q1*q4^2 + 2*LP(22,1)*q1*q2*q3 + 2*LP(22,2)*q1*q2*q4 - 2*LP(22,3)*q1*q3*q4 - 2*LP(22,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
K_gain(23) = -(2*(LP(23,1)*q4^3 + LP(23,2)*q3^3 - LP(23,3)*q2^3 - LP(23,4)*q1^3 + LP(23,1)*q1^2*q4 - LP(23,2)*q1^2*q3 - LP(23,3)*q1^2*q2 - LP(23,1)*q2^2*q4 + LP(23,2)*q2^2*q3 - LP(23,4)*q1*q2^2 + LP(23,1)*q3^2*q4 - LP(23,3)*q2*q3^2 + LP(23,4)*q1*q3^2 + LP(23,2)*q3*q4^2 + LP(23,3)*q2*q4^2 - LP(23,4)*q1*q4^2 + 2*LP(23,1)*q1*q2*q3 + 2*LP(23,2)*q1*q2*q4 - 2*LP(23,3)*q1*q3*q4 - 2*LP(23,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 - q2^2*q4 + q3^2*q4 + q4^3 + 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 - LP(1,1)*q2^2*q4 + LP(1,1)*q3^2*q4 - LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 + LP(2,1)*q3*q4^2 - LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 + LP(3,1)*q2*q4^2 - LP(4,1)*q1*q2^2 + LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 + 2*LP(1,1)*q1*q2*q3 + 2*LP(2,1)*q1*q2*q4 - 2*LP(3,1)*q1*q3*q4 - 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) + (4*(q2^2*q3 - q1^2*q3 + q3*q4^2 + q3^3 + 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 - LP(1,2)*q2^2*q4 + LP(1,2)*q3^2*q4 - LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 + LP(2,2)*q3*q4^2 - LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 + LP(3,2)*q2*q4^2 - LP(4,2)*q1*q2^2 + LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 + 2*LP(1,2)*q1*q2*q3 + 2*LP(2,2)*q1*q2*q4 - 2*LP(3,2)*q1*q3*q4 - 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1^2*q2 + q2*q3^2 - q2*q4^2 + q2^3 + 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 - LP(1,3)*q2^2*q4 + LP(1,3)*q3^2*q4 - LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 + LP(2,3)*q3*q4^2 - LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 + LP(3,3)*q2*q4^2 - LP(4,3)*q1*q2^2 + LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 + 2*LP(1,3)*q1*q2*q3 + 2*LP(2,3)*q1*q2*q4 - 2*LP(3,3)*q1*q3*q4 - 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)) - (4*(q1*q2^2 - q1*q3^2 + q1*q4^2 + q1^3 + 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 - LP(1,4)*q2^2*q4 + LP(1,4)*q3^2*q4 - LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 + LP(2,4)*q3*q4^2 - LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 + LP(3,4)*q2*q4^2 - LP(4,4)*q1*q2^2 + LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 + 2*LP(1,4)*q1*q2*q3 + 2*LP(2,4)*q1*q2*q4 - 2*LP(3,4)*q1*q3*q4 - 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 + q2*q3)^2)/(q1^2 + q2^2 - q3^2 - q4^2)^2 + 1)*(q1^2 + q2^2 - q3^2 - q4^2)^2*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4)))*(2*q1^2*q2^2 - 2*q1^2*q3^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 - 2*q2^2*q4^2 + 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 + 8*q1*q2*q3*q4));
H_YAW312 = zeros(1,23);
H_YAW312(1) = -(2*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2);
H_YAW312(2) = -(2*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2);
H_YAW312(3) = (2*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2);
H_YAW312(4) = (2*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2);
K_gain = zeros(23,1);
K_gain(1) = -(2*(LP(1,1)*q4^3 + LP(1,2)*q3^3 - LP(1,3)*q2^3 - LP(1,4)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,2)*q1^2*q3 + LP(1,3)*q1^2*q2 + LP(1,1)*q2^2*q4 + LP(1,2)*q2^2*q3 + LP(1,4)*q1*q2^2 - LP(1,1)*q3^2*q4 - LP(1,3)*q2*q3^2 - LP(1,4)*q1*q3^2 - LP(1,2)*q3*q4^2 - LP(1,3)*q2*q4^2 - LP(1,4)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(1,2)*q1*q2*q4 + 2*LP(1,3)*q1*q3*q4 + 2*LP(1,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(2) = -(2*(LP(2,1)*q4^3 + LP(2,2)*q3^3 - LP(2,3)*q2^3 - LP(2,4)*q1^3 + LP(2,1)*q1^2*q4 + LP(2,2)*q1^2*q3 + LP(2,3)*q1^2*q2 + LP(2,1)*q2^2*q4 + LP(2,2)*q2^2*q3 + LP(2,4)*q1*q2^2 - LP(2,1)*q3^2*q4 - LP(2,3)*q2*q3^2 - LP(2,4)*q1*q3^2 - LP(2,2)*q3*q4^2 - LP(2,3)*q2*q4^2 - LP(2,4)*q1*q4^2 - 2*LP(2,1)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(2,3)*q1*q3*q4 + 2*LP(2,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(3) = -(2*(LP(3,1)*q4^3 + LP(3,2)*q3^3 - LP(3,3)*q2^3 - LP(3,4)*q1^3 + LP(3,1)*q1^2*q4 + LP(3,2)*q1^2*q3 + LP(3,3)*q1^2*q2 + LP(3,1)*q2^2*q4 + LP(3,2)*q2^2*q3 + LP(3,4)*q1*q2^2 - LP(3,1)*q3^2*q4 - LP(3,3)*q2*q3^2 - LP(3,4)*q1*q3^2 - LP(3,2)*q3*q4^2 - LP(3,3)*q2*q4^2 - LP(3,4)*q1*q4^2 - 2*LP(3,1)*q1*q2*q3 - 2*LP(3,2)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(3,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(4) = -(2*(LP(4,1)*q4^3 + LP(4,2)*q3^3 - LP(4,3)*q2^3 - LP(4,4)*q1^3 + LP(4,1)*q1^2*q4 + LP(4,2)*q1^2*q3 + LP(4,3)*q1^2*q2 + LP(4,1)*q2^2*q4 + LP(4,2)*q2^2*q3 + LP(4,4)*q1*q2^2 - LP(4,1)*q3^2*q4 - LP(4,3)*q2*q3^2 - LP(4,4)*q1*q3^2 - LP(4,2)*q3*q4^2 - LP(4,3)*q2*q4^2 - LP(4,4)*q1*q4^2 - 2*LP(4,1)*q1*q2*q3 - 2*LP(4,2)*q1*q2*q4 + 2*LP(4,3)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(5) = -(2*(LP(5,1)*q4^3 + LP(5,2)*q3^3 - LP(5,3)*q2^3 - LP(5,4)*q1^3 + LP(5,1)*q1^2*q4 + LP(5,2)*q1^2*q3 + LP(5,3)*q1^2*q2 + LP(5,1)*q2^2*q4 + LP(5,2)*q2^2*q3 + LP(5,4)*q1*q2^2 - LP(5,1)*q3^2*q4 - LP(5,3)*q2*q3^2 - LP(5,4)*q1*q3^2 - LP(5,2)*q3*q4^2 - LP(5,3)*q2*q4^2 - LP(5,4)*q1*q4^2 - 2*LP(5,1)*q1*q2*q3 - 2*LP(5,2)*q1*q2*q4 + 2*LP(5,3)*q1*q3*q4 + 2*LP(5,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(6) = -(2*(LP(6,1)*q4^3 + LP(6,2)*q3^3 - LP(6,3)*q2^3 - LP(6,4)*q1^3 + LP(6,1)*q1^2*q4 + LP(6,2)*q1^2*q3 + LP(6,3)*q1^2*q2 + LP(6,1)*q2^2*q4 + LP(6,2)*q2^2*q3 + LP(6,4)*q1*q2^2 - LP(6,1)*q3^2*q4 - LP(6,3)*q2*q3^2 - LP(6,4)*q1*q3^2 - LP(6,2)*q3*q4^2 - LP(6,3)*q2*q4^2 - LP(6,4)*q1*q4^2 - 2*LP(6,1)*q1*q2*q3 - 2*LP(6,2)*q1*q2*q4 + 2*LP(6,3)*q1*q3*q4 + 2*LP(6,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(7) = -(2*(LP(7,1)*q4^3 + LP(7,2)*q3^3 - LP(7,3)*q2^3 - LP(7,4)*q1^3 + LP(7,1)*q1^2*q4 + LP(7,2)*q1^2*q3 + LP(7,3)*q1^2*q2 + LP(7,1)*q2^2*q4 + LP(7,2)*q2^2*q3 + LP(7,4)*q1*q2^2 - LP(7,1)*q3^2*q4 - LP(7,3)*q2*q3^2 - LP(7,4)*q1*q3^2 - LP(7,2)*q3*q4^2 - LP(7,3)*q2*q4^2 - LP(7,4)*q1*q4^2 - 2*LP(7,1)*q1*q2*q3 - 2*LP(7,2)*q1*q2*q4 + 2*LP(7,3)*q1*q3*q4 + 2*LP(7,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(8) = -(2*(LP(8,1)*q4^3 + LP(8,2)*q3^3 - LP(8,3)*q2^3 - LP(8,4)*q1^3 + LP(8,1)*q1^2*q4 + LP(8,2)*q1^2*q3 + LP(8,3)*q1^2*q2 + LP(8,1)*q2^2*q4 + LP(8,2)*q2^2*q3 + LP(8,4)*q1*q2^2 - LP(8,1)*q3^2*q4 - LP(8,3)*q2*q3^2 - LP(8,4)*q1*q3^2 - LP(8,2)*q3*q4^2 - LP(8,3)*q2*q4^2 - LP(8,4)*q1*q4^2 - 2*LP(8,1)*q1*q2*q3 - 2*LP(8,2)*q1*q2*q4 + 2*LP(8,3)*q1*q3*q4 + 2*LP(8,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(9) = -(2*(LP(9,1)*q4^3 + LP(9,2)*q3^3 - LP(9,3)*q2^3 - LP(9,4)*q1^3 + LP(9,1)*q1^2*q4 + LP(9,2)*q1^2*q3 + LP(9,3)*q1^2*q2 + LP(9,1)*q2^2*q4 + LP(9,2)*q2^2*q3 + LP(9,4)*q1*q2^2 - LP(9,1)*q3^2*q4 - LP(9,3)*q2*q3^2 - LP(9,4)*q1*q3^2 - LP(9,2)*q3*q4^2 - LP(9,3)*q2*q4^2 - LP(9,4)*q1*q4^2 - 2*LP(9,1)*q1*q2*q3 - 2*LP(9,2)*q1*q2*q4 + 2*LP(9,3)*q1*q3*q4 + 2*LP(9,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(10) = -(2*(LP(10,1)*q4^3 + LP(10,2)*q3^3 - LP(10,3)*q2^3 - LP(10,4)*q1^3 + LP(10,1)*q1^2*q4 + LP(10,2)*q1^2*q3 + LP(10,3)*q1^2*q2 + LP(10,1)*q2^2*q4 + LP(10,2)*q2^2*q3 + LP(10,4)*q1*q2^2 - LP(10,1)*q3^2*q4 - LP(10,3)*q2*q3^2 - LP(10,4)*q1*q3^2 - LP(10,2)*q3*q4^2 - LP(10,3)*q2*q4^2 - LP(10,4)*q1*q4^2 - 2*LP(10,1)*q1*q2*q3 - 2*LP(10,2)*q1*q2*q4 + 2*LP(10,3)*q1*q3*q4 + 2*LP(10,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(11) = -(2*(LP(11,1)*q4^3 + LP(11,2)*q3^3 - LP(11,3)*q2^3 - LP(11,4)*q1^3 + LP(11,1)*q1^2*q4 + LP(11,2)*q1^2*q3 + LP(11,3)*q1^2*q2 + LP(11,1)*q2^2*q4 + LP(11,2)*q2^2*q3 + LP(11,4)*q1*q2^2 - LP(11,1)*q3^2*q4 - LP(11,3)*q2*q3^2 - LP(11,4)*q1*q3^2 - LP(11,2)*q3*q4^2 - LP(11,3)*q2*q4^2 - LP(11,4)*q1*q4^2 - 2*LP(11,1)*q1*q2*q3 - 2*LP(11,2)*q1*q2*q4 + 2*LP(11,3)*q1*q3*q4 + 2*LP(11,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(12) = -(2*(LP(12,1)*q4^3 + LP(12,2)*q3^3 - LP(12,3)*q2^3 - LP(12,4)*q1^3 + LP(12,1)*q1^2*q4 + LP(12,2)*q1^2*q3 + LP(12,3)*q1^2*q2 + LP(12,1)*q2^2*q4 + LP(12,2)*q2^2*q3 + LP(12,4)*q1*q2^2 - LP(12,1)*q3^2*q4 - LP(12,3)*q2*q3^2 - LP(12,4)*q1*q3^2 - LP(12,2)*q3*q4^2 - LP(12,3)*q2*q4^2 - LP(12,4)*q1*q4^2 - 2*LP(12,1)*q1*q2*q3 - 2*LP(12,2)*q1*q2*q4 + 2*LP(12,3)*q1*q3*q4 + 2*LP(12,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(13) = -(2*(LP(13,1)*q4^3 + LP(13,2)*q3^3 - LP(13,3)*q2^3 - LP(13,4)*q1^3 + LP(13,1)*q1^2*q4 + LP(13,2)*q1^2*q3 + LP(13,3)*q1^2*q2 + LP(13,1)*q2^2*q4 + LP(13,2)*q2^2*q3 + LP(13,4)*q1*q2^2 - LP(13,1)*q3^2*q4 - LP(13,3)*q2*q3^2 - LP(13,4)*q1*q3^2 - LP(13,2)*q3*q4^2 - LP(13,3)*q2*q4^2 - LP(13,4)*q1*q4^2 - 2*LP(13,1)*q1*q2*q3 - 2*LP(13,2)*q1*q2*q4 + 2*LP(13,3)*q1*q3*q4 + 2*LP(13,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(14) = -(2*(LP(14,1)*q4^3 + LP(14,2)*q3^3 - LP(14,3)*q2^3 - LP(14,4)*q1^3 + LP(14,1)*q1^2*q4 + LP(14,2)*q1^2*q3 + LP(14,3)*q1^2*q2 + LP(14,1)*q2^2*q4 + LP(14,2)*q2^2*q3 + LP(14,4)*q1*q2^2 - LP(14,1)*q3^2*q4 - LP(14,3)*q2*q3^2 - LP(14,4)*q1*q3^2 - LP(14,2)*q3*q4^2 - LP(14,3)*q2*q4^2 - LP(14,4)*q1*q4^2 - 2*LP(14,1)*q1*q2*q3 - 2*LP(14,2)*q1*q2*q4 + 2*LP(14,3)*q1*q3*q4 + 2*LP(14,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(15) = -(2*(LP(15,1)*q4^3 + LP(15,2)*q3^3 - LP(15,3)*q2^3 - LP(15,4)*q1^3 + LP(15,1)*q1^2*q4 + LP(15,2)*q1^2*q3 + LP(15,3)*q1^2*q2 + LP(15,1)*q2^2*q4 + LP(15,2)*q2^2*q3 + LP(15,4)*q1*q2^2 - LP(15,1)*q3^2*q4 - LP(15,3)*q2*q3^2 - LP(15,4)*q1*q3^2 - LP(15,2)*q3*q4^2 - LP(15,3)*q2*q4^2 - LP(15,4)*q1*q4^2 - 2*LP(15,1)*q1*q2*q3 - 2*LP(15,2)*q1*q2*q4 + 2*LP(15,3)*q1*q3*q4 + 2*LP(15,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(16) = -(2*(LP(16,1)*q4^3 + LP(16,2)*q3^3 - LP(16,3)*q2^3 - LP(16,4)*q1^3 + LP(16,1)*q1^2*q4 + LP(16,2)*q1^2*q3 + LP(16,3)*q1^2*q2 + LP(16,1)*q2^2*q4 + LP(16,2)*q2^2*q3 + LP(16,4)*q1*q2^2 - LP(16,1)*q3^2*q4 - LP(16,3)*q2*q3^2 - LP(16,4)*q1*q3^2 - LP(16,2)*q3*q4^2 - LP(16,3)*q2*q4^2 - LP(16,4)*q1*q4^2 - 2*LP(16,1)*q1*q2*q3 - 2*LP(16,2)*q1*q2*q4 + 2*LP(16,3)*q1*q3*q4 + 2*LP(16,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(17) = -(2*(LP(17,1)*q4^3 + LP(17,2)*q3^3 - LP(17,3)*q2^3 - LP(17,4)*q1^3 + LP(17,1)*q1^2*q4 + LP(17,2)*q1^2*q3 + LP(17,3)*q1^2*q2 + LP(17,1)*q2^2*q4 + LP(17,2)*q2^2*q3 + LP(17,4)*q1*q2^2 - LP(17,1)*q3^2*q4 - LP(17,3)*q2*q3^2 - LP(17,4)*q1*q3^2 - LP(17,2)*q3*q4^2 - LP(17,3)*q2*q4^2 - LP(17,4)*q1*q4^2 - 2*LP(17,1)*q1*q2*q3 - 2*LP(17,2)*q1*q2*q4 + 2*LP(17,3)*q1*q3*q4 + 2*LP(17,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(18) = -(2*(LP(18,1)*q4^3 + LP(18,2)*q3^3 - LP(18,3)*q2^3 - LP(18,4)*q1^3 + LP(18,1)*q1^2*q4 + LP(18,2)*q1^2*q3 + LP(18,3)*q1^2*q2 + LP(18,1)*q2^2*q4 + LP(18,2)*q2^2*q3 + LP(18,4)*q1*q2^2 - LP(18,1)*q3^2*q4 - LP(18,3)*q2*q3^2 - LP(18,4)*q1*q3^2 - LP(18,2)*q3*q4^2 - LP(18,3)*q2*q4^2 - LP(18,4)*q1*q4^2 - 2*LP(18,1)*q1*q2*q3 - 2*LP(18,2)*q1*q2*q4 + 2*LP(18,3)*q1*q3*q4 + 2*LP(18,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(19) = -(2*(LP(19,1)*q4^3 + LP(19,2)*q3^3 - LP(19,3)*q2^3 - LP(19,4)*q1^3 + LP(19,1)*q1^2*q4 + LP(19,2)*q1^2*q3 + LP(19,3)*q1^2*q2 + LP(19,1)*q2^2*q4 + LP(19,2)*q2^2*q3 + LP(19,4)*q1*q2^2 - LP(19,1)*q3^2*q4 - LP(19,3)*q2*q3^2 - LP(19,4)*q1*q3^2 - LP(19,2)*q3*q4^2 - LP(19,3)*q2*q4^2 - LP(19,4)*q1*q4^2 - 2*LP(19,1)*q1*q2*q3 - 2*LP(19,2)*q1*q2*q4 + 2*LP(19,3)*q1*q3*q4 + 2*LP(19,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(20) = -(2*(LP(20,1)*q4^3 + LP(20,2)*q3^3 - LP(20,3)*q2^3 - LP(20,4)*q1^3 + LP(20,1)*q1^2*q4 + LP(20,2)*q1^2*q3 + LP(20,3)*q1^2*q2 + LP(20,1)*q2^2*q4 + LP(20,2)*q2^2*q3 + LP(20,4)*q1*q2^2 - LP(20,1)*q3^2*q4 - LP(20,3)*q2*q3^2 - LP(20,4)*q1*q3^2 - LP(20,2)*q3*q4^2 - LP(20,3)*q2*q4^2 - LP(20,4)*q1*q4^2 - 2*LP(20,1)*q1*q2*q3 - 2*LP(20,2)*q1*q2*q4 + 2*LP(20,3)*q1*q3*q4 + 2*LP(20,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(21) = -(2*(LP(21,1)*q4^3 + LP(21,2)*q3^3 - LP(21,3)*q2^3 - LP(21,4)*q1^3 + LP(21,1)*q1^2*q4 + LP(21,2)*q1^2*q3 + LP(21,3)*q1^2*q2 + LP(21,1)*q2^2*q4 + LP(21,2)*q2^2*q3 + LP(21,4)*q1*q2^2 - LP(21,1)*q3^2*q4 - LP(21,3)*q2*q3^2 - LP(21,4)*q1*q3^2 - LP(21,2)*q3*q4^2 - LP(21,3)*q2*q4^2 - LP(21,4)*q1*q4^2 - 2*LP(21,1)*q1*q2*q3 - 2*LP(21,2)*q1*q2*q4 + 2*LP(21,3)*q1*q3*q4 + 2*LP(21,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(22) = -(2*(LP(22,1)*q4^3 + LP(22,2)*q3^3 - LP(22,3)*q2^3 - LP(22,4)*q1^3 + LP(22,1)*q1^2*q4 + LP(22,2)*q1^2*q3 + LP(22,3)*q1^2*q2 + LP(22,1)*q2^2*q4 + LP(22,2)*q2^2*q3 + LP(22,4)*q1*q2^2 - LP(22,1)*q3^2*q4 - LP(22,3)*q2*q3^2 - LP(22,4)*q1*q3^2 - LP(22,2)*q3*q4^2 - LP(22,3)*q2*q4^2 - LP(22,4)*q1*q4^2 - 2*LP(22,1)*q1*q2*q3 - 2*LP(22,2)*q1*q2*q4 + 2*LP(22,3)*q1*q3*q4 + 2*LP(22,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
K_gain(23) = -(2*(LP(23,1)*q4^3 + LP(23,2)*q3^3 - LP(23,3)*q2^3 - LP(23,4)*q1^3 + LP(23,1)*q1^2*q4 + LP(23,2)*q1^2*q3 + LP(23,3)*q1^2*q2 + LP(23,1)*q2^2*q4 + LP(23,2)*q2^2*q3 + LP(23,4)*q1*q2^2 - LP(23,1)*q3^2*q4 - LP(23,3)*q2*q3^2 - LP(23,4)*q1*q3^2 - LP(23,2)*q3*q4^2 - LP(23,3)*q2*q4^2 - LP(23,4)*q1*q4^2 - 2*LP(23,1)*q1*q2*q3 - 2*LP(23,2)*q1*q2*q4 + 2*LP(23,3)*q1*q3*q4 + 2*LP(23,4)*q2*q3*q4))/((ryaw + (4*(q1^2*q4 + q2^2*q4 - q3^2*q4 + q4^3 - 2*q1*q2*q3)*(LP(1,1)*q4^3 + LP(2,1)*q3^3 - LP(3,1)*q2^3 - LP(4,1)*q1^3 + LP(1,1)*q1^2*q4 + LP(1,1)*q2^2*q4 - LP(1,1)*q3^2*q4 + LP(2,1)*q1^2*q3 + LP(2,1)*q2^2*q3 - LP(2,1)*q3*q4^2 + LP(3,1)*q1^2*q2 - LP(3,1)*q2*q3^2 - LP(3,1)*q2*q4^2 + LP(4,1)*q1*q2^2 - LP(4,1)*q1*q3^2 - LP(4,1)*q1*q4^2 - 2*LP(1,1)*q1*q2*q3 - 2*LP(2,1)*q1*q2*q4 + 2*LP(3,1)*q1*q3*q4 + 2*LP(4,1)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) + (4*(q1^2*q3 + q2^2*q3 - q3*q4^2 + q3^3 - 2*q1*q2*q4)*(LP(1,2)*q4^3 + LP(2,2)*q3^3 - LP(3,2)*q2^3 - LP(4,2)*q1^3 + LP(1,2)*q1^2*q4 + LP(1,2)*q2^2*q4 - LP(1,2)*q3^2*q4 + LP(2,2)*q1^2*q3 + LP(2,2)*q2^2*q3 - LP(2,2)*q3*q4^2 + LP(3,2)*q1^2*q2 - LP(3,2)*q2*q3^2 - LP(3,2)*q2*q4^2 + LP(4,2)*q1*q2^2 - LP(4,2)*q1*q3^2 - LP(4,2)*q1*q4^2 - 2*LP(1,2)*q1*q2*q3 - 2*LP(2,2)*q1*q2*q4 + 2*LP(3,2)*q1*q3*q4 + 2*LP(4,2)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q2*q3^2 - q1^2*q2 + q2*q4^2 + q2^3 - 2*q1*q3*q4)*(LP(1,3)*q4^3 + LP(2,3)*q3^3 - LP(3,3)*q2^3 - LP(4,3)*q1^3 + LP(1,3)*q1^2*q4 + LP(1,3)*q2^2*q4 - LP(1,3)*q3^2*q4 + LP(2,3)*q1^2*q3 + LP(2,3)*q2^2*q3 - LP(2,3)*q3*q4^2 + LP(3,3)*q1^2*q2 - LP(3,3)*q2*q3^2 - LP(3,3)*q2*q4^2 + LP(4,3)*q1*q2^2 - LP(4,3)*q1*q3^2 - LP(4,3)*q1*q4^2 - 2*LP(1,3)*q1*q2*q3 - 2*LP(2,3)*q1*q2*q4 + 2*LP(3,3)*q1*q3*q4 + 2*LP(4,3)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)) - (4*(q1*q3^2 - q1*q2^2 + q1*q4^2 + q1^3 - 2*q2*q3*q4)*(LP(1,4)*q4^3 + LP(2,4)*q3^3 - LP(3,4)*q2^3 - LP(4,4)*q1^3 + LP(1,4)*q1^2*q4 + LP(1,4)*q2^2*q4 - LP(1,4)*q3^2*q4 + LP(2,4)*q1^2*q3 + LP(2,4)*q2^2*q3 - LP(2,4)*q3*q4^2 + LP(3,4)*q1^2*q2 - LP(3,4)*q2*q3^2 - LP(3,4)*q2*q4^2 + LP(4,4)*q1*q2^2 - LP(4,4)*q1*q3^2 - LP(4,4)*q1*q4^2 - 2*LP(1,4)*q1*q2*q3 - 2*LP(2,4)*q1*q2*q4 + 2*LP(3,4)*q1*q3*q4 + 2*LP(4,4)*q2*q3*q4))/(((4*(q1*q4 - q2*q3)^2)/(q1^2 - q2^2 + q3^2 - q4^2)^2 + 1)*(q1^2 - q2^2 + q3^2 - q4^2)^2*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4)))*(2*q1^2*q3^2 - 2*q1^2*q2^2 + 2*q1^2*q4^2 + 2*q2^2*q3^2 + 2*q2^2*q4^2 - 2*q3^2*q4^2 + q1^4 + q2^4 + q3^4 + q4^4 - 8*q1*q2*q3*q4));
H_BARO = zeros(1,23);
H_BARO(10) = -1;
H_BARO(23) = 1;
OK_BARO = zeros(1,1);
OK_BARO(1) = 1/(LP(10,10) - LP(10,23) - LP(23,10) + LP(23,23) + rbaro);
K_gain = zeros(23,1);
K_gain(1) = -OK_BARO(1)*(LP(1,10) - LP(1,23));
K_gain(2) = -OK_BARO(1)*(LP(2,10) - LP(2,23));
K_gain(3) = -OK_BARO(1)*(LP(3,10) - LP(3,23));
K_gain(4) = -OK_BARO(1)*(LP(4,10) - LP(4,23));
K_gain(5) = -OK_BARO(1)*(LP(5,10) - LP(5,23));
K_gain(6) = -OK_BARO(1)*(LP(6,10) - LP(6,23));
K_gain(7) = -OK_BARO(1)*(LP(7,10) - LP(7,23));
K_gain(8) = -OK_BARO(1)*(LP(8,10) - LP(8,23));
K_gain(9) = -OK_BARO(1)*(LP(9,10) - LP(9,23));
K_gain(10) = -OK_BARO(1)*(LP(10,10) - LP(10,23));
K_gain(11) = -OK_BARO(1)*(LP(11,10) - LP(11,23));
K_gain(12) = -OK_BARO(1)*(LP(12,10) - LP(12,23));
K_gain(13) = -OK_BARO(1)*(LP(13,10) - LP(13,23));
K_gain(14) = -OK_BARO(1)*(LP(14,10) - LP(14,23));
K_gain(15) = -OK_BARO(1)*(LP(15,10) - LP(15,23));
K_gain(16) = -OK_BARO(1)*(LP(16,10) - LP(16,23));
K_gain(17) = -OK_BARO(1)*(LP(17,10) - LP(17,23));
K_gain(18) = -OK_BARO(1)*(LP(18,10) - LP(18,23));
K_gain(19) = -OK_BARO(1)*(LP(19,10) - LP(19,23));
K_gain(20) = -OK_BARO(1)*(LP(20,10) - LP(20,23));
K_gain(21) = -OK_BARO(1)*(LP(21,10) - LP(21,23));
K_gain(22) = -OK_BARO(1)*(LP(22,10) - LP(22,23));
K_gain(23) = -OK_BARO(1)*(LP(23,10) - LP(23,23));
